/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DefaultCallbackHandler,
  DefaultCallbackHandlerInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/handler/DefaultCallbackHandler";

const _abi = [
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610579806100206000396000f3fe608060405234801561001057600080fd5b506004361061006c5760003560e01c806223de291461007157806301ffc9a71461008b578063150b7a02146100b3578063a3f4df7e146100eb578063bc197c811461012f578063f23a6e6114610151578063ffa1ad7414610171575b600080fd5b61008961007f366004610291565b5050505050505050565b005b61009e6100993660046104bd565b610195565b60405190151581526020015b60405180910390f35b6100d26100c13660046103d6565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100aa565b610122604051806040016040528060188152602001772232b330bab63a1021b0b6363130b1b5902430b7323632b960411b81525081565b6040516100aa91906104ee565b6100d261013d36600461033c565b63bc197c8160e01b98975050505050505050565b6100d261015f366004610445565b63f23a6e6160e01b9695505050505050565b610122604051806040016040528060058152602001640312e302e360dc1b81525081565b60006001600160e01b03198216630271189760e51b14806101c657506001600160e01b03198216630a85bd0160e11b145b806101e157506001600160e01b031982166301ffc9a760e01b145b92915050565b80356001600160a01b03811681146101fe57600080fd5b919050565b60008083601f84011261021557600080fd5b50813567ffffffffffffffff81111561022d57600080fd5b6020830191508360208260051b850101111561024857600080fd5b9250929050565b60008083601f84011261026157600080fd5b50813567ffffffffffffffff81111561027957600080fd5b60208301915083602082850101111561024857600080fd5b60008060008060008060008060c0898b0312156102ad57600080fd5b6102b6896101e7565b97506102c460208a016101e7565b96506102d260408a016101e7565b955060608901359450608089013567ffffffffffffffff808211156102f657600080fd5b6103028c838d0161024f565b909650945060a08b013591508082111561031b57600080fd5b506103288b828c0161024f565b999c989b5096995094979396929594505050565b60008060008060008060008060a0898b03121561035857600080fd5b610361896101e7565b975061036f60208a016101e7565b9650604089013567ffffffffffffffff8082111561038c57600080fd5b6103988c838d01610203565b909850965060608b01359150808211156103b157600080fd5b6103bd8c838d01610203565b909650945060808b013591508082111561031b57600080fd5b6000806000806000608086880312156103ee57600080fd5b6103f7866101e7565b9450610405602087016101e7565b935060408601359250606086013567ffffffffffffffff81111561042857600080fd5b6104348882890161024f565b969995985093965092949392505050565b60008060008060008060a0878903121561045e57600080fd5b610467876101e7565b9550610475602088016101e7565b94506040870135935060608701359250608087013567ffffffffffffffff81111561049f57600080fd5b6104ab89828a0161024f565b979a9699509497509295939492505050565b6000602082840312156104cf57600080fd5b81356001600160e01b0319811681146104e757600080fd5b9392505050565b600060208083528351808285015260005b8181101561051b578581018301518582016040015282016104ff565b8181111561052d576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220f85172d6af1e400434dca3ad71bb6582439434708f653369a055913c3843de9764736f6c63430008070033";

type DefaultCallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefaultCallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefaultCallbackHandler__factory extends ContractFactory {
  constructor(...args: DefaultCallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DefaultCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<DefaultCallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DefaultCallbackHandler {
    return super.attach(address) as DefaultCallbackHandler;
  }
  override connect(signer: Signer): DefaultCallbackHandler__factory {
    return super.connect(signer) as DefaultCallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefaultCallbackHandlerInterface {
    return new utils.Interface(_abi) as DefaultCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefaultCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DefaultCallbackHandler;
  }
}
