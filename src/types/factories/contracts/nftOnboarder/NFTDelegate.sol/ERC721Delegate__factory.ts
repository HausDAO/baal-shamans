/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721Delegate,
  ERC721DelegateInterface,
} from "../../../../contracts/nftOnboarder/NFTDelegate.sol/ERC721Delegate";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lootToBurn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "ragequit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611d32806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b857806395d89b411161007c57806395d89b4114610283578063a22cb4651461028b578063b88d4fde1461029e578063c87b56dd146102b1578063e985e9c5146102c4578063f2fde38b146102d757600080fd5b8063715018a6146102315780637a1caaed146102395780638ab656861461024c5780638da5cb5b1461025f5780639281343d1461027057600080fd5b8063314dd075116100ff578063314dd075146101cc57806342842e0e146101df5780635c975abb146101f25780636352211e146101fd57806370a082311461021057600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a36600461190e565b6102ea565b60405190151581526020015b60405180910390f35b61016c61033c565b60405161015b9190611a64565b61018c610187366004611948565b6103ce565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611892565b6103f5565b005b6101b76101c7366004611679565b610510565b6101b76101da36600461181c565b610541565b6101b76101ed366004611679565b6106fa565b60975460ff1661014f565b61018c61020b366004611948565b610715565b61022361021e366004611606565b61074a565b60405190815260200161015b565b6101b76107d0565b6101b761024736600461173a565b6107e4565b6101b761025a366004611640565b610855565b60c9546001600160a01b031661018c565b6101b761027e3660046118be565b610933565b61016c61096f565b6101b76102993660046117e7565b61097e565b6101b76102ac3660046116ba565b61098d565b61016c6102bf366004611948565b6109bf565b61014f6102d2366004611640565b610a33565b6101b76102e5366004611606565b610a61565b60006001600160e01b031982166380ac58cd60e01b148061031b57506001600160e01b03198216635b5e139f60e01b145b8061033657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461034b90611c6a565b80601f016020809104026020016040519081016040528092919081815260200182805461037790611c6a565b80156103c45780601f10610399576101008083540402835291602001916103c4565b820191906000526020600020905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b60006103d982610ada565b506000908152606960205260409020546001600160a01b031690565b600061040082610715565b9050806001600160a01b0316836001600160a01b031614156104735760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061048f575061048f8133610a33565b6105015760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161046a565b61050b8383610aff565b505050565b61051a3382610b6d565b6105365760405162461bcd60e51b815260040161046a90611a77565b61050b838383610bcc565b600054610100900460ff16158080156105615750600054600160ff909116105b8061057b5750303b15801561057b575060005460ff166001145b6105de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161046a565b6000805460ff191660011790558015610601576000805461ff0019166101001790555b82516106445760405162461bcd60e51b81526020600482015260126024820152717368617265733a206e616d6520656d70747960701b604482015260640161046a565b81516106895760405162461bcd60e51b81526020600482015260146024820152737368617265733a2073796d626f6c20656d70747960601b604482015260640161046a565b6106938383610d3d565b61069b610d6e565b6106a3610d9d565b6106ae846001610dcc565b80156106f4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b61050b8383836040518060200160405280600081525061098d565b6000818152606760205260408120546001600160a01b0316806103365760405162461bcd60e51b815260040161046a90611b92565b60006001600160a01b0382166107b45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161046a565b506001600160a01b031660009081526068602052604090205490565b6107d8610de6565b6107e26000610e40565b565b60405163ed0cdf1560e01b815286906001600160a01b0382169063ed0cdf159061081a90899089908990899089906004016119f9565b600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b5050505050505050505050565b60008290506000816001600160a01b0316638009ba1f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089557600080fd5b505afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190611623565b6040516317066a5760e21b81526001600160a01b03858116600483015291925090821690635c19a95c906024015b600060405180830381600087803b15801561091557600080fd5b505af1158015610929573d6000803e3d6000fd5b5050505050505050565b6040516367f61f0760e01b815263ffffffff83166004820152811515602482015283906001600160a01b038216906367f61f07906044016108fb565b60606066805461034b90611c6a565b610989338383610e92565b5050565b6109973383610b6d565b6109b35760405162461bcd60e51b815260040161046a90611a77565b6106f484848484610f5d565b60606109ca82610ada565b60006109e160408051602081019091526000815290565b90506000815111610a015760405180602001604052806000815250610a2c565b80610a0b84610f90565b604051602001610a1c92919061198d565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610a69610de6565b6001600160a01b038116610ace5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046a565b610ad781610e40565b50565b610ae38161102d565b610ad75760405162461bcd60e51b815260040161046a90611b92565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b3482610715565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b7983610715565b9050806001600160a01b0316846001600160a01b03161480610ba05750610ba08185610a33565b80610bc45750836001600160a01b0316610bb9846103ce565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bdf82610715565b6001600160a01b031614610c055760405162461bcd60e51b815260040161046a90611b16565b6001600160a01b038216610c675760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161046a565b610c74838383600161104a565b826001600160a01b0316610c8782610715565b6001600160a01b031614610cad5760405162461bcd60e51b815260040161046a90611b16565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16610d645760405162461bcd60e51b815260040161046a90611bc4565b6109898282611056565b600054610100900460ff16610d955760405162461bcd60e51b815260040161046a90611bc4565b6107e26110a4565b600054610100900460ff16610dc45760405162461bcd60e51b815260040161046a90611bc4565b6107e26110d7565b610989828260405180602001604052806000815250611107565b60c9546001600160a01b031633146107e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046a565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610ef05760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161046a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f68848484610bcc565b610f748484848461113a565b6106f45760405162461bcd60e51b815260040161046a90611ac4565b60606000610f9d83611247565b600101905060008167ffffffffffffffff811115610fbd57610fbd611cbb565b6040519080825280601f01601f191660200182016040528015610fe7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461102057611025565b610ff1565b509392505050565b6000908152606760205260409020546001600160a01b0316151590565b6106f48484848461131f565b600054610100900460ff1661107d5760405162461bcd60e51b815260040161046a90611bc4565b81516110909060659060208501906114c2565b50805161050b9060669060208401906114c2565b600054610100900460ff166110cb5760405162461bcd60e51b815260040161046a90611bc4565b6097805460ff19169055565b600054610100900460ff166110fe5760405162461bcd60e51b815260040161046a90611bc4565b6107e233610e40565b61111183836113a7565b61111e600084848461113a565b61050b5760405162461bcd60e51b815260040161046a90611ac4565b60006001600160a01b0384163b1561123c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061117e9033908990889088906004016119bc565b602060405180830381600087803b15801561119857600080fd5b505af19250505080156111c8575060408051601f3d908101601f191682019092526111c59181019061192b565b60015b611222573d8080156111f6576040519150601f19603f3d011682016040523d82523d6000602084013e6111fb565b606091505b50805161121a5760405162461bcd60e51b815260040161046a90611ac4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bc4565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112865772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112b2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112d057662386f26fc10000830492506010015b6305f5e10083106112e8576305f5e100830492506008015b61271083106112fc57612710830492506004015b6064831061130e576064830492506002015b600a83106103365760010192915050565b60018111156106f4576001600160a01b03841615611365576001600160a01b0384166000908152606860205260408120805483929061135f908490611c27565b90915550505b6001600160a01b038316156106f4576001600160a01b0383166000908152606860205260408120805483929061139c908490611c0f565b909155505050505050565b6001600160a01b0382166113fd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161046a565b6114068161102d565b156114235760405162461bcd60e51b815260040161046a90611b5b565b61143160008383600161104a565b61143a8161102d565b156114575760405162461bcd60e51b815260040161046a90611b5b565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546114ce90611c6a565b90600052602060002090601f0160209004810192826114f05760008555611536565b82601f1061150957805160ff1916838001178555611536565b82800160010185558215611536579182015b8281111561153657825182559160200191906001019061151b565b50611542929150611546565b5090565b5b808211156115425760008155600101611547565b600067ffffffffffffffff8084111561157657611576611cbb565b604051601f8501601f19908116603f0116810190828211818310171561159e5761159e611cbb565b816040528093508581528686860111156115b757600080fd5b858560208301376000602087830101525050509392505050565b803580151581146115e157600080fd5b919050565b600082601f8301126115f757600080fd5b610a2c8383356020850161155b565b60006020828403121561161857600080fd5b8135610a2c81611cd1565b60006020828403121561163557600080fd5b8151610a2c81611cd1565b6000806040838503121561165357600080fd5b823561165e81611cd1565b9150602083013561166e81611cd1565b809150509250929050565b60008060006060848603121561168e57600080fd5b833561169981611cd1565b925060208401356116a981611cd1565b929592945050506040919091013590565b600080600080608085870312156116d057600080fd5b84356116db81611cd1565b935060208501356116eb81611cd1565b925060408501359150606085013567ffffffffffffffff81111561170e57600080fd5b8501601f8101871361171f57600080fd5b61172e8782356020840161155b565b91505092959194509250565b60008060008060008060a0878903121561175357600080fd5b863561175e81611cd1565b9550602087013561176e81611cd1565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561179957600080fd5b818901915089601f8301126117ad57600080fd5b8135818111156117bc57600080fd5b8a60208260051b85010111156117d157600080fd5b6020830194508093505050509295509295509295565b600080604083850312156117fa57600080fd5b823561180581611cd1565b9150611813602084016115d1565b90509250929050565b60008060006060848603121561183157600080fd5b833561183c81611cd1565b9250602084013567ffffffffffffffff8082111561185957600080fd5b611865878388016115e6565b9350604086013591508082111561187b57600080fd5b50611888868287016115e6565b9150509250925092565b600080604083850312156118a557600080fd5b82356118b081611cd1565b946020939093013593505050565b6000806000606084860312156118d357600080fd5b83356118de81611cd1565b9250602084013563ffffffff811681146118f757600080fd5b9150611905604085016115d1565b90509250925092565b60006020828403121561192057600080fd5b8135610a2c81611ce6565b60006020828403121561193d57600080fd5b8151610a2c81611ce6565b60006020828403121561195a57600080fd5b5035919050565b60008151808452611979816020860160208601611c3e565b601f01601f19169290920160200192915050565b6000835161199f818460208801611c3e565b8351908301906119b3818360208801611c3e565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119ef90830184611961565b9695505050505050565b6001600160a01b0386811682526020808301879052604083018690526080606084018190528301849052600091859160a08501845b87811015611a55578435611a4181611cd1565b841682529382019390820190600101611a2e565b509a9950505050505050505050565b602081526000610a2c6020830184611961565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115611c2257611c22611ca5565b500190565b600082821015611c3957611c39611ca5565b500390565b60005b83811015611c59578181015183820152602001611c41565b838111156106f45750506000910152565b600181811c90821680611c7e57607f821691505b60208210811415611c9f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ad757600080fd5b6001600160e01b031981168114610ad757600080fdfea2646970667358221220414269a6d7b6c0692674eef8c91df584ab873a22b1f785fbe13f31d3317c0bdc64736f6c63430008070033";

type ERC721DelegateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DelegateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Delegate__factory extends ContractFactory {
  constructor(...args: ERC721DelegateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Delegate> {
    return super.deploy(overrides || {}) as Promise<ERC721Delegate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Delegate {
    return super.attach(address) as ERC721Delegate;
  }
  override connect(signer: Signer): ERC721Delegate__factory {
    return super.connect(signer) as ERC721Delegate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DelegateInterface {
    return new utils.Interface(_abi) as ERC721DelegateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Delegate {
    return new Contract(address, _abi, signerOrProvider) as ERC721Delegate;
  }
}
