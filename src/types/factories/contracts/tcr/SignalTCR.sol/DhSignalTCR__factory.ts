/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DhSignalTCR,
  DhSignalTCRInterface,
} from "../../../../contracts/tcr/SignalTCR.sol/DhSignalTCR";

const _abi = [
  {
    inputs: [],
    name: "INVALID_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "TOKENS_ALREADY_CLAIMED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "grantId",
        type: "uint48",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "grantId",
        type: "uint48",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint56",
        name: "_voteId",
        type: "uint56",
      },
    ],
    name: "areTokensLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baalLoot",
    outputs: [
      {
        internalType: "contract IBAALTOKEN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baalShares",
    outputs: [
      {
        internalType: "contract IBAALTOKEN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "grantId",
            type: "uint48",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
        ],
        internalType: "struct DhSignalTCR.BatchVoteParam[]",
        name: "_batch",
        type: "tuple[]",
      },
    ],
    name: "claimAndVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVotesForAddress",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "released",
            type: "bool",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
          {
            internalType: "uint48",
            name: "grantId",
            type: "uint48",
          },
          {
            internalType: "uint56",
            name: "voteId",
            type: "uint56",
          },
        ],
        internalType: "struct DhSignalTCR.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lootSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_voteIds",
        type: "uint256[]",
      },
    ],
    name: "releaseTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baalAddress",
        type: "address",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "grantId",
            type: "uint48",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
        ],
        internalType: "struct DhSignalTCR.BatchVoteParam[]",
        name: "_batch",
        type: "tuple[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voterBalances",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voterToVoteIds",
    outputs: [
      {
        internalType: "uint56",
        name: "",
        type: "uint56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "bool",
        name: "released",
        type: "bool",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        internalType: "uint48",
        name: "grantId",
        type: "uint48",
      },
      {
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611460806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c80633f2aa08a116100875780633f2aa08a146101ba5780635df81330146101e5578063767a8fdc146102485780637a9121e51461026b578063a170a1251461028b578063bb2d6d4c1461029e578063e5a2a2a5146102b1578063f7e1e3d3146102ca57600080fd5b806301296148146100e557806301d215bf14610115578063021d28f2146101595780630e9fd4f31461016e578063180b2b63146101855780631e2ff94f1461018e5780631e83409a146101945780633f2601ef146101a7575b600080fd5b6002546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101426101233660046110d0565b6007602052600090815260409020805460019091015460ff9091169082565b60408051921515835260208301919091520161010c565b61016c61016736600461113d565b6102dd565b005b61017760045481565b60405190815260200161010c565b61017760035481565b42610177565b6101776101a23660046110d0565b610359565b61016c6101b53660046110d0565b6104f0565b6101cd6101c8366004611111565b610873565b60405166ffffffffffffff909116815260200161010c565b6101f86101f336600461123e565b6108bf565b6040805195151586526001600160a01b0390941660208601526001600160981b039092169284019290925265ffffffffffff909116606083015266ffffffffffffff16608082015260a00161010c565b61025b610256366004611298565b61092b565b604051901515815260200161010c565b61027e6102793660046110d0565b610964565b60405161010c91906112c1565b6001546100f8906001600160a01b031681565b61016c6102ac36600461113d565b610b6d565b6000546100f8906201000090046001600160a01b031681565b61016c6102d83660046111b2565b610ba9565b60005b81811015610354576103428383838181106102fd576102fd6113e6565b6103139260206040909202019081019150611270565b848484818110610325576103256113e6565b905060400201602001602081019061033d9190611215565b610e1e565b8061034c816113b5565b9150506102e0565b505050565b6001600160a01b03811660009081526007602052604081205460ff161561039357604051636b1958e560e11b815260040160405180910390fd5b6001600160a01b0382811660008181526007602052604090819020805460ff1916600117905560025460048054925163277166bf60e11b815290810193909352602483019190915290911690634ee2cd7e90604401602060405180830381600087803b15801561040257600080fd5b505af1158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a9190611257565b60015460035460405163277166bf60e11b81526001600160a01b0386811660048301526024820192909252911690634ee2cd7e90604401602060405180830381600087803b15801561048b57600080fd5b505af115801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190611257565b6104cd9190611386565b6001600160a01b0390921660009081526007602052604090206001018290555090565b600054610100900460ff16158080156105105750600054600160ff909116105b8061052a5750303b15801561052a575060005460ff166001145b6105915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156105b4576000805461ff0019166101001790555b81600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060029054906101000a90046001600160a01b03166001600160a01b0316638009ba1f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561062b57600080fd5b505af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066391906110f4565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060029054906101000a90046001600160a01b03166001600160a01b031663f460124d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071191906110f4565b600280546001600160a01b0319166001600160a01b0392831617905560015460408051632a1cd6c360e11b815290519190921691635439ad869160048083019260209291908290030181600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a49190611257565b60035560025460408051632a1cd6c360e11b815290516001600160a01b0390921691635439ad86916004808201926020929091908290030181600087803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108269190611257565b600455801561086f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6006602052816000526040600020818154811061088f57600080fd5b9060005260206000209060049182820401919006600702915091509054906101000a900466ffffffffffffff1681565b600581815481106108cf57600080fd5b60009182526020909120600290910201805460019091015460ff821692506101009091046001600160a01b0316906001600160981b03811690600160981b810465ffffffffffff1690600160c81b900466ffffffffffffff1685565b600060058266ffffffffffffff1681548110610949576109496113e6565b600091825260209091206002909102015460ff161592915050565b6001600160a01b03811660009081526006602090815260408083208054825181850281018501909352808352606094938301828280156109f557602002820191906000526020600020906000905b82829054906101000a900466ffffffffffffff1666ffffffffffffff16815260200190600701906020826006010492830192600103820291508084116109b25790505b505050505090506000815167ffffffffffffffff811115610a1857610a186113fc565b604051908082528060200260200182016040528015610a7157816020015b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181610a365790505b50905060005b8251811015610b65576005838281518110610a9457610a946113e6565b602002602001015166ffffffffffffff1681548110610ab557610ab56113e6565b60009182526020918290206040805160a081018252600293909302909101805460ff81161515845261010090046001600160a01b0316938301939093526001909201546001600160981b03811692820192909252600160981b820465ffffffffffff166060820152600160c81b90910466ffffffffffffff1660808201528251839083908110610b4757610b476113e6565b60200260200101819052508080610b5d906113b5565b915050610a77565b509392505050565b610b7633610359565b5060005b8181101561035457610b978383838181106102fd576102fd6113e6565b80610ba1816113b5565b915050610b7a565b60005b8181101561035457336005848484818110610bc957610bc96113e6565b9050602002013581548110610be057610be06113e6565b600091825260209091206002909102015461010090046001600160a01b031614610c1d576040516338ebc58960e11b815260040160405180910390fd5b6005838383818110610c3157610c316113e6565b9050602002013581548110610c4857610c486113e6565b600091825260209091206002909102015460ff1615610c6657610e0c565b60016005848484818110610c7c57610c7c6113e6565b9050602002013581548110610c9357610c936113e6565b60009182526020909120600290910201805460ff19169115159190911790556005838383818110610cc657610cc66113e6565b9050602002013581548110610cdd57610cdd6113e6565b60009182526020808320600160029093020182015433845260079091526040832090910180546001600160981b03909216929091610d1c908490611386565b909155503390507f40dd446f67aa9d4d3190d2f8702c45a63070dc4125ac469568b1d70222d1ae1f848484818110610d5657610d566113e6565b905060200201356005868686818110610d7157610d716113e6565b9050602002013581548110610d8857610d886113e6565b60009182526020909120600160029092020101546001600160981b03166005878787818110610db957610db96113e6565b9050602002013581548110610dd057610dd06113e6565b906000526020600020906002020160010160139054906101000a900465ffffffffffff16604051610e0393929190611354565b60405180910390a25b80610e16816113b5565b915050610bac565b6001600160981b0381161580610e44575033600090815260076020526040902060010154155b80610e695750336000908152600760205260409020600101546001600160981b038216115b15610e875760405163fae8279160e01b815260040160405180910390fd5b33600090815260076020526040812060010180546001600160981b0384169290610eb290849061139e565b925050819055506000600580549050905060056040518060a00160405280600015158152602001336001600160a01b03168152602001846001600160981b031681526020018565ffffffffffff1681526020018366ffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a8154816001600160981b0302191690836001600160981b0316021790555060608201518160010160136101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160010160196101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550505060066000336001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600491828204019190066007029091909190916101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550336001600160a01b03167fd2b1cb65ba1e681542a1835aea7c951bd6f6cee7a0f2eb40e37afe3b016ce0c38284866040516110c393929190611354565b60405180910390a2505050565b6000602082840312156110e257600080fd5b81356110ed81611412565b9392505050565b60006020828403121561110657600080fd5b81516110ed81611412565b6000806040838503121561112457600080fd5b823561112f81611412565b946020939093013593505050565b6000806020838503121561115057600080fd5b823567ffffffffffffffff8082111561116857600080fd5b818501915085601f83011261117c57600080fd5b81358181111561118b57600080fd5b8660208260061b85010111156111a057600080fd5b60209290920196919550909350505050565b600080602083850312156111c557600080fd5b823567ffffffffffffffff808211156111dd57600080fd5b818501915085601f8301126111f157600080fd5b81358181111561120057600080fd5b8660208260051b85010111156111a057600080fd5b60006020828403121561122757600080fd5b81356001600160981b03811681146110ed57600080fd5b60006020828403121561125057600080fd5b5035919050565b60006020828403121561126957600080fd5b5051919050565b60006020828403121561128257600080fd5b813565ffffffffffff811681146110ed57600080fd5b6000602082840312156112aa57600080fd5b813566ffffffffffffff811681146110ed57600080fd5b602080825282518282018190526000919060409081850190868401855b82811015611347578151805115158552868101516001600160a01b031687860152858101516001600160981b03168686015260608082015165ffffffffffff169086015260809081015166ffffffffffffff169085015260a090930192908501906001016112de565b5091979650505050505050565b66ffffffffffffff9390931683526001600160981b0391909116602083015265ffffffffffff16604082015260600190565b60008219821115611399576113996113d0565b500190565b6000828210156113b0576113b06113d0565b500390565b60006000198214156113c9576113c96113d0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461142757600080fd5b5056fea26469706673582212205a0ac5bbb96d5599c40a2c1128afe480dd7985ff28cfc5552a0f833003b21cad64736f6c63430008070033";

type DhSignalTCRConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DhSignalTCRConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DhSignalTCR__factory extends ContractFactory {
  constructor(...args: DhSignalTCRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DhSignalTCR> {
    return super.deploy(overrides || {}) as Promise<DhSignalTCR>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DhSignalTCR {
    return super.attach(address) as DhSignalTCR;
  }
  override connect(signer: Signer): DhSignalTCR__factory {
    return super.connect(signer) as DhSignalTCR__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DhSignalTCRInterface {
    return new utils.Interface(_abi) as DhSignalTCRInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DhSignalTCR {
    return new Contract(address, _abi, signerOrProvider) as DhSignalTCR;
  }
}
