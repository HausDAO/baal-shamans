/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DhSignalTCR,
  DhSignalTCRInterface,
} from "../../../../contracts/tcr/SignalTCR.sol/DhSignalTCR";

const _abi = [
  {
    inputs: [],
    name: "ENDED",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "TOKENS_ALREADY_CLAIMED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesSnapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootSnapshotId",
        type: "uint256",
      },
    ],
    name: "Init",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "choiceId",
        type: "uint48",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "choiceId",
        type: "uint48",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint56",
        name: "_voteId",
        type: "uint56",
      },
    ],
    name: "areTokensLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baalLoot",
    outputs: [
      {
        internalType: "contract IBAALTOKEN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baalShares",
    outputs: [
      {
        internalType: "contract IBAALTOKEN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "choiceId",
            type: "uint48",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
        ],
        internalType: "struct DhSignalTCR.BatchVoteParam[]",
        name: "_batch",
        type: "tuple[]",
      },
    ],
    name: "claimAndVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVotesForAddress",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "released",
            type: "bool",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
          {
            internalType: "uint48",
            name: "choiceId",
            type: "uint48",
          },
          {
            internalType: "uint56",
            name: "voteId",
            type: "uint56",
          },
        ],
        internalType: "struct DhSignalTCR.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isComplete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lootSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_voteIds",
        type: "uint256[]",
      },
    ],
    name: "releaseTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baalAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "choiceId",
            type: "uint48",
          },
          {
            internalType: "uint152",
            name: "amount",
            type: "uint152",
          },
        ],
        internalType: "struct DhSignalTCR.BatchVoteParam[]",
        name: "_batch",
        type: "tuple[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voterBalances",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voterToVoteIds",
    outputs: [
      {
        internalType: "uint56",
        name: "",
        type: "uint56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "bool",
        name: "released",
        type: "bool",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint152",
        name: "amount",
        type: "uint152",
      },
      {
        internalType: "uint48",
        name: "choiceId",
        type: "uint48",
      },
      {
        internalType: "uint56",
        name: "voteId",
        type: "uint56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115a9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c8063767a8fdc11610092578063767a8fdc1461023a5780637a9121e51461025d578063a170a1251461027d578063a910f25914610290578063b2fa1c9e146102a3578063bb2d6d4c146102ad578063c24a0f8b146102c0578063e5a2a2a5146102c9578063f7e1e3d3146102e257600080fd5b806301296148146100f057806301d215bf14610120578063021d28f2146101645780630e9fd4f314610179578063180b2b63146101905780631e83409a146101995780633f2aa08a146101ac5780635df81330146101d7575b600080fd5b600254610103906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014d61012e366004611219565b6008602052600090815260409020805460019091015460ff9091169082565b604080519215158352602083019190915201610117565b610177610172366004611286565b6102f5565b005b61018260045481565b604051908152602001610117565b61018260035481565b6101826101a7366004611219565b610394565b6101bf6101ba36600461125a565b6105ab565b60405166ffffffffffffff9091168152602001610117565b6101ea6101e5366004611387565b6105f7565b6040805195151586526001600160a01b0390941660208601526001600160981b039092169284019290925265ffffffffffff909116606083015266ffffffffffffff16608082015260a001610117565b61024d6102483660046113e1565b610663565b6040519015158152602001610117565b61027061026b366004611219565b61069c565b604051610117919061140a565b600154610103906001600160a01b031681565b61017761029e36600461125a565b6108a5565b600554421161024d565b6101776102bb366004611286565b610c70565b61018260055481565b600054610103906201000090046001600160a01b031681565b6101776102f03660046112fb565b610ccf565b60055442111561031857604051633063a83160e21b815260040160405180910390fd5b60005b8181101561038f5761037d8383838181106103385761033861152f565b61034e92602060409092020190810191506113b9565b8484848181106103605761036061152f565b9050604002016020016020810190610378919061135e565b610f67565b80610387816114fe565b91505061031b565b505050565b60006103a1600554421190565b156103bf57604051633063a83160e21b815260040160405180910390fd5b6001600160a01b03821660009081526008602052604090205460ff16156103f957604051636b1958e560e11b815260040160405180910390fd5b6001600160a01b0382811660008181526008602052604090819020805460ff1916600117905560025460048054925163277166bf60e11b815290810193909352602483019190915290911690634ee2cd7e90604401602060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a091906113a0565b60015460035460405163277166bf60e11b81526001600160a01b0386811660048301526024820192909252911690634ee2cd7e90604401602060405180830381600087803b1580156104f157600080fd5b505af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052991906113a0565b61053391906114cf565b6001600160a01b038316600081815260086020526040908190206001018390555190917f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f9161058491815260200190565b60405180910390a2506001600160a01b031660009081526008602052604090206001015490565b600760205281600052604060002081815481106105c757600080fd5b9060005260206000209060049182820401919006600702915091509054906101000a900466ffffffffffffff1681565b6006818154811061060757600080fd5b60009182526020909120600290910201805460019091015460ff821692506101009091046001600160a01b0316906001600160981b03811690600160981b810465ffffffffffff1690600160c81b900466ffffffffffffff1685565b600060068266ffffffffffffff16815481106106815761068161152f565b600091825260209091206002909102015460ff161592915050565b6001600160a01b038116600090815260076020908152604080832080548251818502810185019093528083526060949383018282801561072d57602002820191906000526020600020906000905b82829054906101000a900466ffffffffffffff1666ffffffffffffff16815260200190600701906020826006010492830192600103820291508084116106ea5790505b505050505090506000815167ffffffffffffffff81111561075057610750611545565b6040519080825280602002602001820160405280156107a957816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161076e5790505b50905060005b825181101561089d5760068382815181106107cc576107cc61152f565b602002602001015166ffffffffffffff16815481106107ed576107ed61152f565b60009182526020918290206040805160a081018252600293909302909101805460ff81161515845261010090046001600160a01b0316938301939093526001909201546001600160981b03811692820192909252600160981b820465ffffffffffff166060820152600160c81b90910466ffffffffffffff166080820152825183908390811061087f5761087f61152f565b60200260200101819052508080610895906114fe565b9150506107af565b509392505050565b600054610100900460ff16158080156108c55750600054600160ff909116105b806108df5750303b1580156108df575060005460ff166001145b6109465760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015610969576000805461ff0019166101001790555b82600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060029054906101000a90046001600160a01b03166001600160a01b0316638009ba1f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a18919061123d565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060029054906101000a90046001600160a01b03166001600160a01b031663f460124d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac6919061123d565b600280546001600160a01b0319166001600160a01b0392831617905560015460408051632a1cd6c360e11b815290519190921691635439ad869160048083019260209291908290030181600087803b158015610b2157600080fd5b505af1158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5991906113a0565b60035560025460408051632a1cd6c360e11b815290516001600160a01b0390921691635439ad86916004808201926020929091908290030181600087803b158015610ba357600080fd5b505af1158015610bb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdb91906113a0565b600481905560058390556003546040517ff0ee3666ded00e4a4054586f71ae9aba172e661b35be2e598af046d5c61c532792610c1e928252602082015260400190565b60405180910390a1801561038f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b600554421115610c9357604051633063a83160e21b815260040160405180910390fd5b610c9c33610394565b5060005b8181101561038f57610cbd8383838181106103385761033861152f565b80610cc7816114fe565b915050610ca0565b600554421115610cf257604051633063a83160e21b815260040160405180910390fd5b60005b8181101561038f57336006848484818110610d1257610d1261152f565b9050602002013581548110610d2957610d2961152f565b600091825260209091206002909102015461010090046001600160a01b031614610d66576040516338ebc58960e11b815260040160405180910390fd5b6006838383818110610d7a57610d7a61152f565b9050602002013581548110610d9157610d9161152f565b600091825260209091206002909102015460ff1615610daf57610f55565b60016006848484818110610dc557610dc561152f565b9050602002013581548110610ddc57610ddc61152f565b60009182526020909120600290910201805460ff19169115159190911790556006838383818110610e0f57610e0f61152f565b9050602002013581548110610e2657610e2661152f565b60009182526020808320600160029093020182015433845260089091526040832090910180546001600160981b03909216929091610e659084906114cf565b909155503390507f40dd446f67aa9d4d3190d2f8702c45a63070dc4125ac469568b1d70222d1ae1f848484818110610e9f57610e9f61152f565b905060200201356006868686818110610eba57610eba61152f565b9050602002013581548110610ed157610ed161152f565b60009182526020909120600160029092020101546001600160981b03166006878787818110610f0257610f0261152f565b9050602002013581548110610f1957610f1961152f565b906000526020600020906002020160010160139054906101000a900465ffffffffffff16604051610f4c9392919061149d565b60405180910390a25b80610f5f816114fe565b915050610cf5565b6001600160981b0381161580610f8d575033600090815260086020526040902060010154155b80610fb25750336000908152600860205260409020600101546001600160981b038216115b15610fd05760405163fae8279160e01b815260040160405180910390fd5b33600090815260086020526040812060010180546001600160981b0384169290610ffb9084906114e7565b925050819055506000600680549050905060066040518060a00160405280600015158152602001336001600160a01b03168152602001846001600160981b031681526020018565ffffffffffff1681526020018366ffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a8154816001600160981b0302191690836001600160981b0316021790555060608201518160010160136101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160010160196101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550505060076000336001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600491828204019190066007029091909190916101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550336001600160a01b03167fd2b1cb65ba1e681542a1835aea7c951bd6f6cee7a0f2eb40e37afe3b016ce0c382848660405161120c9392919061149d565b60405180910390a2505050565b60006020828403121561122b57600080fd5b81356112368161155b565b9392505050565b60006020828403121561124f57600080fd5b81516112368161155b565b6000806040838503121561126d57600080fd5b82356112788161155b565b946020939093013593505050565b6000806020838503121561129957600080fd5b823567ffffffffffffffff808211156112b157600080fd5b818501915085601f8301126112c557600080fd5b8135818111156112d457600080fd5b8660208260061b85010111156112e957600080fd5b60209290920196919550909350505050565b6000806020838503121561130e57600080fd5b823567ffffffffffffffff8082111561132657600080fd5b818501915085601f83011261133a57600080fd5b81358181111561134957600080fd5b8660208260051b85010111156112e957600080fd5b60006020828403121561137057600080fd5b81356001600160981b038116811461123657600080fd5b60006020828403121561139957600080fd5b5035919050565b6000602082840312156113b257600080fd5b5051919050565b6000602082840312156113cb57600080fd5b813565ffffffffffff8116811461123657600080fd5b6000602082840312156113f357600080fd5b813566ffffffffffffff8116811461123657600080fd5b602080825282518282018190526000919060409081850190868401855b82811015611490578151805115158552868101516001600160a01b031687860152858101516001600160981b03168686015260608082015165ffffffffffff169086015260809081015166ffffffffffffff169085015260a09093019290850190600101611427565b5091979650505050505050565b66ffffffffffffff9390931683526001600160981b0391909116602083015265ffffffffffff16604082015260600190565b600082198211156114e2576114e2611519565b500190565b6000828210156114f9576114f9611519565b500390565b600060001982141561151257611512611519565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461157057600080fd5b5056fea2646970667358221220ab295f76cb2cce211fdbf23e14c28178280f4fd03a16b4654312686eac425f6b64736f6c63430008070033";

type DhSignalTCRConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DhSignalTCRConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DhSignalTCR__factory extends ContractFactory {
  constructor(...args: DhSignalTCRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DhSignalTCR> {
    return super.deploy(overrides || {}) as Promise<DhSignalTCR>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DhSignalTCR {
    return super.attach(address) as DhSignalTCR;
  }
  override connect(signer: Signer): DhSignalTCR__factory {
    return super.connect(signer) as DhSignalTCR__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DhSignalTCRInterface {
    return new utils.Interface(_abi) as DhSignalTCRInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DhSignalTCR {
    return new Contract(address, _abi, signerOrProvider) as DhSignalTCR;
  }
}
