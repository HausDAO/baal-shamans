/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CheckInSummoner,
  CheckInSummonerInterface,
} from "../../../../contracts/checkIn/CheckIn.sol/CheckInSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "checkIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sharesOrLoot",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesPerMinute",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "checkInInterval",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxMinutesClaimable",
        type: "uint16",
      },
    ],
    name: "CheckInSummonComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baal",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesOrLoot",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_sharesPerMinute",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_checkInInterval",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_maxMinutesClaimable",
        type: "uint16",
      },
    ],
    name: "summon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161036438038061036483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102d1806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806311a948471461003b5780636f2ddd931461006a575b600080fd5b61004e6100493660046101f2565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b60005461004e906001600160a01b031681565b600080548190610095906001600160a01b0316610151565b60405163ad97304760e01b81529091506001600160a01b0382169063ad973047906100cc908a908a908a908a908a90600401610269565b600060405180830381600087803b1580156100e657600080fd5b505af11580156100fa573d6000803e3d6000fd5b50505050866001600160a01b03167f4d1d82dbb2dbc53d0a85e653ffa4df8d7ba0656f3e50e15d72a550cf7d140efa828888888860405161013f959493929190610269565b60405180910390a29695505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101ed5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b600080600080600060a0868803121561020a57600080fd5b85356001600160a01b038116811461022157600080fd5b94506020860135801515811461023657600080fd5b93506040860135925060608601359150608086013561ffff8116811461025b57600080fd5b809150509295509295909350565b6001600160a01b0395909516855292151560208501526040840191909152606083015261ffff16608082015260a0019056fea264697066735822122023675fc61c1e48859fbccdc8e63dc2b350082cf4a878504862c5ca44d1a55f4a64736f6c63430008070033";

type CheckInSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckInSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckInSummoner__factory extends ContractFactory {
  constructor(...args: CheckInSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CheckInSummoner> {
    return super.deploy(_template, overrides || {}) as Promise<CheckInSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  override attach(address: string): CheckInSummoner {
    return super.attach(address) as CheckInSummoner;
  }
  override connect(signer: Signer): CheckInSummoner__factory {
    return super.connect(signer) as CheckInSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckInSummonerInterface {
    return new utils.Interface(_abi) as CheckInSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckInSummoner {
    return new Contract(address, _abi, signerOrProvider) as CheckInSummoner;
  }
}
