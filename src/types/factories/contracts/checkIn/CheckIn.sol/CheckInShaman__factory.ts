/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CheckInShaman,
  CheckInShamanInterface,
} from "../../../../contracts/checkIn/CheckIn.sol/CheckInShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minutesWorked",
        type: "uint16",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkInInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_minutesWorked",
        type: "uint16",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baal",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesOrLoot",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_sharesPerMinute",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_checkInInterval",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_maxMinutesClaimable",
        type: "uint16",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMinutesClaimable",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesOrLoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPerMinute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "timeLedger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905554610100900460ff161580801561003357506001805460ff16105b8061005d575061004c3061013160201b6106c91760201c565b15801561005d57506001805460ff16145b6100c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100e6576001805461ff0019166101001790555b801561012b576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610140565b6001600160a01b03163b151590565b610a838061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063081dd4b51461008857806332a11187146100aa578063ad973047146100cb578063b43db984146100e0578063bfd25fa5146100f7578063d9ba10ec14610100578063e5a2a2a514610120578063edac5f3e14610151578063fc0c546a14610164575b600080fd5b6004546100959060ff1681565b60405190151581526020015b60405180910390f35b6007546100b89061ffff1681565b60405161ffff90911681526020016100a1565b6100de6100d93660046108bb565b610177565b005b6100e960065481565b6040519081526020016100a1565b6100e960055481565b6100e961010e366004610881565b60036020526000908152604090205481565b600154610139906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016100a1565b6100de61015f36600461091b565b610433565b600254610139906001600160a01b031681565b600154610100900460ff161580801561019457506001805460ff16105b806101b457506101a3306106c9565b1580156101b457506001805460ff16145b61021c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff191681179055801561023e576001805461ff0019166101001790555b6001805462010000600160b01b031916620100006001600160a01b038916021790556004805460ff191686151590811790915560ff161561032457600160029054906101000a90046001600160a01b03166001600160a01b0316638009ba1f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c757600080fd5b505afa1580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff919061089e565b600280546001600160a01b0319166001600160a01b03929092169190911790556103cb565b600160029054906101000a90046001600160a01b03166001600160a01b031663f460124d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561037257600080fd5b505afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa919061089e565b600280546001600160a01b0319166001600160a01b03929092169190911790555b600583905560068490556007805461ffff191661ffff8416179055801561042b576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60075461ffff908116908216106104c05760405162461bcd60e51b8152602060048201526044602482018190527f4d696e7574657320776f726b6564206d75737420626520756e64657220746865908201527f206d6178696d756d20616d6f756e7420636c61696d61626c65207065722070656064820152631c9a5bd960e21b608482015260a401610213565b600554336000908152600360205260409020546104dd90426109f2565b1015806104f7575033600090815260036020526040902054155b61054e5760405162461bcd60e51b815260206004820152602260248201527f43616e206f6e6c7920636c61696d20312074696d652070657220696e74657276604482015261185b60f21b6064820152608401610213565b6002546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561059257600080fd5b505afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190610936565b1161064e5760405162461bcd60e51b815260206004820152604860248201527f4d656d62657273204f6e6c793a204d75737420686176652044414f20746f6b6560448201527f6e7320696e206f7264657220746f20636c61696d207468726f75676820746869606482015267399039b430b6b0b760c11b608482015260a401610213565b600061065c826006546106d8565b905061066833826106ef565b336000818152600360209081526040918290204290819055825193845290830152810182905261ffff831660608201527f74b05a0ce245770b9bbd0cc3a0f6cd5a264da2d9da736b30edc62a7c88d3cb9b9060800160405180910390a15050565b6001600160a01b03163b151590565b60006106e88261ffff85166109d3565b9392505050565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061072557610725610a1f565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050828160008151811061077657610776610a1f565b602090810291909101015260045460ff16156107fa57600154604051632c78fd0360e21b8152620100009091046001600160a01b03169063b1e3f40c906107c3908590859060040161094f565b600060405180830381600087803b1580156107dd57600080fd5b505af11580156107f1573d6000803e3d6000fd5b50505050610864565b6001546040516322936c2360e11b8152620100009091046001600160a01b031690634526d84690610831908590859060040161094f565b600060405180830381600087803b15801561084b57600080fd5b505af115801561085f573d6000803e3d6000fd5b505050505b50505050565b803561ffff8116811461087c57600080fd5b919050565b60006020828403121561089357600080fd5b81356106e881610a35565b6000602082840312156108b057600080fd5b81516106e881610a35565b600080600080600060a086880312156108d357600080fd5b85356108de81610a35565b9450602086013580151581146108f357600080fd5b9350604086013592506060860135915061090f6080870161086a565b90509295509295909350565b60006020828403121561092d57600080fd5b6106e88261086a565b60006020828403121561094857600080fd5b5051919050565b604080825283519082018190526000906020906060840190828701845b828110156109915781516001600160a01b03168452928401929084019060010161096c565b5050508381038285015284518082528583019183019060005b818110156109c6578351835292840192918401916001016109aa565b5090979650505050505050565b60008160001904831182151516156109ed576109ed610a09565b500290565b600082821015610a0457610a04610a09565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114610a4a57600080fd5b5056fea26469706673582212204b504bd4778ad4a4b35e1cdc0a27d798b063c36bf4243c22d7420a4778696c8864736f6c63430008070033";

type CheckInShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckInShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckInShaman__factory extends ContractFactory {
  constructor(...args: CheckInShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CheckInShaman> {
    return super.deploy(overrides || {}) as Promise<CheckInShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckInShaman {
    return super.attach(address) as CheckInShaman;
  }
  override connect(signer: Signer): CheckInShaman__factory {
    return super.connect(signer) as CheckInShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckInShamanInterface {
    return new utils.Interface(_abi) as CheckInShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckInShaman {
    return new Contract(address, _abi, signerOrProvider) as CheckInShaman;
  }
}
