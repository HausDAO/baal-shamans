/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  Loot,
  LootInterface,
} from "../../../../../../contracts/fixtures/Baal/contracts/LootERC20.sol/Loot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b6080523480156200001857600080fd5b506200002362000029565b620000eb565b600054610100900460ff1615620000965760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e9576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805160601c6128c9620001266000396000818161062801528181610671015281816107b4015281816107f4015261088301526128c96000f3fe6080604052600436106101c25760003560e01c80635c975abb116100f75780639711715a11610095578063a9059cbb11610064578063a9059cbb146104bc578063d505accf146104dc578063dd62ed3e146104fc578063f2fde38b1461051c57600080fd5b80639711715a14610447578063981b24d01461045c5780639dc29fac1461047c578063a457c2d71461049c57600080fd5b80637ecebe00116100d15780637ecebe00146103d45780638456cb59146103f45780638da5cb5b1461040957806395d89b411461043257600080fd5b80635c975abb1461037157806370a0823114610389578063715018a6146103bf57600080fd5b806339509351116101645780634ee2cd7e1161013e5780634ee2cd7e146103095780634f1ef2861461032957806352d1902d1461033c578063562d190d1461035157600080fd5b806339509351146102b45780633f4ba83a146102d457806340c10f19146102e957600080fd5b806323b872dd116101a057806323b872dd14610241578063313ce567146102615780633644e5151461027d5780633659cfe61461029257600080fd5b806306fdde03146101c7578063095ea7b3146101f257806318160ddd14610222575b600080fd5b3480156101d357600080fd5b506101dc61053c565b6040516101e9919061262c565b60405180910390f35b3480156101fe57600080fd5b5061021261020d36600461255a565b6105ce565b60405190151581526020016101e9565b34801561022e57600080fd5b506035545b6040519081526020016101e9565b34801561024d57600080fd5b5061021261025c366004612449565b6105e8565b34801561026d57600080fd5b50604051601281526020016101e9565b34801561028957600080fd5b5061023361060e565b34801561029e57600080fd5b506102b26102ad3660046123fb565b61061d565b005b3480156102c057600080fd5b506102126102cf36600461255a565b610706565b3480156102e057600080fd5b506102b2610728565b3480156102f557600080fd5b506102b261030436600461255a565b61073a565b34801561031557600080fd5b5061023361032436600461255a565b610750565b6102b26103373660046124f8565b6107a9565b34801561034857600080fd5b50610233610876565b34801561035d57600080fd5b506102b261036c36600461259d565b610929565b34801561037d57600080fd5b5060fe5460ff16610212565b34801561039557600080fd5b506102336103a43660046123fb565b6001600160a01b031660009081526033602052604090205490565b3480156103cb57600080fd5b506102b2610ad1565b3480156103e057600080fd5b506102336103ef3660046123fb565b610ae3565b34801561040057600080fd5b506102b2610b01565b34801561041557600080fd5b50610130546040516001600160a01b0390911681526020016101e9565b34801561043e57600080fd5b506101dc610b11565b34801561045357600080fd5b506102b2610b20565b34801561046857600080fd5b506102336104773660046125f7565b610b30565b34801561048857600080fd5b506102b261049736600461255a565b610b5b565b3480156104a857600080fd5b506102126104b736600461255a565b610b6d565b3480156104c857600080fd5b506102126104d736600461255a565b610bf3565b3480156104e857600080fd5b506102b26104f7366004612485565b610c01565b34801561050857600080fd5b50610233610517366004612416565b610d65565b34801561052857600080fd5b506102b26105373660046123fb565b610d90565b60606036805461054b906127bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610577906127bf565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b5050505050905090565b6000336105dc818585610e06565b60019150505b92915050565b6000336105f6858285610f2a565b610601858585610fa4565b60019150505b9392505050565b600061061861117d565b905090565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561066f5760405162461bcd60e51b81526004016106669061265f565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106b860008051602061284d833981519152546001600160a01b031690565b6001600160a01b0316146106de5760405162461bcd60e51b8152600401610666906126ab565b6106e7816111f8565b6040805160008082526020820190925261070391839190611200565b50565b6000336105dc8185856107198383610d65565b6107239190612742565b610e06565b61073061137a565b6107386113d5565b565b61074261137a565b61074c8282611427565b5050565b6001600160a01b038216600090815260656020526040812081908190610777908590611512565b915091508161079e576001600160a01b0385166000908152603360205260409020546107a0565b805b95945050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107f25760405162461bcd60e51b81526004016106669061265f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661083b60008051602061284d833981519152546001600160a01b031690565b6001600160a01b0316146108615760405162461bcd60e51b8152600401610666906126ab565b61086a826111f8565b61074c82826001611200565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109165760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610666565b5060008051602061284d83398151915290565b600054610100900460ff16158080156109495750600054600160ff909116105b806109635750303b158015610963575060005460ff166001145b6109c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610666565b6000805460ff1916600117905580156109e9576000805461ff0019166101001790555b8251610a255760405162461bcd60e51b815260206004820152600b60248201526a4c6e616d6520656d70747960a81b6044820152606401610666565b8151610a635760405162461bcd60e51b815260206004820152600d60248201526c4c73796d626f6c20656d70747960981b6044820152606401610666565b610a6d8383611609565b610a768361163a565b610a7e611684565b610a866116b3565b8015610acc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610ad961137a565b61073860006116e2565b6001600160a01b038116600090815260cb60205260408120546105e2565b610b0961137a565b610738611735565b60606037805461054b906127bf565b610b2861137a565b610703611772565b6000806000610b40846066611512565b9150915081610b5157603554610b53565b805b949350505050565b610b6361137a565b61074c82826117cc565b60003381610b7b8286610d65565b905083811015610bdb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610666565b610be88286868403610e06565b506001949350505050565b6000336105dc818585610fa4565b83421115610c515760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610666565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c808c611926565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cdb8261194e565b90506000610ceb8287878761199c565b9050896001600160a01b0316816001600160a01b031614610d4e5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610666565b610d598a8a8a610e06565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610d9861137a565b6001600160a01b038116610dfd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610666565b610703816116e2565b6001600160a01b038316610e685760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610666565b6001600160a01b038216610ec95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610666565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f368484610d65565b90506000198114610f9e5781811015610f915760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610666565b610f9e8484848403610e06565b50505050565b6001600160a01b0383166110085760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610666565b6001600160a01b03821661106a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610666565b6110758383836119c4565b6001600160a01b038316600090815260336020526040902054818110156110ed5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610666565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611124908490612742565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161117091815260200190565b60405180910390a3610f9e565b60006106187f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111ac60975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61070361137a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561123357610acc83611a4c565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561126c57600080fd5b505afa92505050801561129c575060408051601f3d908101601f1916820190925261129991810190612584565b60015b6112ff5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610666565b60008051602061284d833981519152811461136e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610666565b50610acc838383611ae8565b610130546001600160a01b031633146107385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610666565b6113dd611b0d565b60fe805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661147d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610666565b611489600083836119c4565b806035600082825461149b9190612742565b90915550506001600160a01b038216600090815260336020526040812080548392906114c8908490612742565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806000841161155e5760405162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b6044820152606401610666565b611566611b56565b8411156115b55760405162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e742069640000006044820152606401610666565b60006115c18486611b61565b84549091508114156115da576000809250925050611602565b60018460010182815481106115f1576115f1612820565b906000526020600020015492509250505b9250929050565b600054610100900460ff166116305760405162461bcd60e51b8152600401610666906126f7565b61074c8282611c24565b600054610100900460ff166116615760405162461bcd60e51b8152600401610666906126f7565b61070381604051806040016040528060018152602001603160f81b815250611c72565b600054610100900460ff166116ab5760405162461bcd60e51b8152600401610666906126f7565b610738611cb3565b600054610100900460ff166116da5760405162461bcd60e51b8152600401610666906126f7565b610738611ce6565b61013080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61173d611d16565b60fe805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861140a3390565b6000611782606880546001019055565b600061178c611b56565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040516117bf91815260200190565b60405180910390a1919050565b6001600160a01b03821661182c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610666565b611838826000836119c4565b6001600160a01b038216600090815260336020526040902054818110156118ac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610666565b6001600160a01b03831660009081526033602052604081208383039055603580548492906118db90849061277c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038116600090815260cb602052604090208054600181018255905b50919050565b60006105e261195b61117d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006119ad87878787611d5c565b915091506119ba81611e49565b5095945050505050565b6119cf838383612004565b6001600160a01b0383161580611a025750610130546001600160a01b031633148015611a0257506001600160a01b038216155b80611a10575060fe5460ff16155b610acc5760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b6044820152606401610666565b6001600160a01b0381163b611ab95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610666565b60008051602061284d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611af18361204c565b600082511180611afe5750805b15610acc57610f9e838361208c565b60fe5460ff166107385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610666565b600061061860685490565b8154600090611b72575060006105e2565b82546000905b80821015611bce576000611b8c83836120b1565b905084868281548110611ba157611ba1612820565b90600052602060002001541115611bba57809150611bc8565b611bc5816001612742565b92505b50611b78565b600082118015611c0357508385611be660018561277c565b81548110611bf657611bf6612820565b9060005260206000200154145b15611c1c57611c1360018361277c565b925050506105e2565b5090506105e2565b600054610100900460ff16611c4b5760405162461bcd60e51b8152600401610666906126f7565b8151611c5e9060369060208501906122b5565b508051610acc9060379060208401906122b5565b600054610100900460ff16611c995760405162461bcd60e51b8152600401610666906126f7565b815160209283012081519190920120609791909155609855565b600054610100900460ff16611cda5760405162461bcd60e51b8152600401610666906126f7565b60fe805460ff19169055565b600054610100900460ff16611d0d5760405162461bcd60e51b8152600401610666906126f7565b610738336116e2565b60fe5460ff16156107385760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610666565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d935750600090506003611e40565b8460ff16601b14158015611dab57508460ff16601c14155b15611dbc5750600090506004611e40565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e10573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e3957600060019250925050611e40565b9150600090505b94509492505050565b6000816004811115611e5d57611e5d61280a565b1415611e665750565b6001816004811115611e7a57611e7a61280a565b1415611ec85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610666565b6002816004811115611edc57611edc61280a565b1415611f2a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610666565b6003816004811115611f3e57611f3e61280a565b1415611f975760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610666565b6004816004811115611fab57611fab61280a565b14156107035760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610666565b6001600160a01b0383166120235761201b826120cc565b610acc6120ff565b6001600160a01b03821661203a5761201b836120cc565b612043836120cc565b610acc826120cc565b61205581611a4c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610607838360405180606001604052806027815260200161286d6027913961210d565b60006120c0600284841861275a565b61060790848416612742565b6001600160a01b038116600090815260656020908152604080832060339092529091205461070391906121ea565b6121ea565b61073860666120fa60355490565b60606001600160a01b0384163b6121755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610666565b600080856001600160a01b0316856040516121909190612610565b600060405180830381855af49150503d80600081146121cb576040519150601f19603f3d011682016040523d82523d6000602084013e6121d0565b606091505b50915091506121e0828286612234565b9695505050505050565b60006121f4611b56565b9050806122008461226d565b1015610acc578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b60608315612243575081610607565b8251156122535782518084602001fd5b8160405162461bcd60e51b8152600401610666919061262c565b805460009061227e57506000919050565b8154829061228e9060019061277c565b8154811061229e5761229e612820565b90600052602060002001549050919050565b919050565b8280546122c1906127bf565b90600052602060002090601f0160209004810192826122e35760008555612329565b82601f106122fc57805160ff1916838001178555612329565b82800160010185558215612329579182015b8281111561232957825182559160200191906001019061230e565b50612335929150612339565b5090565b5b80821115612335576000815560010161233a565b600067ffffffffffffffff8084111561236957612369612836565b604051601f8501601f19908116603f0116810190828211818310171561239157612391612836565b816040528093508581528686860111156123aa57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146122b057600080fd5b600082601f8301126123ec57600080fd5b6106078383356020850161234e565b60006020828403121561240d57600080fd5b610607826123c4565b6000806040838503121561242957600080fd5b612432836123c4565b9150612440602084016123c4565b90509250929050565b60008060006060848603121561245e57600080fd5b612467846123c4565b9250612475602085016123c4565b9150604084013590509250925092565b600080600080600080600060e0888a0312156124a057600080fd5b6124a9886123c4565b96506124b7602089016123c4565b95506040880135945060608801359350608088013560ff811681146124db57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561250b57600080fd5b612514836123c4565b9150602083013567ffffffffffffffff81111561253057600080fd5b8301601f8101851361254157600080fd5b6125508582356020840161234e565b9150509250929050565b6000806040838503121561256d57600080fd5b612576836123c4565b946020939093013593505050565b60006020828403121561259657600080fd5b5051919050565b600080604083850312156125b057600080fd5b823567ffffffffffffffff808211156125c857600080fd5b6125d4868387016123db565b935060208501359150808211156125ea57600080fd5b50612550858286016123db565b60006020828403121561260957600080fd5b5035919050565b60008251612622818460208701612793565b9190910192915050565b602081526000825180602084015261264b816040850160208701612793565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612755576127556127f4565b500190565b60008261277757634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561278e5761278e6127f4565b500390565b60005b838110156127ae578181015183820152602001612796565b83811115610f9e5750506000910152565b600181811c908216806127d357607f821691505b6020821081141561194857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ed1ee8fd4ba65faa9b57bf7ff513f342139aa87cc16679026256b393afbf0fa264736f6c63430008070033";

type LootConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Loot__factory extends ContractFactory {
  constructor(...args: LootConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Loot> {
    return super.deploy(overrides || {}) as Promise<Loot>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Loot {
    return super.attach(address) as Loot;
  }
  override connect(signer: Signer): Loot__factory {
    return super.connect(signer) as Loot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootInterface {
    return new utils.Interface(_abi) as LootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Loot {
    return new Contract(address, _abi, signerOrProvider) as Loot;
  }
}
