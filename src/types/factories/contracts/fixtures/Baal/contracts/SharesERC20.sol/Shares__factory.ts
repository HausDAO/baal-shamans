/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  Shares,
  SharesInterface,
} from "../../../../../../contracts/fixtures/Baal/contracts/SharesERC20.sol/Shares";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromTimeStamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nCheckpoints",
        type: "uint256",
      },
    ],
    name: "getCheckpoint",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromTimeStamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct BaalVotes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b6080523480156200001857600080fd5b506200002362000029565b620000eb565b600054610100900460ff1615620000965760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e9576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805160601c612dbc62000126600039600081816107a0015281816107e901528181610938015281816109780152610a070152612dbc6000f3fe6080604052600436106101f95760003560e01c80635c975abb1161010d57806395d89b41116100a0578063b4b5ea571161006f578063b4b5ea5714610614578063c3cda52014610634578063d505accf14610654578063dd62ed3e14610674578063f2fde38b1461069457600080fd5b806395d89b411461059f5780639dc29fac146105b4578063a457c2d7146105d4578063a9059cbb146105f457600080fd5b8063782d6fe1116100dc578063782d6fe11461052c5780637ecebe001461054c5780638456cb591461056c5780638da5cb5b1461058157600080fd5b80635c975abb1461049b5780636fcfff45146104b457806370a08231146104e1578063715018a61461051757600080fd5b806339509351116101905780634f1ef2861161015f5780634f1ef286146103e557806352d1902d146103f8578063562d190d1461040d578063587cde1e1461042d5780635c19a95c1461047b57600080fd5b8063395093511461034f5780633f4ba83a1461036f57806340c10f191461038457806347f761f5146103a457600080fd5b806323b872dd116101cc57806323b872dd146102dc578063313ce567146102fc5780633644e515146103185780633659cfe61461032d57600080fd5b806306fdde03146101fe578063095ea7b3146102295780630cdfebfa1461025957806318160ddd146102bd575b600080fd5b34801561020a57600080fd5b506102136106b4565b6040516102209190612b57565b60405180910390f35b34801561023557600080fd5b50610249610244366004612a46565b610746565b6040519015158152602001610220565b34801561026557600080fd5b506102a1610274366004612a46565b60cc6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610220565b3480156102c957600080fd5b506035545b604051908152602001610220565b3480156102e857600080fd5b506102496102f736600461293e565b610760565b34801561030857600080fd5b5060405160128152602001610220565b34801561032457600080fd5b506102ce610786565b34801561033957600080fd5b5061034d6103483660046128f0565b610795565b005b34801561035b57600080fd5b5061024961036a366004612a46565b61087e565b34801561037b57600080fd5b5061034d6108a0565b34801561039057600080fd5b5061034d61039f366004612a46565b6108b2565b3480156103b057600080fd5b506103c46103bf366004612a46565b6108db565b60408051825163ffffffff1681526020928301519281019290925201610220565b61034d6103f33660046129e4565b61092d565b34801561040457600080fd5b506102ce6109fa565b34801561041957600080fd5b5061034d610428366004612ae1565b610aad565b34801561043957600080fd5b506104636104483660046128f0565b60ce602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561048757600080fd5b5061034d6104963660046128f0565b610c55565b3480156104a757600080fd5b506101015460ff16610249565b3480156104c057600080fd5b506102ce6104cf3660046128f0565b60cd6020526000908152604090205481565b3480156104ed57600080fd5b506102ce6104fc3660046128f0565b6001600160a01b031660009081526033602052604090205490565b34801561052357600080fd5b5061034d610c5f565b34801561053857600080fd5b506102ce610547366004612a46565b610c71565b34801561055857600080fd5b506102ce6105673660046128f0565b610db1565b34801561057857600080fd5b5061034d610dcf565b34801561058d57600080fd5b5060cf546001600160a01b0316610463565b3480156105ab57600080fd5b50610213610ddf565b3480156105c057600080fd5b5061034d6105cf366004612a46565b610dee565b3480156105e057600080fd5b506102496105ef366004612a46565b610e00565b34801561060057600080fd5b5061024961060f366004612a46565b610e86565b34801561062057600080fd5b506102ce61062f3660046128f0565b610e94565b34801561064057600080fd5b5061034d61064f366004612a70565b610ed1565b34801561066057600080fd5b5061034d61066f36600461297a565b61108c565b34801561068057600080fd5b506102ce61068f36600461290b565b6111f0565b3480156106a057600080fd5b5061034d6106af3660046128f0565b61121b565b6060603680546106c390612cc8565b80601f01602080910402602001604051908101604052809291908181526020018280546106ef90612cc8565b801561073c5780601f106107115761010080835404028352916020019161073c565b820191906000526020600020905b81548152906001019060200180831161071f57829003601f168201915b5050505050905090565b600033610754818585611291565b60019150505b92915050565b60003361076e8582856113b5565b61077985858561142f565b60019150505b9392505050565b6000610790611608565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107e75760405162461bcd60e51b81526004016107de90612b8a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610830600080516020612d40833981519152546001600160a01b031690565b6001600160a01b0316146108565760405162461bcd60e51b81526004016107de90612bd6565b61085f81611683565b6040805160008082526020820190925261087b9183919061168b565b50565b60003361075481858561089183836111f0565b61089b9190612c6d565b611291565b6108a8611805565b6108b061185f565b565b6108ba611805565b6035546001600160ff1b03908201116108d7576108d782826118b2565b5050565b604080518082018252600080825260209182018190526001600160a01b0394909416845260cc8152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109765760405162461bcd60e51b81526004016107de90612b8a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109bf600080516020612d40833981519152546001600160a01b031690565b6001600160a01b0316146109e55760405162461bcd60e51b81526004016107de90612bd6565b6109ee82611683565b6108d78282600161168b565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a9a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016107de565b50600080516020612d4083398151915290565b600054610100900460ff1615808015610acd5750600054600160ff909116105b80610ae75750303b158015610ae7575060005460ff166001145b610b4a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107de565b6000805460ff191660011790558015610b6d576000805461ff0019166101001790555b8251610ba95760405162461bcd60e51b815260206004820152600b60248201526a536e616d6520656d70747960a81b60448201526064016107de565b8151610be75760405162461bcd60e51b815260206004820152600d60248201526c5373796d626f6c20656d70747960981b60448201526064016107de565b610bf1838361199d565b610bfa836119ce565b610c02611a18565b610c0a611a47565b8015610c50576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b61087b3382611a76565b610c67611805565b6108b06000611b6c565b6000428210610cb05760405162461bcd60e51b815260206004820152600b60248201526a0859195d195c9b5a5b995960aa1b60448201526064016107de565b6001600160a01b038316600090815260cd602052604090205480610cd857600091505061075a565b82610ce685600184036108db565b5163ffffffff1611610d0b57610cff84600183036108db565b6020015191505061075a565b82610d178560006108db565b5163ffffffff161115610d2e57600091505061075a565b600060001982015b81811115610d995760028282030481036000610d5288836108db565b805190915063ffffffff16871415610d745760200151945061075a9350505050565b805163ffffffff16871115610d8b57819350610d92565b6001820392505b5050610d36565b610da386836108db565b602001519695505050505050565b6001600160a01b03811660009081526099602052604081205461075a565b610dd7611805565b6108b0611bbe565b6060603780546106c390612cc8565b610df6611805565b6108d78282611bfc565b60003381610e0e82866111f0565b905083811015610e6e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107de565b610e7b8286868403611291565b506001949350505050565b60003361075481858561142f565b6001600160a01b038116600090815260cd602052604081205480610eb957600061077f565b610ec683600183036108db565b602001519392505050565b83421115610f215760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016107de565b6000610fca610fc27f0e3bc21ca2be03aeeee0e614bfe98f970c96a05a768f627c50ab81764cb50268610f526106b4565b604051602001610f629190612b3b565b60408051601f198184030181528282528051602091820120908301939093528101919091526001600160a01b038a1660608201526080810189905260a0810188905260c00160405160208183030381529060405280519060200120611d56565b858585611da4565b90506001600160a01b0381166110225760405162461bcd60e51b815260206004820181905260248201527f4552433230566f7465733a20696e76616c6964207369676e657220283078302960448201526064016107de565b61102b81611dcc565b86146110795760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016107de565b6110838188611a76565b50505050505050565b834211156110dc5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016107de565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861110b8c611dcc565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061116682611d56565b9050600061117682878787611da4565b9050896001600160a01b0316816001600160a01b0316146111d95760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016107de565b6111e48a8a8a611291565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b611223611805565b6001600160a01b0381166112885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107de565b61087b81611b6c565b6001600160a01b0383166112f35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107de565b6001600160a01b0382166113545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107de565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113c184846111f0565b90506000198114611429578181101561141c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107de565b6114298484848403611291565b50505050565b6001600160a01b0383166114935760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107de565b6001600160a01b0382166114f55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107de565b611500838383611df4565b6001600160a01b038316600090815260336020526040902054818110156115785760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107de565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906115af908490612c6d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115fb91815260200190565b60405180910390a3611429565b60006107907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61163760655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61087b611805565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156116be57610c5083611e7c565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116f757600080fd5b505afa925050508015611727575060408051601f3d908101601f1916820190925261172491810190612ac8565b60015b61178a5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016107de565b600080516020612d4083398151915281146117f95760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016107de565b50610c50838383611f18565b60cf546001600160a01b031633146108b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107de565b611867611f3d565b610101805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166119085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107de565b61191460008383611df4565b80603560008282546119269190612c6d565b90915550506001600160a01b03821660009081526033602052604081208054839290611953908490612c6d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff166119c45760405162461bcd60e51b81526004016107de90612c22565b6108d78282611f87565b600054610100900460ff166119f55760405162461bcd60e51b81526004016107de90612c22565b61087b81604051806040016040528060018152602001603160f81b815250611fd5565b600054610100900460ff16611a3f5760405162461bcd60e51b81526004016107de90612c22565b6108b0612016565b600054610100900460ff16611a6e5760405162461bcd60e51b81526004016107de90612c22565b6108b061204a565b6001600160a01b03821660009081526033602052604081205411611ac65760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b60448201526064016107de565b6001600160a01b03808316600090815260ce6020526040902080548383166001600160a01b031982161790915516611b1d8183611b18866001600160a01b031660009081526033602052604090205490565b61207a565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b60cf80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611bc661215c565b610101805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118953390565b6001600160a01b038216611c5c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107de565b611c6882600083611df4565b6001600160a01b03821660009081526033602052604090205481811015611cdc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107de565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611d0b908490612c85565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600061075a611d63611608565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611db5878787876121a3565b91509150611dc281612290565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b611dff83838361244b565b6001600160a01b0383161580611e31575060cf546001600160a01b031633148015611e3157506001600160a01b038216155b80611e4057506101015460ff16155b610c505760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b60448201526064016107de565b6001600160a01b0381163b611ee95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016107de565b600080516020612d4083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611f21836124f4565b600082511180611f2e5750805b15610c50576114298383612534565b6101015460ff166108b05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107de565b600054610100900460ff16611fae5760405162461bcd60e51b81526004016107de90612c22565b8151611fc1906036906020850190612794565b508051610c50906037906020840190612794565b600054610100900460ff16611ffc5760405162461bcd60e51b81526004016107de90612c22565b815160209283012081519190920120606591909155606655565b600054610100900460ff1661203d5760405162461bcd60e51b81526004016107de90612c22565b610101805460ff19169055565b600054610100900460ff166120715760405162461bcd60e51b81526004016107de90612c22565b6108b033611b6c565b816001600160a01b0316836001600160a01b03161415801561209b57508015155b15610c50576001600160a01b038316156120fc576001600160a01b038316600090815260cd602052604081205490816120d55760006120e7565b6120e285600184036108db565b602001515b90508281036120f886848484612559565b5050505b6001600160a01b03821615610c50576001600160a01b038216600090815260cd60205260408120549081612131576000612143565b61213e84600184036108db565b602001515b905082810161215485848484612559565b505050505050565b6101015460ff16156108b05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107de565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156121da5750600090506003612287565b8460ff16601b141580156121f257508460ff16601c14155b156122035750600090506004612287565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612257573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661228057600060019250925050612287565b9150600090505b94509492505050565b60008160048111156122a4576122a4612d13565b14156122ad5750565b60018160048111156122c1576122c1612d13565b141561230f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107de565b600281600481111561232357612323612d13565b14156123715760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107de565b600381600481111561238557612385612d13565b14156123de5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107de565b60048160048111156123f2576123f2612d13565b141561087b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107de565b6001600160a01b03821660009081526033602052604090205415801561248757506001600160a01b038216600090815260cd6020526040902054155b80156124935750600081115b156124c2576001600160a01b038216600081815260ce6020526040902080546001600160a01b03191690911790555b6001600160a01b03808416600090815260ce6020526040808220548584168352912054610c509291821691168361207a565b6124fd81611e7c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061077f8383604051806060016040528060278152602001612d606027913961267e565b42831580159061259857506001600160a01b038516600090815260cc602090815260408083206000198801845290915290205463ffffffff8281169116145b156125cf576001600160a01b038516600090815260cc60209081526040808320600019880184529091529020600101829055612633565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a16600081815260cc84528681208b825284528681209551865463ffffffff191695169490941785559051600194850155825260cd90529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b60606001600160a01b0384163b6126e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016107de565b600080856001600160a01b0316856040516127019190612b3b565b600060405180830381855af49150503d806000811461273c576040519150601f19603f3d011682016040523d82523d6000602084013e612741565b606091505b509150915061275182828661275b565b9695505050505050565b6060831561276a57508161077f565b82511561277a5782518084602001fd5b8160405162461bcd60e51b81526004016107de9190612b57565b8280546127a090612cc8565b90600052602060002090601f0160209004810192826127c25760008555612808565b82601f106127db57805160ff1916838001178555612808565b82800160010185558215612808579182015b828111156128085782518255916020019190600101906127ed565b50612814929150612818565b5090565b5b808211156128145760008155600101612819565b600067ffffffffffffffff8084111561284857612848612d29565b604051601f8501601f19908116603f0116810190828211818310171561287057612870612d29565b8160405280935085815286868601111561288957600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146128ba57600080fd5b919050565b600082601f8301126128d057600080fd5b61077f8383356020850161282d565b803560ff811681146128ba57600080fd5b60006020828403121561290257600080fd5b61077f826128a3565b6000806040838503121561291e57600080fd5b612927836128a3565b9150612935602084016128a3565b90509250929050565b60008060006060848603121561295357600080fd5b61295c846128a3565b925061296a602085016128a3565b9150604084013590509250925092565b600080600080600080600060e0888a03121561299557600080fd5b61299e886128a3565b96506129ac602089016128a3565b955060408801359450606088013593506129c8608089016128df565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156129f757600080fd5b612a00836128a3565b9150602083013567ffffffffffffffff811115612a1c57600080fd5b8301601f81018513612a2d57600080fd5b612a3c8582356020840161282d565b9150509250929050565b60008060408385031215612a5957600080fd5b612a62836128a3565b946020939093013593505050565b60008060008060008060c08789031215612a8957600080fd5b612a92876128a3565b95506020870135945060408701359350612aae606088016128df565b92506080870135915060a087013590509295509295509295565b600060208284031215612ada57600080fd5b5051919050565b60008060408385031215612af457600080fd5b823567ffffffffffffffff80821115612b0c57600080fd5b612b18868387016128bf565b93506020850135915080821115612b2e57600080fd5b50612a3c858286016128bf565b60008251612b4d818460208701612c9c565b9190910192915050565b6020815260008251806020840152612b76816040850160208701612c9c565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612c8057612c80612cfd565b500190565b600082821015612c9757612c97612cfd565b500390565b60005b83811015612cb7578181015183820152602001612c9f565b838111156114295750506000910152565b600181811c90821680612cdc57607f821691505b60208210811415611dee57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220eafb869e47aad718d096a6496e28a11074238f98f34ae3b6f6244734fbbef1b064736f6c63430008070033";

type SharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shares__factory extends ContractFactory {
  constructor(...args: SharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shares> {
    return super.deploy(overrides || {}) as Promise<Shares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shares {
    return super.attach(address) as Shares;
  }
  override connect(signer: Signer): Shares__factory {
    return super.connect(signer) as Shares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharesInterface {
    return new utils.Interface(_abi) as SharesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shares {
    return new Contract(address, _abi, signerOrProvider) as Shares;
  }
}
