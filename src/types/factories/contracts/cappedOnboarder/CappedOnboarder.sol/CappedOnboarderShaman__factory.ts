/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CappedOnboarderShaman,
  CappedOnboarderShamanInterface,
} from "../../../../contracts/cappedOnboarder/CappedOnboarder.sol/CappedOnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToCuts",
        type: "uint256",
      },
    ],
    name: "ObReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Tribute",
    type: "event",
  },
  {
    inputs: [],
    name: "PERC_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiplier",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tribute",
        type: "uint256",
      },
    ],
    name: "onboarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052620f424060805234801561001757600080fd5b506001600081905554610100900460ff161580801561003a57506001805460ff16105b8061006457506100533061013860201b6108ca1760201c565b15801561006457506001805460ff16145b6100cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100ed576001805461ff0019166101001790555b8015610132576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610147565b6001600160a01b03163b151590565b6080516112ab61017e6000396000818161011f0152818161041101528181610571015281816109690152610d1301526112ab6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063caedeefd11610071578063caedeefd1461011a578063cbaa54dd14610141578063dc4439c314610156578063e5a2a2a514610169578063f5c8ea1b1461017c578063fc0c546a1461019c57600080fd5b80631b3ed722146100ae578063355274ea146100ca57806345f0a44f146100d35780634c5911b6146100e6578063b27fb311146100ef575b600080fd5b6100b760045481565b6040519081526020015b60405180910390f35b6100b760035481565b6100b76100e1366004611089565b6101af565b6100b760025481565b6101026100fd366004611089565b6101d0565b6040516001600160a01b0390911681526020016100c1565b6100b77f000000000000000000000000000000000000000000000000000000000000000081565b61015461014f366004610f5a565b6101fa565b005b6101546101643660046110a2565b610377565b600854610102906001600160a01b031681565b6100b761018a366004610f19565b60056020526000908152604090205481565b600954610102906001600160a01b031681565b600781815481106101bf57600080fd5b600091825260209091200154905081565b600681815481106101e057600080fd5b6000918252602090912001546001600160a01b0316905081565b600154610100900460ff161580801561021757506001805460ff16105b806102375750610226306108ca565b15801561023757506001805460ff16145b61029f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff19168117905580156102c1576001805461ff0019166101001790555b600880546001600160a01b03808b166001600160a01b03199283161790925560098054928a16929091169190911790556002869055600385905560048490558251610313906006906020860190610df2565b508151610327906007906020850190610e57565b50801561036d576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b600260005414156103ca5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610296565b60026000556008546001600160a01b031661040f5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610296565b7f000000000000000000000000000000000000000000000000000000000000000082116104765760405162461bcd60e51b81526020600482015260156024820152746d696e207374616b6520504552435f504f494e545360581b6044820152606401610296565b42600254116104b15760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610296565b60085460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae241590602401602060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190611067565b61056f5760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610296565b7f00000000000000000000000000000000000000000000000000000000000000008111156105d25760405162461bcd60e51b815260206004820152601060248201526f03e3165362c203125203d2031303030360841b6044820152606401610296565b60095460085460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd93339391169163d4b83992916004808201926020929091908290030181600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190610f3d565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190611067565b6107245760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610296565b60006004548361073491906111ca565b90506000808311610746576000610750565b61075082846108d9565b9050600061075e82846111e9565b6003543360009081526005602052604090205491925090610780908590611190565b11156107d857336000908152600560205260408120546003546107a391906111e9565b905060006107b182846111e9565b90506107be338284610a25565b505060035433600090815260056020526040902055610809565b6107e433600083610a25565b3360009081526005602052604081208054839290610803908490611190565b90915550505b60085460065433917f8d2dc8d327ef6f9a2e978cb805ab0b7a0649bc4c0d21f17da147a0a1a79e27ea9188916001600160a01b03169061084a576000610853565b61085387610bd3565b604080519384526001600160a01b0390921660208401529082015260600160405180910390a2600954604080518481526001600160a01b0390921660208301527f7c88b3c18bd2fd22479d6b30684941865a33045c9cd185ee53b25ad215f22947910160405180910390a150506001600055505050565b6001600160a01b03163b151590565b60408051600180825281830190925260009182919060208083019080368337019050509050734a9a27d614a74ee5524909ca27bdbcbb7ed3b3158160008151811061092657610926611231565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508361098e7f0000000000000000000000000000000000000000000000000000000000000000876111a8565b61099891906111ca565b925082816000815181106109ae576109ae611231565b60209081029190910101526008546040516322936c2360e11b81526001600160a01b0390911690634526d846906109eb90859085906004016110c4565b600060405180830381600087803b158015610a0557600080fd5b505af1158015610a19573d6000803e3d6000fd5b50505050505092915050565b604080516001808252818301909252600091602080830190803683370190505090508381600081518110610a5b57610a5b611231565b6001600160a01b03909216602092830291909101909101528115610b2057604080516001808252818301909252600091602080830190803683370190505090508281600081518110610aaf57610aaf611231565b6020908102919091010152600854604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c90610aec90859085906004016110c4565b600060405180830381600087803b158015610b0657600080fd5b505af1158015610b1a573d6000803e3d6000fd5b50505050505b8215610bcd57604080516001808252818301909252600091602080830190803683370190505090508381600081518110610b5c57610b5c611231565b60209081029190910101526008546040516322936c2360e11b81526001600160a01b0390911690634526d84690610b9990859085906004016110c4565b600060405180830381600087803b158015610bb357600080fd5b505af1158015610bc7573d6000803e3d6000fd5b50505050505b50505050565b600654600090819067ffffffffffffffff811115610bf357610bf3611247565b604051908082528060200260200182016040528015610c1c578160200160208202803683370190505b50905060005b600654811015610c995760068181548110610c3f57610c3f611231565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610c6f57610c6f611231565b6001600160a01b039092166020928302919091019091015280610c9181611200565b915050610c22565b5060075460009067ffffffffffffffff811115610cb857610cb8611247565b604051908082528060200260200182016040528015610ce1578160200160208202803683370190505b50905060005b600754811015610d8657600060078281548110610d0657610d06611231565b90600052602060002001547f000000000000000000000000000000000000000000000000000000000000000087610d3d91906111a8565b610d4791906111ca565b9050610d538186611190565b945080838381518110610d6857610d68611231565b60209081029190910101525080610d7e81611200565b915050610ce7565b506008546040516322936c2360e11b81526001600160a01b0390911690634526d84690610db990859085906004016110c4565b600060405180830381600087803b158015610dd357600080fd5b505af1158015610de7573d6000803e3d6000fd5b505050505050919050565b828054828255906000526020600020908101928215610e47579160200282015b82811115610e4757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610e12565b50610e53929150610e92565b5090565b828054828255906000526020600020908101928215610e47579160200282015b82811115610e47578251825591602001919060010190610e77565b5b80821115610e535760008155600101610e93565b600082601f830112610eb857600080fd5b81356020610ecd610ec88361116c565b61113b565b80838252828201915082860187848660051b8901011115610eed57600080fd5b60005b85811015610f0c57813584529284019290840190600101610ef0565b5090979650505050505050565b600060208284031215610f2b57600080fd5b8135610f368161125d565b9392505050565b600060208284031215610f4f57600080fd5b8151610f368161125d565b600080600080600080600060e0888a031215610f7557600080fd5b8735610f808161125d565b9650602088810135610f918161125d565b965060408901359550606089013594506080890135935060a089013567ffffffffffffffff80821115610fc357600080fd5b818b0191508b601f830112610fd757600080fd5b8135610fe5610ec88261116c565b8082825285820191508585018f878560051b880101111561100557600080fd5b600095505b8386101561103157803561101d8161125d565b83526001959095019491860191860161100a565b509650505060c08b013592508083111561104a57600080fd5b50506110588a828b01610ea7565b91505092959891949750929550565b60006020828403121561107957600080fd5b81518015158114610f3657600080fd5b60006020828403121561109b57600080fd5b5035919050565b600080604083850312156110b557600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b828110156111065781516001600160a01b0316845292840192908401906001016110e1565b5050508381038285015284518082528583019183019060005b81811015610f0c5783518352928401929184019160010161111f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561116457611164611247565b604052919050565b600067ffffffffffffffff82111561118657611186611247565b5060051b60200190565b600082198211156111a3576111a361121b565b500190565b6000826111c557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156111e4576111e461121b565b500290565b6000828210156111fb576111fb61121b565b500390565b60006000198214156112145761121461121b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461127257600080fd5b5056fea2646970667358221220b0efae5b0ea929413ccf90473244b676f36cda4c3d0b60cf3b945c5c7a2b447064736f6c63430008070033";

type CappedOnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedOnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedOnboarderShaman__factory extends ContractFactory {
  constructor(...args: CappedOnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CappedOnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<CappedOnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CappedOnboarderShaman {
    return super.attach(address) as CappedOnboarderShaman;
  }
  override connect(signer: Signer): CappedOnboarderShaman__factory {
    return super.connect(signer) as CappedOnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedOnboarderShamanInterface {
    return new utils.Interface(_abi) as CappedOnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedOnboarderShaman {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CappedOnboarderShaman;
  }
}
