/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTClaimerShamanSummoner,
  NFTClaimerShamanSummonerInterface,
} from "../../../../contracts/nftClaimer/NFTClaimer.sol/NFTClaimerShamanSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "SummonComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isShares",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_perNft",
        type: "uint256",
      },
    ],
    name: "summonNFTClaimer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161032238038061032283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61028f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f2ddd931461003b5780638d0d590f1461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610207565b600080548190610090906001600160a01b031661014f565b604051635725a9f960e11b81526001600160a01b03888116600483015287811660248301528615156044830152606482018690529192509082169063ae4b53f290608401600060405180830381600087803b1580156100ee57600080fd5b505af1158015610102573d6000803e3d6000fd5b50506040516001600160a01b038481168252891692507fbe67542a0d2584e637bb4a443f46b840f339fe74336ae26c28e7d2126a05c420915060200160405180910390a295945050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101eb5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b80356001600160a01b03811681146101eb57600080fd5b6000806000806080858703121561021d57600080fd5b610226856101f0565b9350610234602086016101f0565b92506040850135801515811461024957600080fd5b939692955092936060013592505056fea26469706673582212205932b06ef568cffc2fedf864b8964bd37ac03de66cf8ceb841ec34ef711b9a9c64736f6c63430008070033";

type NFTClaimerShamanSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTClaimerShamanSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTClaimerShamanSummoner__factory extends ContractFactory {
  constructor(...args: NFTClaimerShamanSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTClaimerShamanSummoner> {
    return super.deploy(
      _template,
      overrides || {}
    ) as Promise<NFTClaimerShamanSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  override attach(address: string): NFTClaimerShamanSummoner {
    return super.attach(address) as NFTClaimerShamanSummoner;
  }
  override connect(signer: Signer): NFTClaimerShamanSummoner__factory {
    return super.connect(signer) as NFTClaimerShamanSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTClaimerShamanSummonerInterface {
    return new utils.Interface(_abi) as NFTClaimerShamanSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTClaimerShamanSummoner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTClaimerShamanSummoner;
  }
}
