/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SimpleOnboarderShamanSummoner,
  SimpleOnboarderShamanSummonerInterface,
} from "../../../../contracts/simpleOnboarder/SimpleOnboarder.sol/SimpleOnboarderShamanSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "onboarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiery",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "SummonSimpleOnboarder",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
    ],
    name: "summonOnboarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161069538038061069583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610602806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806368ed5a631461003b5780636f2ddd931461006a575b600080fd5b61004e6100493660046103a8565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b60005461004e906001600160a01b031681565b600080548190610095906001600160a01b031661015c565b604051632e94ff0160e21b81529091506001600160a01b0382169063ba53fc04906100ce908d908d908d908d908d908d906004016104ea565b600060405180830381600087803b1580156100e857600080fd5b505af11580156100fc573d6000803e3d6000fd5b50505050896001600160a01b03167f716425a544f9d419ec5b067f776fba0f474f42e5369c55046aeab705bdd35fe9828b8b88888d8d8d604051610147989796959493929190610544565b60405180910390a29998505050505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101f85760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b6001600160a01b038116811461021257600080fd5b50565b803580151581146101f857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561026457610264610225565b604052919050565b600067ffffffffffffffff82111561028657610286610225565b5060051b60200190565b600082601f8301126102a157600080fd5b813560206102b66102b18361026c565b61023b565b82815260059290921b840181019181810190868411156102d557600080fd5b8286015b848110156102f95780356102ec816101fd565b83529183019183016102d9565b509695505050505050565b600082601f83011261031557600080fd5b813560206103256102b18361026c565b82815260059290921b8401810191818101908684111561034457600080fd5b8286015b848110156102f95780358352918301918301610348565b60008083601f84011261037157600080fd5b50813567ffffffffffffffff81111561038957600080fd5b6020830191508360208285010111156103a157600080fd5b9250929050565b60008060008060008060008060e0898b0312156103c457600080fd5b88356103cf816101fd565b975060208901356103df816101fd565b9650604089013595506103f460608a01610215565b9450608089013567ffffffffffffffff8082111561041157600080fd5b61041d8c838d01610290565b955060a08b013591508082111561043357600080fd5b61043f8c838d01610304565b945060c08b013591508082111561045557600080fd5b506104628b828c0161035f565b999c989b5096995094979396929594505050565b600081518084526020808501945080840160005b838110156104af5781516001600160a01b03168752958201959082019060010161048a565b509495945050505050565b600081518084526020808501945080840160005b838110156104af578151875295820195908201906001016104ce565b6001600160a01b0387811682528616602082015260408101859052831515606082015260c06080820181905260009061052590830185610476565b82810360a084015261053781856104ba565b9998505050505050505050565b6001600160a01b038981168252881660208201526040810187905260e0606082018190528101859052600061010086888285013760008388018201528515156080840152601f8701601f19168301838103820160a08501526105a881830187610476565b91505082810360c08401526105bd81856104ba565b9b9a505050505050505050505056fea264697066735822122040f97cf3b8f1d6a5110dc4841204bb582579455d8baec4e78b4fac69dac93f7964736f6c634300080d0033";

type SimpleOnboarderShamanSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOnboarderShamanSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOnboarderShamanSummoner__factory extends ContractFactory {
  constructor(...args: SimpleOnboarderShamanSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleOnboarderShamanSummoner> {
    return super.deploy(
      _template,
      overrides || {}
    ) as Promise<SimpleOnboarderShamanSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  override attach(address: string): SimpleOnboarderShamanSummoner {
    return super.attach(address) as SimpleOnboarderShamanSummoner;
  }
  override connect(signer: Signer): SimpleOnboarderShamanSummoner__factory {
    return super.connect(signer) as SimpleOnboarderShamanSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOnboarderShamanSummonerInterface {
    return new utils.Interface(_abi) as SimpleOnboarderShamanSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleOnboarderShamanSummoner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleOnboarderShamanSummoner;
  }
}
