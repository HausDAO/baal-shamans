/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OnboarderShaman,
  OnboarderShamanInterface,
} from "../../../../contracts/simpleOnboarder/SimpleOnboarder.sol/OnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "units",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToCuts",
        type: "uint256",
      },
    ],
    name: "ObReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "onboarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905554610100900460ff161580801561003357506001805460ff16105b8061005d575061004c3061013160201b6108981760201c565b15801561005d57506001805460ff16145b6100c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100e6576001805461ff0019166101001790555b801561012b576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610140565b6001600160a01b03163b151590565b610e888061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806303314efa1461008857806345f0a44f146100aa5780634c5911b6146100cb578063626d7f63146100d4578063a035b1fe146100e9578063b27fb311146100f2578063e5a2a2a51461011d578063eddcd33e14610130578063fc0c546a14610143575b600080fd5b6004546100959060ff1681565b60405190151581526020015b60405180910390f35b6100bd6100b8366004610c91565b610156565b6040519081526020016100a1565b6100bd60035481565b6100e76100e2366004610b5e565b610177565b005b6100bd60025481565b610105610100366004610c91565b6102ff565b6040516001600160a01b0390911681526020016100a1565b600754610105906001600160a01b031681565b6100e761013e366004610c91565b610329565b600854610105906001600160a01b031681565b6006818154811061016657600080fd5b600091825260209091200154905081565b600154610100900460ff161580801561019457506001805460ff16105b806101b457506101a330610898565b1580156101b457506001805460ff16145b61021c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff191681179055801561023e576001805461ff0019166101001790555b600780546001600160a01b03808b166001600160a01b03199283161790925560088054928a1692909116919091179055600286905560038590556004805485151560ff19909116179055825161029b906005906020860190610a13565b5081516102af906006906020850190610a78565b5080156102f5576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6005818154811061030f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600054141561037c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610213565b60026000556007546001600160a01b03166103c15760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610213565b42600354116103fc5760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610213565b60075460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae241590602401602060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610c74565b6104ba5760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610213565b6000600254826104ca9190610d8e565b60085460075460408051636a5c1cc960e11b815290519394506001600160a01b03928316936323b872dd933393169163d4b839929160048083019260209291908290030181600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105589190610b3a565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b1580156105a757600080fd5b505af11580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df9190610c74565b61061d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610213565b61062733826108a7565b60055460009067ffffffffffffffff81111561064557610645610e16565b60405190808252806020026020018201604052801561066e578160200160208202803683370190505b50905060005b6005548110156106eb576005818154811061069157610691610e00565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106106c1576106c1610e00565b6001600160a01b0390921660209283029190910190910152806106e381610dcf565b915050610674565b50600654600090819067ffffffffffffffff81111561070c5761070c610e16565b604051908082528060200260200182016040528015610735578160200160208202803683370190505b50905060005b6006548110156107d257846006828154811061075957610759610e00565b906000526020600020015461076e9190610db0565b6107789084610d76565b9250846006828154811061078e5761078e610e00565b90600052602060002001546107a39190610db0565b8282815181106107b5576107b5610e00565b6020908102919091010152806107ca81610dcf565b91505061073b565b506007546040516322936c2360e11b81526001600160a01b0390911690634526d846906108059086908590600401610caa565b600060405180830381600087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b5050600754604080518981526001600160a01b0390921660208301528101879052606081018590523392507fee5145abe98a9dbbf5c23df46fcd19c85e95434fe852c7da871bbd12dca40607915060800160405180910390a250506001600055505050565b6001600160a01b03163b151590565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106108dd576108dd610e00565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050828160008151811061092e5761092e610e00565b602090810291909101015260045460ff16156109ad57600754604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c906109769085908590600401610caa565b600060405180830381600087803b15801561099057600080fd5b505af11580156109a4573d6000803e3d6000fd5b50505050610a0d565b6007546040516322936c2360e11b81526001600160a01b0390911690634526d846906109df9085908590600401610caa565b600060405180830381600087803b1580156109f957600080fd5b505af11580156102f5573d6000803e3d6000fd5b50505050565b828054828255906000526020600020908101928215610a68579160200282015b82811115610a6857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610a33565b50610a74929150610ab3565b5090565b828054828255906000526020600020908101928215610a68579160200282015b82811115610a68578251825591602001919060010190610a98565b5b80821115610a745760008155600101610ab4565b600082601f830112610ad957600080fd5b81356020610aee610ae983610d52565b610d21565b80838252828201915082860187848660051b8901011115610b0e57600080fd5b60005b85811015610b2d57813584529284019290840190600101610b11565b5090979650505050505050565b600060208284031215610b4c57600080fd5b8151610b5781610e2c565b9392505050565b600080600080600080600060e0888a031215610b7957600080fd5b8735610b8481610e2c565b9650602088810135610b9581610e2c565b965060408901359550606089013594506080890135610bb381610e44565b935060a089013567ffffffffffffffff80821115610bd057600080fd5b818b0191508b601f830112610be457600080fd5b8135610bf2610ae982610d52565b8082825285820191508585018f878560051b8801011115610c1257600080fd5b600095505b83861015610c3e578035610c2a81610e2c565b835260019590950194918601918601610c17565b509650505060c08b0135925080831115610c5757600080fd5b5050610c658a828b01610ac8565b91505092959891949750929550565b600060208284031215610c8657600080fd5b8151610b5781610e44565b600060208284031215610ca357600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b82811015610cec5781516001600160a01b031684529284019290840190600101610cc7565b5050508381038285015284518082528583019183019060005b81811015610b2d57835183529284019291840191600101610d05565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d4a57610d4a610e16565b604052919050565b600067ffffffffffffffff821115610d6c57610d6c610e16565b5060051b60200190565b60008219821115610d8957610d89610dea565b500190565b600082610dab57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610dca57610dca610dea565b500290565b6000600019821415610de357610de3610dea565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e4157600080fd5b50565b8015158114610e4157600080fdfea264697066735822122012bcf87c3d80f30477a753e0b4f3ef2f6907841582219f8d976120f6531ed48c64736f6c63430008070033";

type OnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnboarderShaman__factory extends ContractFactory {
  constructor(...args: OnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<OnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OnboarderShaman {
    return super.attach(address) as OnboarderShaman;
  }
  override connect(signer: Signer): OnboarderShaman__factory {
    return super.connect(signer) as OnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnboarderShamanInterface {
    return new utils.Interface(_abi) as OnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShaman {
    return new Contract(address, _abi, signerOrProvider) as OnboarderShaman;
  }
}
