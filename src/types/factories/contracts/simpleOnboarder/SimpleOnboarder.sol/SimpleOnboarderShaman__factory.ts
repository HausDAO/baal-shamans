/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SimpleOnboarderShaman,
  SimpleOnboarderShamanInterface,
} from "../../../../contracts/simpleOnboarder/SimpleOnboarder.sol/SimpleOnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToCuts",
        type: "uint256",
      },
    ],
    name: "ObReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "onboarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905554610100900460ff161580801561003357506001805460ff16105b8061005d575061004c3061013160201b6108651760201c565b15801561005d57506001805460ff16145b6100c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100e6576001805461ff0019166101001790555b801561012b576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610140565b6001600160a01b03163b151590565b610e2d8061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806303314efa1461007d57806345f0a44f1461009f5780634c5911b6146100c0578063b27fb311146100c9578063ba53fc04146100f4578063e5a2a2a514610109578063eddcd33e1461011c578063fc0c546a1461012f575b600080fd5b60035461008a9060ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad366004610c58565b610142565b604051908152602001610096565b6100b260025481565b6100dc6100d7366004610c58565b610163565b6040516001600160a01b039091168152602001610096565b610107610102366004610b30565b61018d565b005b6006546100dc906001600160a01b031681565b61010761012a366004610c58565b61030f565b6007546100dc906001600160a01b031681565b6005818154811061015257600080fd5b600091825260209091200154905081565b6004818154811061017357600080fd5b6000918252602090912001546001600160a01b0316905081565b600154610100900460ff16158080156101aa57506001805460ff16105b806101ca57506101b930610865565b1580156101ca57506001805460ff16145b6102325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff1916811790558015610254576001805461ff0019166101001790555b600680546001600160a01b03808a166001600160a01b031992831617909255600780549289169290911691909117905560028590556003805485151560ff1990911617905582516102ac9060049060208601906109e5565b5081516102c0906005906020850190610a4a565b508015610306576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600260005414156103625760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610229565b60026000556006546001600160a01b03166103a75760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610229565b42600254116103e25760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610229565b60065460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae241590602401602060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f9190610c3b565b6104a05760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610229565b60075460065460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd93339391169163d4b83992916004808201926020929091908290030181600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190610b0c565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401602060405180830381600087803b15801561057c57600080fd5b505af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190610c3b565b6105f25760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610229565b6105fc3382610874565b60045460009067ffffffffffffffff81111561061a5761061a610dbb565b604051908082528060200260200182016040528015610643578160200160208202803683370190505b50905060005b6004548110156106c0576004818154811061066657610666610da5565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061069657610696610da5565b6001600160a01b0390921660209283029190910190910152806106b881610d74565b915050610649565b50600554600090819067ffffffffffffffff8111156106e1576106e1610dbb565b60405190808252806020026020018201604052801561070a578160200160208202803683370190505b50905060005b6005548110156107a757846005828154811061072e5761072e610da5565b90600052602060002001546107439190610d55565b61074d9084610d3d565b9250846005828154811061076357610763610da5565b90600052602060002001546107789190610d55565b82828151811061078a5761078a610da5565b60209081029190910101528061079f81610d74565b915050610710565b506006546040516322936c2360e11b81526001600160a01b0390911690634526d846906107da9086908590600401610c71565b600060405180830381600087803b1580156107f457600080fd5b505af1158015610808573d6000803e3d6000fd5b5050600654604080518881526001600160a01b03909216602083015281018590523392507f8d2dc8d327ef6f9a2e978cb805ab0b7a0649bc4c0d21f17da147a0a1a79e27ea915060600160405180910390a2505060016000555050565b6001600160a01b03163b151590565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106108aa576108aa610da5565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106108fb576108fb610da5565b602090810291909101015260035460ff161561097a57600654604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c906109439085908590600401610c71565b600060405180830381600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b505050506109df565b6006546040516322936c2360e11b81526001600160a01b0390911690634526d846906109ac9085908590600401610c71565b600060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b505050505b50505050565b828054828255906000526020600020908101928215610a3a579160200282015b82811115610a3a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610a05565b50610a46929150610a85565b5090565b828054828255906000526020600020908101928215610a3a579160200282015b82811115610a3a578251825591602001919060010190610a6a565b5b80821115610a465760008155600101610a86565b600082601f830112610aab57600080fd5b81356020610ac0610abb83610d19565b610ce8565b80838252828201915082860187848660051b8901011115610ae057600080fd5b60005b85811015610aff57813584529284019290840190600101610ae3565b5090979650505050505050565b600060208284031215610b1e57600080fd5b8151610b2981610dd1565b9392505050565b60008060008060008060c08789031215610b4957600080fd5b8635610b5481610dd1565b9550602087810135610b6581610dd1565b9550604088013594506060880135610b7c81610de9565b9350608088013567ffffffffffffffff80821115610b9957600080fd5b818a0191508a601f830112610bad57600080fd5b8135610bbb610abb82610d19565b8082825285820191508585018e878560051b8801011115610bdb57600080fd5b600095505b83861015610c07578035610bf381610dd1565b835260019590950194918601918601610be0565b509650505060a08a0135925080831115610c2057600080fd5b5050610c2e89828a01610a9a565b9150509295509295509295565b600060208284031215610c4d57600080fd5b8151610b2981610de9565b600060208284031215610c6a57600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b82811015610cb35781516001600160a01b031684529284019290840190600101610c8e565b5050508381038285015284518082528583019183019060005b81811015610aff57835183529284019291840191600101610ccc565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d1157610d11610dbb565b604052919050565b600067ffffffffffffffff821115610d3357610d33610dbb565b5060051b60200190565b60008219821115610d5057610d50610d8f565b500190565b6000816000190483118215151615610d6f57610d6f610d8f565b500290565b6000600019821415610d8857610d88610d8f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610de657600080fd5b50565b8015158114610de657600080fdfea26469706673582212202add813bb4737e7d6e56d319393660e71bc9d4036bfba028d2dd9d70f837a4ac64736f6c63430008070033";

type SimpleOnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOnboarderShaman__factory extends ContractFactory {
  constructor(...args: SimpleOnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleOnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<SimpleOnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleOnboarderShaman {
    return super.attach(address) as SimpleOnboarderShaman;
  }
  override connect(signer: Signer): SimpleOnboarderShaman__factory {
    return super.connect(signer) as SimpleOnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOnboarderShamanInterface {
    return new utils.Interface(_abi) as SimpleOnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleOnboarderShaman {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleOnboarderShaman;
  }
}
