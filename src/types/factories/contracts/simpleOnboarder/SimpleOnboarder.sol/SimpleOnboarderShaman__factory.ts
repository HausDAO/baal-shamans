/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SimpleOnboarderShaman,
  SimpleOnboarderShamanInterface,
} from "../../../../contracts/simpleOnboarder/SimpleOnboarder.sol/SimpleOnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToCuts",
        type: "uint256",
      },
    ],
    name: "ObReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "onboarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905554610100900460ff161580801561003357506001805460ff16105b8061005d575061004c3061013160201b6108401760201c565b15801561005d57506001805460ff16145b6100c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100e6576001805461ff0019166101001790555b801561012b576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610140565b6001600160a01b03163b151590565b610e058061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ba53fc041161005b578063ba53fc0414610104578063e5a2a2a514610119578063eddcd33e1461012c578063fc0c546a1461013f57600080fd5b806303314efa1461008d57806345f0a44f146100af5780634c5911b6146100d0578063b27fb311146100d9575b600080fd5b60035461009a9060ff1681565b60405190151581526020015b60405180910390f35b6100c26100bd366004610a75565b610152565b6040519081526020016100a6565b6100c260025481565b6100ec6100e7366004610a75565b610173565b6040516001600160a01b0390911681526020016100a6565b610117610112366004610b8a565b61019d565b005b6006546100ec906001600160a01b031681565b61011761013a366004610a75565b610318565b6007546100ec906001600160a01b031681565b6005818154811061016257600080fd5b600091825260209091200154905081565b6004818154811061018357600080fd5b6000918252602090912001546001600160a01b0316905081565b600154610100900460ff16158080156101ba57506001805460ff16105b806101d35750303b1580156101d357506001805460ff16145b61023b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff191681179055801561025d576001805461ff0019166101001790555b600680546001600160a01b03808a166001600160a01b031992831617909255600780549289169290911691909117905560028590556003805485151560ff1990911617905582516102b59060049060208601906109c0565b5081516102c9906005906020850190610a25565b50801561030f576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60026000540361036a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610232565b60026000556006546001600160a01b03166103af5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610232565b42600254116103ea5760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610232565b60065460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae2415906024016020604051808303816000875af1158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610c8e565b6104995760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610232565b60075460065460408051636a5c1cc960e11b815290516001600160a01b03938416936323b872dd93339391169163d4b839929160048082019260209290919082900301816000875af11580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190610cb2565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af115801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610c8e565b6105cd5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610232565b6105d7338261084f565b60045460009067ffffffffffffffff8111156105f5576105f5610ab4565b60405190808252806020026020018201604052801561061e578160200160208202803683370190505b50905060005b60045481101561069b576004818154811061064157610641610ccf565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061067157610671610ccf565b6001600160a01b03909216602092830291909101909101528061069381610cfb565b915050610624565b50600554600090819067ffffffffffffffff8111156106bc576106bc610ab4565b6040519080825280602002602001820160405280156106e5578160200160208202803683370190505b50905060005b60055481101561078257846005828154811061070957610709610ccf565b906000526020600020015461071e9190610d14565b6107289084610d33565b9250846005828154811061073e5761073e610ccf565b90600052602060002001546107539190610d14565b82828151811061076557610765610ccf565b60209081029190910101528061077a81610cfb565b9150506106eb565b506006546040516322936c2360e11b81526001600160a01b0390911690634526d846906107b59086908590600401610d4b565b600060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b5050600654604080518881526001600160a01b03909216602083015281018590523392507f8d2dc8d327ef6f9a2e978cb805ab0b7a0649bc4c0d21f17da147a0a1a79e27ea915060600160405180910390a2505060016000555050565b6001600160a01b03163b151590565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061088557610885610ccf565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106108d6576108d6610ccf565b602090810291909101015260035460ff161561095557600654604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c9061091e9085908590600401610d4b565b600060405180830381600087803b15801561093857600080fd5b505af115801561094c573d6000803e3d6000fd5b505050506109ba565b6006546040516322936c2360e11b81526001600160a01b0390911690634526d846906109879085908590600401610d4b565b600060405180830381600087803b1580156109a157600080fd5b505af11580156109b5573d6000803e3d6000fd5b505050505b50505050565b828054828255906000526020600020908101928215610a15579160200282015b82811115610a1557825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906109e0565b50610a21929150610a60565b5090565b828054828255906000526020600020908101928215610a15579160200282015b82811115610a15578251825591602001919060010190610a45565b5b80821115610a215760008155600101610a61565b600060208284031215610a8757600080fd5b5035919050565b6001600160a01b0381168114610aa357600080fd5b50565b8015158114610aa357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610af357610af3610ab4565b604052919050565b600067ffffffffffffffff821115610b1557610b15610ab4565b5060051b60200190565b600082601f830112610b3057600080fd5b81356020610b45610b4083610afb565b610aca565b82815260059290921b84018101918181019086841115610b6457600080fd5b8286015b84811015610b7f5780358352918301918301610b68565b509695505050505050565b60008060008060008060c08789031215610ba357600080fd5b8635610bae81610a8e565b9550602087810135610bbf81610a8e565b9550604088013594506060880135610bd681610aa6565b9350608088013567ffffffffffffffff80821115610bf357600080fd5b818a0191508a601f830112610c0757600080fd5b8135610c15610b4082610afb565b81815260059190911b8301840190848101908d831115610c3457600080fd5b938501935b82851015610c5b578435610c4c81610a8e565b82529385019390850190610c39565b9650505060a08a0135925080831115610c7357600080fd5b5050610c8189828a01610b1f565b9150509295509295509295565b600060208284031215610ca057600080fd5b8151610cab81610aa6565b9392505050565b600060208284031215610cc457600080fd5b8151610cab81610a8e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d0d57610d0d610ce5565b5060010190565b6000816000190483118215151615610d2e57610d2e610ce5565b500290565b60008219821115610d4657610d46610ce5565b500190565b604080825283519082018190526000906020906060840190828701845b82811015610d8d5781516001600160a01b031684529284019290840190600101610d68565b5050508381038285015284518082528583019183019060005b81811015610dc257835183529284019291840191600101610da6565b509097965050505050505056fea2646970667358221220713b914bcd6a974e8fc31c5eb1b8643618814217913d02b5fbd4df990c66b9ba64736f6c634300080d0033";

type SimpleOnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOnboarderShaman__factory extends ContractFactory {
  constructor(...args: SimpleOnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleOnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<SimpleOnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleOnboarderShaman {
    return super.attach(address) as SimpleOnboarderShaman;
  }
  override connect(signer: Signer): SimpleOnboarderShaman__factory {
    return super.connect(signer) as SimpleOnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOnboarderShamanInterface {
    return new utils.Interface(_abi) as SimpleOnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleOnboarderShaman {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleOnboarderShaman;
  }
}
