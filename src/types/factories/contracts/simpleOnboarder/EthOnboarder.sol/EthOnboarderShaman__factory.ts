/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EthOnboarderShaman,
  EthOnboarderShamanInterface,
} from "../../../../contracts/simpleOnboarder/EthOnboarder.sol/EthOnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "isShares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
    ],
    name: "ObReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "PERC_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minTribute",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isShares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTribute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onboarder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052620f424060805234801561001757600080fd5b506001600081905554610100900460ff161580801561003a57506001805460ff16105b8061006457506100533061013860201b6108dd1760201c565b15801561006457506001805460ff16145b6100cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff19168117905580156100ed576001805461ff0019166101001790555b8015610132576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50610147565b6001600160a01b03163b151590565b608051610fa26101696000396000818161018401526104020152610fa26000f3fe6080604052600436106100955760003560e01c8063b27fb31111610059578063b27fb3111461013a578063caedeefd14610172578063e5a2a2a5146101a6578063f3593cd0146101c6578063f87f1723146101dc57600080fd5b806326e9d37c146100a957806345f0a44f146100d25780634c5911b6146100f25780637867385f146101085780639757b8aa1461011057600080fd5b366100a4576100a26101fc565b005b600080fd5b3480156100b557600080fd5b506100bf60045481565b6040519081526020015b60405180910390f35b3480156100de57600080fd5b506100bf6100ed366004610d37565b6106de565b3480156100fe57600080fd5b506100bf60025481565b6100a26101fc565b34801561011c57600080fd5b5060055461012a9060ff1681565b60405190151581526020016100c9565b34801561014657600080fd5b5061015a610155366004610d37565b6106ff565b6040516001600160a01b0390911681526020016100c9565b34801561017e57600080fd5b506100bf7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b257600080fd5b5060085461015a906001600160a01b031681565b3480156101d257600080fd5b506100bf60035481565b3480156101e857600080fd5b506100a26101f7366004610c0d565b610729565b600260005414156102545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556008546001600160a01b03166102995760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b604482015260640161024b565b42600254116102d45760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b604482015260640161024b565b60085460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae241590602401602060405180830381600087803b15801561031957600080fd5b505af115801561032d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103519190610d1a565b6103925760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b604482015260640161024b565b6004543410156103d25760405162461bcd60e51b815260206004820152600b60248201526a216d696e5472696275746560a81b604482015260640161024b565b6000805b600754811015610536576000600782815481106103f5576103f5610f1a565b90600052602060002001547f00000000000000000000000000000000000000000000000000000000000000003461042c9190610e91565b6104369190610eb3565b905061045d6040518060400160405280600381526020016218dd5d60ea1b815250826108ec565b60006006838154811061047257610472610f1a565b60009182526020822001546040516001600160a01b039091169184919081818185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b50509050806105155760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bc818dd5d0819985a5b195960521b604482015260640161024b565b61051f8285610e79565b93505050808061052e90610ee9565b9150506103d6565b506003546000906105478334610ed2565b6105519190610eb3565b90506000600860009054906101000a90046001600160a01b03166001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105a557600080fd5b505af11580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd9190610be9565b6001600160a01b03166105f08434610ed2565b604051600081818185875af1925050503d806000811461062c576040519150601f19603f3d011682016040523d82523d6000602084013e610631565b606091505b50509050806106745760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161024b565b61067e3383610935565b60085460408051348152602081018690529081018490526001600160a01b03909116606082015233907f2445150beb7eca0f098e1dd0ae8d1263d460e7dd9cf5af6c2066f795353519909060800160405180910390a25050600160005550565b600781815481106106ee57600080fd5b600091825260209091200154905081565b6006818154811061070f57600080fd5b6000918252602090912001546001600160a01b0316905081565b600154610100900460ff161580801561074657506001805460ff16105b806107665750610755306108dd565b15801561076657506001805460ff16145b6107c95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161024b565b6001805460ff19168117905580156107eb576001805461ff0019166101001790555b815183511461082e5760405162461bcd60e51b815260206004820152600f60248201526e6375747320213d20616d6f756e747360881b604482015260640161024b565b600880546001600160a01b0319166001600160a01b038a161790556002879055600386905560048590556005805460ff19168515151790558251610879906006906020860190610ac2565b50815161088d906007906020850190610b27565b5080156108d3576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b03163b151590565b6109318282604051602401610902929190610dc7565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610aa1565b5050565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061096b5761096b610f1a565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106109bc576109bc610f1a565b602090810291909101015260055460ff1615610a3b57600854604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c90610a049085908590600401610d50565b600060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b50505050610a9b565b6008546040516322936c2360e11b81526001600160a01b0390911690634526d84690610a6d9085908590600401610d50565b600060405180830381600087803b158015610a8757600080fd5b505af11580156108d3573d6000803e3d6000fd5b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054828255906000526020600020908101928215610b17579160200282015b82811115610b1757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ae2565b50610b23929150610b62565b5090565b828054828255906000526020600020908101928215610b17579160200282015b82811115610b17578251825591602001919060010190610b47565b5b80821115610b235760008155600101610b63565b600082601f830112610b8857600080fd5b81356020610b9d610b9883610e55565b610e24565b80838252828201915082860187848660051b8901011115610bbd57600080fd5b60005b85811015610bdc57813584529284019290840190600101610bc0565b5090979650505050505050565b600060208284031215610bfb57600080fd5b8151610c0681610f46565b9392505050565b600080600080600080600060e0888a031215610c2857600080fd5b8735610c3381610f46565b9650602088810135965060408901359550606089013594506080890135610c5981610f5e565b935060a089013567ffffffffffffffff80821115610c7657600080fd5b818b0191508b601f830112610c8a57600080fd5b8135610c98610b9882610e55565b8082825285820191508585018f878560051b8801011115610cb857600080fd5b600095505b83861015610ce4578035610cd081610f46565b835260019590950194918601918601610cbd565b509650505060c08b0135925080831115610cfd57600080fd5b5050610d0b8a828b01610b77565b91505092959891949750929550565b600060208284031215610d2c57600080fd5b8151610c0681610f5e565b600060208284031215610d4957600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b82811015610d925781516001600160a01b031684529284019290840190600101610d6d565b5050508381038285015284518082528583019183019060005b81811015610bdc57835183529284019291840191600101610dab565b604081526000835180604084015260005b81811015610df55760208187018101516060868401015201610dd8565b81811115610e07576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e4d57610e4d610f30565b604052919050565b600067ffffffffffffffff821115610e6f57610e6f610f30565b5060051b60200190565b60008219821115610e8c57610e8c610f04565b500190565b600082610eae57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610ecd57610ecd610f04565b500290565b600082821015610ee457610ee4610f04565b500390565b6000600019821415610efd57610efd610f04565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f5b57600080fd5b50565b8015158114610f5b57600080fdfea2646970667358221220e4bd17147212d1d136b6c414a85501a8c20c8d324b46163cdf2b54bf4778b3b164736f6c63430008070033";

type EthOnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthOnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthOnboarderShaman__factory extends ContractFactory {
  constructor(...args: EthOnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EthOnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<EthOnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EthOnboarderShaman {
    return super.attach(address) as EthOnboarderShaman;
  }
  override connect(signer: Signer): EthOnboarderShaman__factory {
    return super.connect(signer) as EthOnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthOnboarderShamanInterface {
    return new utils.Interface(_abi) as EthOnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthOnboarderShaman {
    return new Contract(address, _abi, signerOrProvider) as EthOnboarderShaman;
  }
}
