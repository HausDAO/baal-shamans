/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "calculate",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSecondsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "updateSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001bad38038062001bad8339810160408190526200003991620000e5565b620000443362000076565b600580546001600160a01b039384166001600160a01b031991821617909155600680549290931691161790556200011d565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060408385031215620000f957600080fd5b6200010483620000c8565b91506200011460208401620000c8565b90509250929050565b611a80806200012d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639eab5253116100b8578063cf2933c11161007c578063cf2933c1146102cb578063d0e4b2f4146102de578063e46867fd146102f1578063e4a7c60314610304578063f2fde38b1461030c578063f76541761461031f57600080fd5b80639eab52531461025f578063b0affdf714610274578063c046371114610295578063c7de6440146102a5578063c818c70f146102b857600080fd5b8063479d0a0d116100ff578063479d0a0d146101bf578063484194e6146101d25780635daf08ca146101fd578063715018a6146102465780638da5cb5b1461024e57600080fd5b806306661abd1461013c5780630726312a146101585780631267c6da1461016d57806334e2fc65146101805780633f26479e146101a0575b600080fd5b61014560025481565b6040519081526020015b60405180910390f35b61016b6101663660046113ad565b610332565b005b61016b61017b3660046113f0565b61034a565b61014561018e3660046113f0565b60036020526000908152604090205481565b6101aa620f424081565b60405163ffffffff909116815260200161014f565b61016b6101cd3660046114e8565b6103b5565b6005546101e5906001600160a01b031681565b6040516001600160a01b03909116815260200161014f565b61021061020b366004611525565b610438565b604080516001600160a01b03909516855263ffffffff93841660208601529183169184019190915216606082015260800161014f565b61016b610485565b6004546001600160a01b03166101e5565b610267610499565b60405161014f919061153e565b6102876102823660046114e8565b610530565b60405161014f929190611630565b6000546101aa9063ffffffff1681565b61016b6102b33660046113f0565b610981565b61016b6102c636600461165e565b6109bb565b61016b6102d93660046116f3565b6109d1565b61016b6102ec366004611757565b610a34565b61016b6102ff366004611781565b610aa7565b61016b610b29565b61016b61031a3660046113f0565b610b31565b6006546101e5906001600160a01b031681565b61033a610baa565b610345838383610c04565b505050565b610352610baa565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b5050505050565b6000806103c183610530565b600554600654604051637677856760e11b81529395509193506001600160a01b039081169263ecef0ace9261040192169086908690600090600401611809565b600060405180830381600087803b15801561041b57600080fd5b505af115801561042f573d6000803e3d6000fd5b50505050505050565b6001818154811061044857600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b61048d610baa565b6104976000610e3e565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561052757600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016104bd565b50505050905090565b60608060008060006001805490508651146105815760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b86518110156106ec5760008782815181106105a1576105a1611857565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156105f15750806001600160a01b0316836001600160a01b0316105b6106485760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b6064820152608401610578565b80925060006001838154811061066057610660611857565b600091825260209091200154600160c01b900463ffffffff1611156106d9576106bf6106bc6106b76001858154811061069b5761069b611857565b600091825260209091200154600160a01b900463ffffffff1690565b610e90565b90565b6106c99085611883565b9350846106d58161189b565b9550505b50806106e48161189b565b915050610584565b5060008367ffffffffffffffff8111156107085761070861140b565b604051908082528060200260200182016040528015610731578160200160208202803683370190505b50905060008467ffffffffffffffff81111561074f5761074f61140b565b604051908082528060200260200182016040528015610778578160200160208202803683370190505b50905060008060005b8a51811015610923576000600360008d84815181106107a2576107a2611857565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490506000600180836107dd91906118b4565b815481106107ed576107ed611857565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b900490921660608301529091501561090e57806000015187858151811061086557610865611857565b6001600160a01b039092166020928302919091018201528101518990620f424090610899906106bc9063ffffffff16610e90565b6108a391906118cb565b6108ad9190611900565b8685815181106108bf576108bf611857565b602002602001019063ffffffff16908163ffffffff16815250508584815181106108eb576108eb611857565b6020026020010151856108fe9190611914565b94508361090a8161189b565b9450505b5050808061091b9061189b565b915050610781565b5063ffffffff8216620f4240146109725761094182620f424061193c565b8360008151811061095457610954611857565b602002602001018181516109689190611914565b63ffffffff169052505b50919890975095505050505050565b610989610baa565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610380565b6109c3610baa565b6109cd8282610eed565b5050565b6109d9610baa565b60005b60015481101561034557610a228382815181106109fb576109fb611857565b6020026020010151838381518110610a1557610a15611857565b6020026020010151610eed565b80610a2c8161189b565b9150506109dc565b610a3c610baa565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610a8b57600080fd5b505af1158015610a9f573d6000803e3d6000fd5b505050505050565b610aaf610baa565b60005b8351811015610b2357610b11848281518110610ad057610ad0611857565b6020026020010151848381518110610aea57610aea611857565b6020026020010151848481518110610b0457610b04611857565b6020026020010151610c04565b80610b1b8161189b565b915050610ab2565b50505050565b610497611081565b610b39610baa565b6001600160a01b038116610b9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610578565b610ba781610e3e565b50565b6004546001600160a01b031633146104975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b6001600160a01b03831660009081526003602052604090205415610c5f5760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b6044820152606401610578565b4263ffffffff168163ffffffff161115610cc75760405162461bcd60e51b815260206004820152602360248201527f737461727420646174652063616e206e6f7420626520696e207468652066757460448201526275726560e81b6064820152608401610578565b60648263ffffffff161115610cee5760405162461bcd60e51b815260040161057890611961565b604080516080810182526001600160a01b038086168083526000602080850182815263ffffffff8981168789019081528982166060890190815260018054808201825581885299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909a0180549551935192518516600160e01b026001600160e01b03938616600160c01b02939093166001600160c01b0394909516600160a01b026001600160c01b03199096169a90991699909917939093171617179093556002549181526003909252928120839055917fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610def9082906118b4565b81548110610dff57610dff611857565b9060005260206000200142604051610e189291906119ab565b60405180910390a1600160026000828254610e339190611883565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610ed057604051636155b67d60e01b815260048101849052602401610578565b610ee66106bc670de0b6b3a76400008302611205565b9392505050565b6001600160a01b0382166000908152600360205260408120549003610f455760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b6044820152606401610578565b60648163ffffffff161115610f6c5760405162461bcd60e51b815260040161057890611961565b6001600160a01b0382166000908152600360205260409020548190600190610f959082906118b4565b81548110610fa557610fa5611857565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb49060019061101c9082906118b4565b8154811061102c5761102c611857565b9060005260206000200160405161107591546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606082015260800190565b60405180910390a15050565b4260005b6001548110156111b6576000600182815481106110a4576110a4611857565b600091825260208220018054909250600160a01b900463ffffffff1681036110e65781546110df90600160e01b900463ffffffff168561193c565b90506110fc565b6000546110f99063ffffffff168561193c565b90505b815460009060649061111b90600160c01b900463ffffffff16846119fb565b6111259190611a27565b835490915081908490601490611149908490600160a01b900463ffffffff16611914565b92506101000a81548163ffffffff021916908363ffffffff1602179055507f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f21283826040516111989291906119ab565b60405180910390a150505080806111ae9061189b565b915050611085565b506000805463ffffffff191663ffffffff83169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b60008160000361121757506000919050565b50600181600160801b81106112315760409190911b9060801c5b68010000000000000000811061124c5760209190911b9060401c5b64010000000081106112635760109190911b9060201c5b6201000081106112785760089190911b9060101c5b610100811061128c5760049190911b9060081c5b6010811061129f5760029190911b9060041c5b600481106112af57600182901b91505b60018284816112c0576112c06118ea565b048301901c915060018284816112d8576112d86118ea565b048301901c915060018284816112f0576112f06118ea565b048301901c91506001828481611308576113086118ea565b048301901c91506001828481611320576113206118ea565b048301901c91506001828481611338576113386118ea565b048301901c91506001828481611350576113506118ea565b048301901c91506000828481611368576113686118ea565b049050808310611376578092505b5050919050565b80356001600160a01b038116811461139457600080fd5b919050565b803563ffffffff8116811461139457600080fd5b6000806000606084860312156113c257600080fd5b6113cb8461137d565b92506113d960208501611399565b91506113e760408501611399565b90509250925092565b60006020828403121561140257600080fd5b610ee68261137d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561144a5761144a61140b565b604052919050565b600067ffffffffffffffff82111561146c5761146c61140b565b5060051b60200190565b600082601f83011261148757600080fd5b8135602061149c61149783611452565b611421565b82815260059290921b840181019181810190868411156114bb57600080fd5b8286015b848110156114dd576114d08161137d565b83529183019183016114bf565b509695505050505050565b6000602082840312156114fa57600080fd5b813567ffffffffffffffff81111561151157600080fd5b61151d84828501611476565b949350505050565b60006020828403121561153757600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156115a957815180516001600160a01b031685528681015163ffffffff908116888701528682015181168787015260609182015116908501526080909301929085019060010161155b565b5091979650505050505050565b600081518084526020808501945080840160005b838110156115ef5781516001600160a01b0316875295820195908201906001016115ca565b509495945050505050565b600081518084526020808501945080840160005b838110156115ef57815163ffffffff168752958201959082019060010161160e565b60408152600061164360408301856115b6565b828103602084015261165581856115fa565b95945050505050565b6000806040838503121561167157600080fd5b61167a8361137d565b915061168860208401611399565b90509250929050565b600082601f8301126116a257600080fd5b813560206116b261149783611452565b82815260059290921b840181019181810190868411156116d157600080fd5b8286015b848110156114dd576116e681611399565b83529183019183016116d5565b6000806040838503121561170657600080fd5b823567ffffffffffffffff8082111561171e57600080fd5b61172a86838701611476565b9350602085013591508082111561174057600080fd5b5061174d85828601611691565b9150509250929050565b6000806040838503121561176a57600080fd5b6117738361137d565b91506116886020840161137d565b60008060006060848603121561179657600080fd5b833567ffffffffffffffff808211156117ae57600080fd5b6117ba87838801611476565b945060208601359150808211156117d057600080fd5b6117dc87838801611691565b935060408601359150808211156117f257600080fd5b506117ff86828701611691565b9150509250925092565b6001600160a01b038516815260806020820181905260009061182d908301866115b6565b828103604084015261183f81866115fa565b91505063ffffffff8316606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156118965761189661186d565b500190565b6000600182016118ad576118ad61186d565b5060010190565b6000828210156118c6576118c661186d565b500390565b60008160001904831182151516156118e5576118e561186d565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261190f5761190f6118ea565b500490565b600063ffffffff8083168185168083038211156119335761193361186d565b01949350505050565b600063ffffffff838116908316818110156119595761195961186d565b039392505050565b6020808252602a908201527f696e76616c6964205f61637469766974794d756c7469706c6965722c2062657460408201526907765656e20302d3130360b41b606082015260800190565b60a081016119e88285546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b600063ffffffff80831681851681830481118215151615611a1e57611a1e61186d565b02949350505050565b600063ffffffff80841680611a3e57611a3e6118ea565b9216919091049291505056fea26469706673582212207c85c866929fef74a94ac06af6688b590b14c847eb15f9855917273ebefbecdb64736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
