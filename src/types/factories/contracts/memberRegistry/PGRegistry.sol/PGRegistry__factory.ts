/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001cd738038062001cd78339810160408190526200003991620000e5565b620000443362000076565b600580546001600160a01b039384166001600160a01b031991821617909155600680549290931691161790556200011d565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060408385031215620000f957600080fd5b6200010483620000c8565b91506200011460208401620000c8565b90509250929050565b611baa806200012d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639eab5253116100ad578063cf2933c111610071578063cf2933c114610294578063d0e4b2f4146102a7578063e46867fd146102ba578063f2fde38b146102cd578063f7654176146102e057600080fd5b80639eab525314610236578063a1d1682c1461024b578063c04637111461025e578063c7de64401461026e578063c818c70f1461028157600080fd5b80633f26479e116100f45780633f26479e1461018a578063484194e6146101a95780635daf08ca146101d4578063715018a61461021d5780638da5cb5b1461022557600080fd5b806306661abd146101265780630726312a146101425780631267c6da1461015757806334e2fc651461016a575b600080fd5b61012f60025481565b6040519081526020015b60405180910390f35b6101556101503660046114c9565b6102f3565b005b61015561016536600461150c565b61030b565b61012f61017836600461150c565b60036020526000908152604090205481565b610194620f424081565b60405163ffffffff9091168152602001610139565b6005546101bc906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b6101e76101e2366004611527565b610376565b604080516001600160a01b03909516855263ffffffff938416602086015291831691840191909152166060820152608001610139565b6101556103c3565b6004546001600160a01b03166101bc565b61023e6103d7565b6040516101399190611540565b610155610259366004611695565b61046e565b6000546101949063ffffffff1681565b61015561027c36600461150c565b6109e7565b61015561028f3660046116d2565b610a21565b6101556102a2366004611767565b610a37565b6101556102b53660046117cb565b610a9a565b6101556102c83660046117f5565b610b0d565b6101556102db36600461150c565b610b8f565b6006546101bc906001600160a01b031681565b6102fb610c08565b610306838383610c62565b505050565b610313610c08565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b5050505050565b6001818154811061038657600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6103cb610c08565b6103d56000610e9c565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561046557600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016103fb565b50505050905090565b600080600061047b610eee565b6001548451146104c15760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b845181101561059c5760008582815181106104e1576104e161187d565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156105315750806001600160a01b0316836001600160a01b0316105b6105885760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b60648201526084016104b8565b915080610594816118a9565b9150506104c4565b5060005b600154811015610650576000600182815481106105bf576105bf61187d565b600091825260209091200154600160c01b900463ffffffff16111561063e576000610612600183815481106105f6576105f661187d565b600091825260209091200154600160a01b900463ffffffff1690565b905061062361062082611085565b90565b61062d90856118c2565b935084610639816118a9565b955050505b80610648816118a9565b9150506105a0565b506106906040518060400160405280601781526020017f746f74616c207365636f6e6473206f6620616374697665000000000000000000815250836110e2565b60008367ffffffffffffffff8111156106ab576106ab6115b8565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060008467ffffffffffffffff8111156106f2576106f26115b8565b60405190808252806020026020018201604052801561071b578160200160208202803683370190505b509050600080805b88518110156108b8576000600360008b84815181106107445761074461187d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006001808361077f91906118da565b8154811061078f5761078f61187d565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b90049092166060830152909150156108a35780600001518784815181106108075761080761187d565b6001600160a01b039092166020928302919091018201528101518990620f42409061083b906106209063ffffffff16611085565b61084591906118f1565b61084f9190611926565b8684815181106108615761086161187d565b602002602001019063ffffffff16908163ffffffff168152505085838151811061088d5761088d61187d565b6020026020010151846108a0919061193a565b93505b505080806108b0906118a9565b915050610723565b506108ed6040518060400160405280600c81526020016b1c9d5b9b9a5b99d51bdd185b60a21b8152508263ffffffff166110e2565b63ffffffff8116620f4240146109715761090a81620f4240611962565b8360008151811061091d5761091d61187d565b60200260200101818151610931919061193a565b63ffffffff169052506040805180820190915260048152633234b33360e11b60208201526109719061096683620f4240611962565b63ffffffff166110e2565b600554600654604051637677856760e11b81526001600160a01b039283169263ecef0ace926109ab92911690889088908890600401611987565b600060405180830381600087803b1580156109c557600080fd5b505af11580156109d9573d6000803e3d6000fd5b505050505050505050505050565b6109ef610c08565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610341565b610a29610c08565b610a338282611127565b5050565b610a3f610c08565b60005b60015481101561030657610a88838281518110610a6157610a6161187d565b6020026020010151838381518110610a7b57610a7b61187d565b6020026020010151611127565b80610a92816118a9565b915050610a42565b610aa2610c08565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b505050505050565b610b15610c08565b60005b8351811015610b8957610b77848281518110610b3657610b3661187d565b6020026020010151848381518110610b5057610b5061187d565b6020026020010151848481518110610b6a57610b6a61187d565b6020026020010151610c62565b80610b81816118a9565b915050610b18565b50505050565b610b97610c08565b6001600160a01b038116610bfc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b8565b610c0581610e9c565b50565b6004546001600160a01b031633146103d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b8565b6001600160a01b03831660009081526003602052604090205415610cbd5760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016104b8565b4263ffffffff168163ffffffff161115610d255760405162461bcd60e51b815260206004820152602360248201527f737461727420646174652063616e206e6f7420626520696e207468652066757460448201526275726560e81b60648201526084016104b8565b60648263ffffffff161115610d4c5760405162461bcd60e51b81526004016104b890611a2e565b604080516080810182526001600160a01b038086168083526000602080850182815263ffffffff8981168789019081528982166060890190815260018054808201825581885299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909a0180549551935192518516600160e01b026001600160e01b03938616600160c01b02939093166001600160c01b0394909516600160a01b026001600160c01b03199096169a90991699909917939093171617179093556002549181526003909252928120839055917fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610e4d9082906118da565b81548110610e5d57610e5d61187d565b9060005260206000200142604051610e76929190611a78565b60405180910390a1600160026000828254610e9191906118c2565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b4260005b60015481101561103657600060018281548110610f1157610f1161187d565b600091825260208220018054909250600160a01b900463ffffffff168103610f53578154610f4c90600160e01b900463ffffffff1685611962565b9050610f69565b600054610f669063ffffffff1685611962565b90505b8154600090606490610f8890600160c01b900463ffffffff1684611ac8565b610f929190611af4565b835490915081908490601490610fb6908490600160a01b900463ffffffff1661193a565b82546101009290920a63ffffffff8181021990931691831602179091558454610fe79250600160a01b9004166112bb565b7f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f2128382604051611018929190611a78565b60405180910390a1505050808061102e906118a9565b915050610ef2565b506000805463ffffffff191663ffffffff83169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218111156110c557604051636155b67d60e01b8152600481018490526024016104b8565b6110db610620670de0b6b3a76400008302611300565b9392505050565b610a3382826040516024016110f8929190611b17565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611478565b6001600160a01b038216600090815260036020526040812054900361117f5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016104b8565b60648163ffffffff1611156111a65760405162461bcd60e51b81526004016104b890611a2e565b6001600160a01b03821660009081526003602052604090205481906001906111cf9082906118da565b815481106111df576111df61187d565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb4906001906112569082906118da565b815481106112665761126661187d565b906000526020600020016040516112af91546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606082015260800190565b60405180910390a15050565b610c05816040516024016112d191815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052611478565b60008160000361131257506000919050565b50600181600160801b811061132c5760409190911b9060801c5b6801000000000000000081106113475760209190911b9060401c5b640100000000811061135e5760109190911b9060201c5b6201000081106113735760089190911b9060101c5b61010081106113875760049190911b9060081c5b6010811061139a5760029190911b9060041c5b600481106113aa57600182901b91505b60018284816113bb576113bb611910565b048301901c915060018284816113d3576113d3611910565b048301901c915060018284816113eb576113eb611910565b048301901c9150600182848161140357611403611910565b048301901c9150600182848161141b5761141b611910565b048301901c9150600182848161143357611433611910565b048301901c9150600182848161144b5761144b611910565b048301901c9150600082848161146357611463611910565b049050808310611471578092505b5050919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b03811681146114b057600080fd5b919050565b803563ffffffff811681146114b057600080fd5b6000806000606084860312156114de57600080fd5b6114e784611499565b92506114f5602085016114b5565b9150611503604085016114b5565b90509250925092565b60006020828403121561151e57600080fd5b6110db82611499565b60006020828403121561153957600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156115ab57815180516001600160a01b031685528681015163ffffffff908116888701528682015181168787015260609182015116908501526080909301929085019060010161155d565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115f7576115f76115b8565b604052919050565b600067ffffffffffffffff821115611619576116196115b8565b5060051b60200190565b600082601f83011261163457600080fd5b81356020611649611644836115ff565b6115ce565b82815260059290921b8401810191818101908684111561166857600080fd5b8286015b8481101561168a5761167d81611499565b835291830191830161166c565b509695505050505050565b6000602082840312156116a757600080fd5b813567ffffffffffffffff8111156116be57600080fd5b6116ca84828501611623565b949350505050565b600080604083850312156116e557600080fd5b6116ee83611499565b91506116fc602084016114b5565b90509250929050565b600082601f83011261171657600080fd5b81356020611726611644836115ff565b82815260059290921b8401810191818101908684111561174557600080fd5b8286015b8481101561168a5761175a816114b5565b8352918301918301611749565b6000806040838503121561177a57600080fd5b823567ffffffffffffffff8082111561179257600080fd5b61179e86838701611623565b935060208501359150808211156117b457600080fd5b506117c185828601611705565b9150509250929050565b600080604083850312156117de57600080fd5b6117e783611499565b91506116fc60208401611499565b60008060006060848603121561180a57600080fd5b833567ffffffffffffffff8082111561182257600080fd5b61182e87838801611623565b9450602086013591508082111561184457600080fd5b61185087838801611705565b9350604086013591508082111561186657600080fd5b5061187386828701611705565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118bb576118bb611893565b5060010190565b600082198211156118d5576118d5611893565b500190565b6000828210156118ec576118ec611893565b500390565b600081600019048311821515161561190b5761190b611893565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261193557611935611910565b500490565b600063ffffffff80831681851680830382111561195957611959611893565b01949350505050565b600063ffffffff8381169083168181101561197f5761197f611893565b039392505050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b818110156119d55785518516835294830194918301916001016119b7565b5050858103604087015287518082529082019350915080870160005b83811015611a1357815163ffffffff16855293820193908201906001016119f1565b50505063ffffffff8516606085015250905095945050505050565b6020808252602a908201527f696e76616c6964205f61637469766974794d756c7469706c6965722c2062657460408201526907765656e20302d3130360b41b606082015260800190565b60a08101611ab58285546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b600063ffffffff80831681851681830481118215151615611aeb57611aeb611893565b02949350505050565b600063ffffffff80841680611b0b57611b0b611910565b92169190910492915050565b604081526000835180604084015260005b81811015611b455760208187018101516060868401015201611b28565b81811115611b57576000606083860101525b50602083019390935250601f91909101601f19160160600191905056fea264697066735822122063a7c68f16e1913b1c263287eb0d1ced069d6922841cfd83df955322606b338364736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
