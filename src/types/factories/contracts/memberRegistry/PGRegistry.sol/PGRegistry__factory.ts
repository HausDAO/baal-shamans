/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001b1338038062001b138339810160408190526200003991620000e5565b620000443362000076565b600580546001600160a01b039384166001600160a01b031991821617909155600680549290931691161790556200011d565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060408385031215620000f957600080fd5b6200010483620000c8565b91506200011460208401620000c8565b90509250929050565b6119e6806200012d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639eab5253116100ad578063cf2933c111610071578063cf2933c114610294578063d0e4b2f4146102a7578063e46867fd146102ba578063f2fde38b146102cd578063f7654176146102e057600080fd5b80639eab525314610236578063a1d1682c1461024b578063c04637111461025e578063c7de64401461026e578063c818c70f1461028157600080fd5b80633f26479e116100f45780633f26479e1461018a578063484194e6146101a95780635daf08ca146101d4578063715018a61461021d5780638da5cb5b1461022557600080fd5b806306661abd146101265780630726312a146101425780631267c6da1461015757806334e2fc651461016a575b600080fd5b61012f60025481565b6040519081526020015b60405180910390f35b610155610150366004611362565b6102f3565b005b6101556101653660046113a5565b61030b565b61012f6101783660046113a5565b60036020526000908152604090205481565b610194620f424081565b60405163ffffffff9091168152602001610139565b6005546101bc906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b6101e76101e23660046113c0565b610376565b604080516001600160a01b03909516855263ffffffff938416602086015291831691840191909152166060820152608001610139565b6101556103c3565b6004546001600160a01b03166101bc565b61023e6103d7565b60405161013991906113d9565b61015561025936600461152e565b61046e565b6000546101949063ffffffff1681565b61015561027c3660046113a5565b61093e565b61015561028f36600461156b565b610978565b6101556102a2366004611600565b61098e565b6101556102b5366004611664565b6109f1565b6101556102c836600461168e565b610a64565b6101556102db3660046113a5565b610ae6565b6006546101bc906001600160a01b031681565b6102fb610b5f565b610306838383610bb9565b505050565b610313610b5f565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b5050505050565b6001818154811061038657600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6103cb610b5f565b6103d56000610df3565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561046557600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016103fb565b50505050905090565b600080600061047b610e45565b6001548451146104c15760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b845181101561059c5760008582815181106104e1576104e1611716565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156105315750806001600160a01b0316836001600160a01b0316105b6105885760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b60648201526084016104b8565b91508061059481611742565b9150506104c4565b5060005b600154811015610650576000600182815481106105bf576105bf611716565b600091825260209091200154600160c01b900463ffffffff16111561063e576000610612600183815481106105f6576105f6611716565b600091825260209091200154600160a01b900463ffffffff1690565b905061062361062082610fc9565b90565b61062d908561175b565b93508461063981611742565b955050505b8061064881611742565b9150506105a0565b5060008367ffffffffffffffff81111561066c5761066c611451565b604051908082528060200260200182016040528015610695578160200160208202803683370190505b50905060008467ffffffffffffffff8111156106b3576106b3611451565b6040519080825280602002602001820160405280156106dc578160200160208202803683370190505b509050600080805b8851811015610879576000600360008b848151811061070557610705611716565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490506000600180836107409190611773565b8154811061075057610750611716565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b90049092166060830152909150156108645780600001518784815181106107c8576107c8611716565b6001600160a01b039092166020928302919091018201528101518990620f4240906107fc906106209063ffffffff16610fc9565b610806919061178a565b61081091906117bf565b86848151811061082257610822611716565b602002602001019063ffffffff16908163ffffffff168152505085838151811061084e5761084e611716565b60200260200101518461086191906117d3565b93505b5050808061087190611742565b9150506106e4565b5063ffffffff8116620f4240146108c85761089781620f42406117fb565b836000815181106108aa576108aa611716565b602002602001018181516108be91906117d3565b63ffffffff169052505b600554600654604051637677856760e11b81526001600160a01b039283169263ecef0ace9261090292911690889088908890600401611820565b600060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b505050505050505050505050565b610946610b5f565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610341565b610980610b5f565b61098a8282611026565b5050565b610996610b5f565b60005b600154811015610306576109df8382815181106109b8576109b8611716565b60200260200101518383815181106109d2576109d2611716565b6020026020010151611026565b806109e981611742565b915050610999565b6109f9610b5f565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b505050505050565b610a6c610b5f565b60005b8351811015610ae057610ace848281518110610a8d57610a8d611716565b6020026020010151848381518110610aa757610aa7611716565b6020026020010151848481518110610ac157610ac1611716565b6020026020010151610bb9565b80610ad881611742565b915050610a6f565b50505050565b610aee610b5f565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b8565b610b5c81610df3565b50565b6004546001600160a01b031633146103d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b8565b6001600160a01b03831660009081526003602052604090205415610c145760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016104b8565b4263ffffffff168163ffffffff161115610c7c5760405162461bcd60e51b815260206004820152602360248201527f737461727420646174652063616e206e6f7420626520696e207468652066757460448201526275726560e81b60648201526084016104b8565b60648263ffffffff161115610ca35760405162461bcd60e51b81526004016104b8906118c7565b604080516080810182526001600160a01b038086168083526000602080850182815263ffffffff8981168789019081528982166060890190815260018054808201825581885299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909a0180549551935192518516600160e01b026001600160e01b03938616600160c01b02939093166001600160c01b0394909516600160a01b026001600160c01b03199096169a90991699909917939093171617179093556002549181526003909252928120839055917fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610da4908290611773565b81548110610db457610db4611716565b9060005260206000200142604051610dcd929190611911565b60405180910390a1600160026000828254610de8919061175b565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b4260005b600154811015610f7a57600060018281548110610e6857610e68611716565b600091825260208220018054909250600160a01b900463ffffffff168103610eaa578154610ea390600160e01b900463ffffffff16856117fb565b9050610ec0565b600054610ebd9063ffffffff16856117fb565b90505b8154600090606490610edf90600160c01b900463ffffffff1684611961565b610ee9919061198d565b835490915081908490601490610f0d908490600160a01b900463ffffffff166117d3565b92506101000a81548163ffffffff021916908363ffffffff1602179055507f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f2128382604051610f5c929190611911565b60405180910390a15050508080610f7290611742565b915050610e49565b506000805463ffffffff191663ffffffff83169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2181111561100957604051636155b67d60e01b8152600481018490526024016104b8565b61101f610620670de0b6b3a764000083026111ba565b9392505050565b6001600160a01b038216600090815260036020526040812054900361107e5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016104b8565b60648163ffffffff1611156110a55760405162461bcd60e51b81526004016104b8906118c7565b6001600160a01b03821660009081526003602052604090205481906001906110ce908290611773565b815481106110de576110de611716565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb490600190611155908290611773565b8154811061116557611165611716565b906000526020600020016040516111ae91546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606082015260800190565b60405180910390a15050565b6000816000036111cc57506000919050565b50600181600160801b81106111e65760409190911b9060801c5b6801000000000000000081106112015760209190911b9060401c5b64010000000081106112185760109190911b9060201c5b62010000811061122d5760089190911b9060101c5b61010081106112415760049190911b9060081c5b601081106112545760029190911b9060041c5b6004811061126457600182901b91505b6001828481611275576112756117a9565b048301901c9150600182848161128d5761128d6117a9565b048301901c915060018284816112a5576112a56117a9565b048301901c915060018284816112bd576112bd6117a9565b048301901c915060018284816112d5576112d56117a9565b048301901c915060018284816112ed576112ed6117a9565b048301901c91506001828481611305576113056117a9565b048301901c9150600082848161131d5761131d6117a9565b04905080831061132b578092505b5050919050565b80356001600160a01b038116811461134957600080fd5b919050565b803563ffffffff8116811461134957600080fd5b60008060006060848603121561137757600080fd5b61138084611332565b925061138e6020850161134e565b915061139c6040850161134e565b90509250925092565b6000602082840312156113b757600080fd5b61101f82611332565b6000602082840312156113d257600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561144457815180516001600160a01b031685528681015163ffffffff90811688870152868201518116878701526060918201511690850152608090930192908501906001016113f6565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561149057611490611451565b604052919050565b600067ffffffffffffffff8211156114b2576114b2611451565b5060051b60200190565b600082601f8301126114cd57600080fd5b813560206114e26114dd83611498565b611467565b82815260059290921b8401810191818101908684111561150157600080fd5b8286015b848110156115235761151681611332565b8352918301918301611505565b509695505050505050565b60006020828403121561154057600080fd5b813567ffffffffffffffff81111561155757600080fd5b611563848285016114bc565b949350505050565b6000806040838503121561157e57600080fd5b61158783611332565b91506115956020840161134e565b90509250929050565b600082601f8301126115af57600080fd5b813560206115bf6114dd83611498565b82815260059290921b840181019181810190868411156115de57600080fd5b8286015b84811015611523576115f38161134e565b83529183019183016115e2565b6000806040838503121561161357600080fd5b823567ffffffffffffffff8082111561162b57600080fd5b611637868387016114bc565b9350602085013591508082111561164d57600080fd5b5061165a8582860161159e565b9150509250929050565b6000806040838503121561167757600080fd5b61168083611332565b915061159560208401611332565b6000806000606084860312156116a357600080fd5b833567ffffffffffffffff808211156116bb57600080fd5b6116c7878388016114bc565b945060208601359150808211156116dd57600080fd5b6116e98783880161159e565b935060408601359150808211156116ff57600080fd5b5061170c8682870161159e565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117545761175461172c565b5060010190565b6000821982111561176e5761176e61172c565b500190565b6000828210156117855761178561172c565b500390565b60008160001904831182151516156117a4576117a461172c565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826117ce576117ce6117a9565b500490565b600063ffffffff8083168185168083038211156117f2576117f261172c565b01949350505050565b600063ffffffff838116908316818110156118185761181861172c565b039392505050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b8181101561186e578551851683529483019491830191600101611850565b5050858103604087015287518082529082019350915080870160005b838110156118ac57815163ffffffff168552938201939082019060010161188a565b50505063ffffffff8516606085015250905095945050505050565b6020808252602a908201527f696e76616c6964205f61637469766974794d756c7469706c6965722c2062657460408201526907765656e20302d3130360b41b606082015260800190565b60a0810161194e8285546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b600063ffffffff808316818516818304811182151516156119845761198461172c565b02949350505050565b600063ffffffff808416806119a4576119a46117a9565b9216919091049291505056fea2646970667358221220ebbb15a2517729e80fe5e321c5a8173fd0129d8765299f05264200eb243ccb1664736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
