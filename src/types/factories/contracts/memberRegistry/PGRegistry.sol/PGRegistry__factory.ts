/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "secondsActive",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "activityMultiplier",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "periodSecondsActive",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "Trigger",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "secondsActive",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "activityMultiplier",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "periodSecondsActive",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint64[]",
        name: "_activityMultipliers",
        type: "uint64[]",
      },
      {
        internalType: "uint64[]",
        name: "_startDates",
        type: "uint64[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint64[]",
        name: "_activityMultipliers",
        type: "uint64[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTrigger",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "secondsActive",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "activityMultiplier",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "periodSecondsActive",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_activityMultiplier",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_startDate",
        type: "uint64",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_activityMultiplier",
        type: "uint64",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b50604051620018a3380380620018a3833981016040819052620000399162000101565b620000443362000092565b600580546001600160a01b03199081166001600160a01b0394851617909155600080546001600160401b031916426001600160401b0316179055600680549091169190921617905562000139565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000fc57600080fd5b919050565b600080604083850312156200011557600080fd5b6200012083620000e4565b91506200013060208401620000e4565b90509250929050565b61175a80620001496000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d0e4b2f411610071578063d0e4b2f41461029e578063e5fb7641146102b1578063e9b22108146102c4578063f2fde38b146102d7578063f7654176146102ea57600080fd5b80638da5cb5b146102415780639b5296b414610252578063c046371114610265578063c7de644014610278578063d033f4bb1461028b57600080fd5b8063484194e6116100f4578063484194e6146101995780634aeb0904146101c45780635daf08ca146101cc5780636ff603011461021f578063715018a61461023957600080fd5b806306661abd146101265780631267c6da1461014257806334e2fc65146101575780633f26479e14610177575b600080fd5b61012f60025481565b6040519081526020015b60405180910390f35b610155610150366004611205565b6102fd565b005b61012f610165366004611205565b60036020526000908152604090205481565b610181620f424081565b6040516001600160401b039091168152602001610139565b6005546101ac906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b610155610368565b6101df6101da366004611220565b61076c565b604080516001600160a01b0390961686526001600160401b039485166020870152928416928501929092528216606084015216608082015260a001610139565b60005461018190600160401b90046001600160401b031681565b6101556107cd565b6004546001600160a01b03166101ac565b61015561026036600461138d565b6107e1565b600054610181906001600160401b031681565b610155610286366004611205565b610849565b6101556102993660046113f0565b610883565b6101556102ac366004611477565b610905565b6101556102bf3660046114aa565b610970565b6101556102d23660046114ed565b610983565b6101556102e5366004611205565b610999565b6006546101ac906001600160a01b031681565b610305610a17565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561034d57600080fd5b505af1158015610361573d6000803e3d6000fd5b5050505050565b60008060005b6001548110156104345760006001828154811061038d5761038d611517565b6000918252602090912060029091020160010154600160801b90046001600160401b031611156104225760006103f6600183815481106103cf576103cf611517565b6000918252602090912060029091020160010154600160801b90046001600160401b031690565b905061040761040482610a71565b90565b6104119084611543565b92508361041d8161156e565b945050505b8061042c8161156e565b91505061036e565b506104636040518060400160405280600c81526020016b1b9bdb96995c9bd0dbdd5b9d60a21b81525083610ace565b6000826001600160401b0381111561047d5761047d611239565b6040519080825280602002602001820160405280156104a6578160200160208202803683370190505b5090506000836001600160401b038111156104c3576104c3611239565b6040519080825280602002602001820160405280156104ec578160200160208202803683370190505b509050600080805b6001548110156106d35760006001828154811061051357610513611517565b600091825260208083206040805160a081018252600290940290910180546001600160a01b03811685526001600160401b03600160a01b90910481169385019390935260019081015480841692850192909252600160401b820483166060850152600160801b90910490911660808301528054919350908490811061059a5761059a611517565b6000918252602090912060029091020160010154600160801b90046001600160401b031611156106c05760006105da82608001516001600160401b031690565b9050600183815481106105ef576105ef611517565b600091825260209091206002909102015487516001600160a01b039091169088908590811061062057610620611517565b60200260200101906001600160a01b031690816001600160a01b03168152505087620f424061065161040484610a71565b61065b9190611587565b61066591906115cc565b86848151811061067757610677611517565b602002602001019063ffffffff16908163ffffffff16815250508583815181106106a3576106a3611517565b602002602001015163ffffffff16846106bc9190611543565b9350505b50806106cb8161156e565b9150506104f4565b5061070b6040518060400160405280600c81526020016b1c9d5b9b9a5b99d51bdd185b60a21b815250826001600160401b0316610ace565b6001600160401b038116620f42401461075c5761072b81620f4240611600565b8360008151811061073e5761073e611517565b602002602001018181516107529190611628565b63ffffffff169052505b610764610b13565b505050505050565b6001818154811061077c57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03821692506001600160401b03600160a01b90920482169181811691600160401b8104821691600160801b9091041685565b6107d5610a17565b6107df6000610c57565b565b6107e9610a17565b60005b6001548110156108445761083283828151811061080b5761080b611517565b602002602001015183838151811061082557610825611517565b6020026020010151610ca9565b8061083c8161156e565b9150506107ec565b505050565b610851610a17565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610333565b61088b610a17565b60005b83518110156108ff576108ed8482815181106108ac576108ac611517565b60200260200101518483815181106108c6576108c6611517565b60200260200101518484815181106108e0576108e0611517565b6020026020010151610e45565b806108f78161156e565b91505061088e565b50505050565b61090d610a17565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b15801561095c57600080fd5b505af1158015610764573d6000803e3d6000fd5b610978610a17565b610844838383610e45565b61098b610a17565b6109958282610ca9565b5050565b6109a1610a17565b6001600160a01b038116610a0b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610a1481610c57565b50565b6004546001600160a01b031633146107df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a02565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610ab157604051636155b67d60e01b815260048101849052602401610a02565b610ac7610404670de0b6b3a76400008302611055565b9392505050565b6109958282604051602401610ae4929190611647565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526111c8565b60008054610b2a906001600160401b031642611600565b905060005b600154811015610c1757600060018281548110610b4e57610b4e611517565b600091825260208083206040805160a081018252600290940290910180546001600160a01b03811685526001600160401b03600160a01b90910481169385019390935260010154808316918401829052600160401b810483166060850152600160801b90049091166080830152909250606490610bcb9086611587565b610bd591906115cc565b90508082602001818151610be99190611543565b6001600160401b03908116909152919091166080909201919091525080610c0f8161156e565b915050610b2f565b506040516001600160401b03421681527fb642e3ea43a9bab75d51f4ecefa890c2396d643c740d212db3fe6e4e76b87d219060200160405180910390a150565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166000908152600360205260408120549003610d015760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b6044820152606401610a02565b6064816001600160401b03161115610d5b5760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c69657200000000006044820152606401610a02565b6001600160a01b0382166000908152600360205260409020548190600190610d849082906116a4565b81548110610d9457610d94611517565b600091825260208083206001600290930201820180546001600160401b039590951667ffffffffffffffff19909516949094179093556001600160a01b0385168252600390925260409020547f9b13cb945dce1abcc048969dda6feae0a94d42aec3d77084db4a5e3eac6cfded9190610e0e9082906116a4565b81548110610e1e57610e1e611517565b9060005260206000209060020201604051610e3991906116bb565b60405180910390a15050565b6001600160a01b03831660009081526003602052604090205415610ea05760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b6044820152606401610a02565b6000610eac8242611600565b6040805160a0810182526001600160a01b038088168083526001600160401b0380861660208086018281528b84168789019081528b8516606089019081526080890194855260018054808201825560008281529a5160029182027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805497518b16600160a01b026001600160e01b031990981692909c16919091179590951790995591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79093018054915195518716600160801b0267ffffffffffffffff60801b19968816600160401b026fffffffffffffffffffffffffffffffff199093169490971693909317179390931693909317909255925491845260039052929091208290559192507fb64a6541d7b5726df0321eb1e325fff1bbeec9de1d06b5b3dcf71b69fc4f5fdd91906110049082906116a4565b8154811061101457611014611517565b906000526020600020906002020160405161102f91906116bb565b60405180910390a160016002600082825461104a919061170c565b909155505050505050565b60008160000361106757506000919050565b50600181600160801b81106110815760409190911b9060801c5b600160401b81106110975760209190911b9060401c5b64010000000081106110ae5760109190911b9060201c5b6201000081106110c35760089190911b9060101c5b61010081106110d75760049190911b9060081c5b601081106110ea5760029190911b9060041c5b600481106110fa57600182901b91505b600182848161110b5761110b6115b6565b048301901c91506001828481611123576111236115b6565b048301901c9150600182848161113b5761113b6115b6565b048301901c91506001828481611153576111536115b6565b048301901c9150600182848161116b5761116b6115b6565b048301901c91506001828481611183576111836115b6565b048301901c9150600182848161119b5761119b6115b6565b048301901c915060008284816111b3576111b36115b6565b0490508083106111c1578092505b5050919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461120057600080fd5b919050565b60006020828403121561121757600080fd5b610ac7826111e9565b60006020828403121561123257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561127757611277611239565b604052919050565b60006001600160401b0382111561129857611298611239565b5060051b60200190565b600082601f8301126112b357600080fd5b813560206112c86112c38361127f565b61124f565b82815260059290921b840181019181810190868411156112e757600080fd5b8286015b84811015611309576112fc816111e9565b83529183019183016112eb565b509695505050505050565b80356001600160401b038116811461120057600080fd5b600082601f83011261133c57600080fd5b8135602061134c6112c38361127f565b82815260059290921b8401810191818101908684111561136b57600080fd5b8286015b848110156113095761138081611314565b835291830191830161136f565b600080604083850312156113a057600080fd5b82356001600160401b03808211156113b757600080fd5b6113c3868387016112a2565b935060208501359150808211156113d957600080fd5b506113e68582860161132b565b9150509250929050565b60008060006060848603121561140557600080fd5b83356001600160401b038082111561141c57600080fd5b611428878388016112a2565b9450602086013591508082111561143e57600080fd5b61144a8783880161132b565b9350604086013591508082111561146057600080fd5b5061146d8682870161132b565b9150509250925092565b6000806040838503121561148a57600080fd5b611493836111e9565b91506114a1602084016111e9565b90509250929050565b6000806000606084860312156114bf57600080fd5b6114c8846111e9565b92506114d660208501611314565b91506114e460408501611314565b90509250925092565b6000806040838503121561150057600080fd5b611509836111e9565b91506114a160208401611314565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038083168185168083038211156115655761156561152d565b01949350505050565b6000600182016115805761158061152d565b5060010190565b60006001600160401b03808316818516818304811182151516156115ad576115ad61152d565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160401b03808416806115f457634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b60006001600160401b03838116908316818110156116205761162061152d565b039392505050565b600063ffffffff8083168185168083038211156115655761156561152d565b604081526000835180604084015260005b818110156116755760208187018101516060868401015201611658565b81811115611687576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b6000828210156116b6576116b661152d565b500390565b81546001600160a01b03811682526001600160401b0360a091821c8116602084015260019093015480841660408085019190915281901c84166060840152608090811c909316928201929092520190565b6000821982111561171f5761171f61152d565b50019056fea2646970667358221220d16a7a0108f611fa62961527ec4536464bb72f793a835574ede4ef6cc58b54cb64736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
