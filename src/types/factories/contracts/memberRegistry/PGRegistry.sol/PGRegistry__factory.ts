/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDiv18Overflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "initialSeconds",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001c1f38038062001c1f8339810160408190526200003991620000fb565b62000044336200008c565b600580546001600160a01b03199081166001600160a01b03948516179091556000805463ffffffff19164263ffffffff16179055600680549091169190921617905562000133565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000f657600080fd5b919050565b600080604083850312156200010f57600080fd5b6200011a83620000de565b91506200012a60208401620000de565b90509250929050565b611adc80620001436000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639eab5253116100ad578063cf2933c111610071578063cf2933c114610294578063d0e4b2f4146102a7578063e46867fd146102ba578063f2fde38b146102cd578063f7654176146102e057600080fd5b80639eab525314610236578063a1d1682c1461024b578063c04637111461025e578063c7de64401461026e578063c818c70f1461028157600080fd5b80633f26479e116100f45780633f26479e1461018a578063484194e6146101a95780635daf08ca146101d4578063715018a61461021d5780638da5cb5b1461022557600080fd5b806306661abd146101265780630726312a146101425780631267c6da1461015757806334e2fc651461016a575b600080fd5b61012f60025481565b6040519081526020015b60405180910390f35b6101556101503660046114b7565b6102f3565b005b6101556101653660046114fa565b61030b565b61012f6101783660046114fa565b60036020526000908152604090205481565b610194620f424081565b60405163ffffffff9091168152602001610139565b6005546101bc906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b6101e76101e2366004611515565b610376565b604080516001600160a01b03909516855263ffffffff938416602086015291831691840191909152166060820152608001610139565b6101556103c3565b6004546001600160a01b03166101bc565b61023e6103d7565b6040516101399190611568565b610155610259366004611693565b61046e565b6000546101949063ffffffff1681565b61015561027c3660046114fa565b610928565b61015561028f3660046116d0565b610962565b6101556102a2366004611765565b610978565b6101556102b53660046117c9565b6109db565b6101556102c83660046117f3565b610a4e565b6101556102db3660046114fa565b610ad0565b6006546101bc906001600160a01b031681565b6102fb610b49565b610306838383610ba3565b505050565b610313610b49565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b5050505050565b6001818154811061038657600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6103cb610b49565b6103d56000610d65565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561046557600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016103fb565b50505050905090565b60008060006001805490508451146104bc5760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b84518110156105975760008582815181106104dc576104dc61187b565b60200260200101519050600060036000836001600160a01b03166001600160a01b031681526020019081526020016000205411801561052c5750806001600160a01b0316836001600160a01b0316105b6105835760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b60648201526084016104b3565b91508061058f816118a7565b9150506104bf565b5060005b60015481101561064d576000600182815481106105ba576105ba61187b565b600091825260209091200154600160c01b900463ffffffff16111561063b57600061060f600183815481106105f1576105f161187b565b600091825260209091200154600160a01b900463ffffffff16610db7565b905061062061061d82610dc1565b90565b61062a90856118c0565b935084610636816118a7565b955050505b80610645816118a7565b91505061059b565b5060008367ffffffffffffffff811115610669576106696115b6565b604051908082528060200260200182016040528015610692578160200160208202803683370190505b50905060008467ffffffffffffffff8111156106b0576106b06115b6565b6040519080825280602002602001820160405280156106d9578160200160208202803683370190505b509050600080805b8851811015610893576000600360008b84815181106107025761070261187b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006001808361073d91906118d8565b8154811061074d5761074d61187b565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b900490921660608301529091501561087e5780600001518784815181106107c5576107c561187b565b60200260200101906001600160a01b031690816001600160a01b03168152505061082a61061d6107f48b610db7565b610824610803620f4240610db7565b61081e610819876020015163ffffffff16610db7565b610dc1565b90610e1e565b90610e2d565b86848151811061083c5761083c61187b565b602002602001019063ffffffff16908163ffffffff16815250508583815181106108685761086861187b565b60200260200101518461087b91906118ef565b93505b5050808061088b906118a7565b9150506106e1565b506108c86040518060400160405280600c81526020016b1c9d5b9b9a5b99d51bdd185b60a21b8152508263ffffffff16610e45565b63ffffffff8116620f424014610916576108e581620f4240611917565b836000815181106108f8576108f861187b565b6020026020010181815161090c91906118ef565b63ffffffff169052505b61091e610e8a565b5050505050505050565b610930610b49565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610341565b61096a610b49565b6109748282610fe1565b5050565b610980610b49565b60005b600154811015610306576109c98382815181106109a2576109a261187b565b60200260200101518383815181106109bc576109bc61187b565b6020026020010151610fe1565b806109d3816118a7565b915050610983565b6109e3610b49565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050505050565b610a56610b49565b60005b8351811015610aca57610ab8848281518110610a7757610a7761187b565b6020026020010151848381518110610a9157610a9161187b565b6020026020010151848481518110610aab57610aab61187b565b6020026020010151610ba3565b80610ac2816118a7565b915050610a59565b50505050565b610ad8610b49565b6001600160a01b038116610b3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b3565b610b4681610d65565b50565b6004546001600160a01b031633146103d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6001600160a01b03831660009081526003602052604090205415610bfe5760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016104b3565b6000610c0a8242611917565b604080516080810182526001600160a01b0380881680835263ffffffff80861660208086019182528a83168688019081528a841660608801908152600180548082018255600082815299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910180549651945193518816600160e01b026001600160e01b03948916600160c01b02949094166001600160c01b0395909816600160a01b026001600160c01b031990971691909916179490941791909116939093179290921790935560025491845260039052929091208290559192507fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610d169082906118d8565b81548110610d2657610d2661187b565b9060005260206000200182604051610d3f92919061193c565b60405180910390a1600160026000828254610d5a91906118c0565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000815b92915050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610e0157604051636155b67d60e01b8152600481018490526024016104b3565b610e1761061d670de0b6b3a76400008302611167565b9392505050565b6000610e1761061d84846112df565b6000610e1761061d84670de0b6b3a764000085611393565b6109748282604051602401610e5b9291906119a3565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611466565b60008054429190610ea19063ffffffff1683611917565b905060005b600154811015610fa257600060018281548110610ec557610ec561187b565b600091825260208083206040805160808101825291909301546001600160a01b038116825263ffffffff600160a01b8204811693830193909352600160c01b81048316938201849052600160e01b900490911660608201529250606490610f2c9086611a00565b610f369190611a2c565b90508082602001818151610f4a91906118ef565b63ffffffff169052506040517f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f21290610f859084908490611a5d565b60405180910390a150508080610f9a906118a7565b915050610ea6565b5060405163ffffffff831681527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c0906020015b60405180910390a15050565b6001600160a01b03821660009081526003602052604081205490036110395760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016104b3565b60648163ffffffff1611156110905760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c696572000000000060448201526064016104b3565b6001600160a01b03821660009081526003602052604090205481906001906110b99082906118d8565b815481106110c9576110c961187b565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb4906001906111409082906118d8565b815481106111505761115061187b565b90600052602060002001604051610fd59190611a6b565b60008160000361117957506000919050565b50600181600160801b81106111935760409190911b9060801c5b6801000000000000000081106111ae5760209190911b9060401c5b64010000000081106111c55760109190911b9060201c5b6201000081106111da5760089190911b9060101c5b61010081106111ee5760049190911b9060081c5b601081106112015760029190911b9060041c5b6004811061121157600182901b91505b60018284816112225761122261198d565b048301901c9150600182848161123a5761123a61198d565b048301901c915060018284816112525761125261198d565b048301901c9150600182848161126a5761126a61198d565b048301901c915060018284816112825761128261198d565b048301901c9150600182848161129a5761129a61198d565b048301901c915060018284816112b2576112b261198d565b048301901c915060008284816112ca576112ca61198d565b0490508083106112d8578092505b5050919050565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061132a5760405163090638d560e41b815260048101869052602481018590526044016104b3565b6000670de0b6b3a7640000858709905081600003611356575050670de0b6b3a764000090049050610dbb565b620400008184030492109003600160ee1b02177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066902905092915050565b60008080600019858709858702925082811083820303915050806000036113cd578382816113c3576113c361198d565b0492505050610e17565b8381106113fe576040516307639aaf60e41b81526004810187905260248101869052604481018590526064016104b3565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461149e57600080fd5b919050565b803563ffffffff8116811461149e57600080fd5b6000806000606084860312156114cc57600080fd5b6114d584611487565b92506114e3602085016114a3565b91506114f1604085016114a3565b90509250925092565b60006020828403121561150c57600080fd5b610e1782611487565b60006020828403121561152757600080fd5b5035919050565b80516001600160a01b0316825260208082015163ffffffff9081169184019190915260408083015182169084015260609182015116910152565b6020808252825182820181905260009190848201906040850190845b818110156115aa5761159783855161152e565b9284019260809290920191600101611584565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115f5576115f56115b6565b604052919050565b600067ffffffffffffffff821115611617576116176115b6565b5060051b60200190565b600082601f83011261163257600080fd5b81356020611647611642836115fd565b6115cc565b82815260059290921b8401810191818101908684111561166657600080fd5b8286015b848110156116885761167b81611487565b835291830191830161166a565b509695505050505050565b6000602082840312156116a557600080fd5b813567ffffffffffffffff8111156116bc57600080fd5b6116c884828501611621565b949350505050565b600080604083850312156116e357600080fd5b6116ec83611487565b91506116fa602084016114a3565b90509250929050565b600082601f83011261171457600080fd5b81356020611724611642836115fd565b82815260059290921b8401810191818101908684111561174357600080fd5b8286015b8481101561168857611758816114a3565b8352918301918301611747565b6000806040838503121561177857600080fd5b823567ffffffffffffffff8082111561179057600080fd5b61179c86838701611621565b935060208501359150808211156117b257600080fd5b506117bf85828601611703565b9150509250929050565b600080604083850312156117dc57600080fd5b6117e583611487565b91506116fa60208401611487565b60008060006060848603121561180857600080fd5b833567ffffffffffffffff8082111561182057600080fd5b61182c87838801611621565b9450602086013591508082111561184257600080fd5b61184e87838801611703565b9350604086013591508082111561186457600080fd5b5061187186828701611703565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118b9576118b9611891565b5060010190565b600082198211156118d3576118d3611891565b500190565b6000828210156118ea576118ea611891565b500390565b600063ffffffff80831681851680830382111561190e5761190e611891565b01949350505050565b600063ffffffff8381169083168181101561193457611934611891565b039392505050565b60a0810161197a8285546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b634e487b7160e01b600052601260045260246000fd5b604081526000835180604084015260005b818110156119d157602081870181015160608684010152016119b4565b818111156119e3576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b600063ffffffff80831681851681830481118215151615611a2357611a23611891565b02949350505050565b600063ffffffff80841680611a5157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b60a0810161197a828561152e565b81546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606082015260808101610dbb56fea2646970667358221220f88113115d6324beaf55ec6f018208b0b7836826967a66a4e335367faee139d264736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
