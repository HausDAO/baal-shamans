/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "secondsActive",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "activityMultiplier",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "startDate",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "periodSecondsActive",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    name: "Trigger",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "secondsActive",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "activityMultiplier",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "startDate",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "periodSecondsActive",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint48[]",
        name: "_activityMultipliers",
        type: "uint48[]",
      },
      {
        internalType: "uint48[]",
        name: "_startDates",
        type: "uint48[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint48[]",
        name: "_activityMultipliers",
        type: "uint48[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTrigger",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "secondsActive",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "activityMultiplier",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "startDate",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "periodSecondsActive",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_activityMultiplier",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_startDate",
        type: "uint48",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_activityMultiplier",
        type: "uint48",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b506040516200165d3803806200165d8339810160408190526200003991620000ff565b620000443362000090565b600580546001600160a01b03199081166001600160a01b03948516179091556000805465ffffffffffff19164265ffffffffffff16179055600680549091169190921617905562000137565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000fa57600080fd5b919050565b600080604083850312156200011357600080fd5b6200011e83620000e2565b91506200012e60208401620000e2565b90509250929050565b61151680620001476000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636ea25467116100ad578063c046371111610071578063c04637111461029b578063c7de6440146102ad578063d0e4b2f4146102c0578063f2fde38b146102d3578063f7654176146102e657600080fd5b80636ea25467146102435780636ff6030114610256578063715018a61461026f57806373be61f2146102775780638da5cb5b1461028a57600080fd5b80633f26479e116100f45780633f26479e1461018a578063484194e6146101ab5780634aeb0904146101d65780635daf08ca146101de5780636b8b47831461023057600080fd5b806303904f6f1461012657806306661abd1461013b5780631267c6da1461015757806334e2fc651461016a575b600080fd5b61013961013436600461114e565b6102f9565b005b61014460025481565b6040519081526020015b60405180910390f35b6101396101653660046111b2565b610361565b6101446101783660046111b2565b60036020526000908152604090205481565b610194620f424081565b60405165ffffffffffff909116815260200161014e565b6005546101be906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b6101396103cc565b6101f16101ec3660046111d4565b61079b565b604080516001600160a01b03909616865265ffffffffffff9485166020870152928416928501929092528216606084015216608082015260a00161014e565b61013961023e3660046111ed565b6107fa565b610139610251366004611275565b61087c565b60005461019490600160301b900465ffffffffffff1681565b610139610892565b6101396102853660046112a8565b6108a6565b6004546001600160a01b03166101be565b6000546101949065ffffffffffff1681565b6101396102bb3660046111b2565b6108b9565b6101396102ce3660046112eb565b6108f3565b6101396102e13660046111b2565b61095e565b6006546101be906001600160a01b031681565b6103016109dc565b60005b60015481101561035c5761034a83828151811061032357610323611315565b602002602001015183838151811061033d5761033d611315565b6020026020010151610a36565b8061035481611341565b915050610304565b505050565b6103696109dc565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b1580156103b157600080fd5b505af11580156103c5573d6000803e3d6000fd5b5050505050565b60008060005b60015481101561047c576000600182815481106103f1576103f1611315565b6000918252602090912060029091020160010154600160301b900465ffffffffffff16111561046a576001818154811061042d5761042d611315565b600091825260209091206002909102016001015461045a90600160301b900465ffffffffffff168361135a565b91508261046681611341565b9350505b8061047481611341565b9150506103d2565b506104ab6040518060400160405280600c81526020016b1b9bdb96995c9bd0dbdd5b9d60a21b81525083610bde565b60008267ffffffffffffffff8111156104c6576104c6610fdd565b6040519080825280602002602001820160405280156104ef578160200160208202803683370190505b50905060008367ffffffffffffffff81111561050d5761050d610fdd565b604051908082528060200260200182016040528015610536578160200160208202803683370190505b509050600080805b6001548110156107025760006001828154811061055d5761055d611315565b600091825260208083206040805160a081018252600290940290910180546001600160a01b038116855265ffffffffffff600160a01b8204811694860194909452600160d01b90048316918401919091526001908101548083166060850152600160301b90049091166080830152805491935090849081106105e1576105e1611315565b6000918252602090912060029091020160010154600160301b900465ffffffffffff1611156106ef57600061061f826080015165ffffffffffff1690565b90506001838154811061063457610634611315565b600091825260209091206002909102015487516001600160a01b039091169088908590811061066557610665611315565b6001600160a01b0392909216602092830291909101909101528761068c620f424083611384565b61069691906113b2565b8684815181106106a8576106a8611315565b602002602001019065ffffffffffff16908165ffffffffffff16815250508583815181106106d8576106d8611315565b6020026020010151846106eb919061135a565b9350505b50806106fa81611341565b91505061053e565b506107396040518060400160405280600c81526020016b1c9d5b9b9a5b99d51bdd185b60a21b8152508265ffffffffffff16610bde565b65ffffffffffff8116620f42401461078b5761075881620f42406113e5565b8360008151811061076b5761076b611315565b6020026020010181815161077f919061135a565b65ffffffffffff169052505b610793610c23565b505050505050565b600181815481106107ab57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b038216925065ffffffffffff600160a01b8304811692600160d01b900481169180821691600160301b9091041685565b6108026109dc565b60005b83518110156108765761086484828151811061082357610823611315565b602002602001015184838151811061083d5761083d611315565b602002602001015184848151811061085757610857611315565b6020026020010151610d62565b8061086e81611341565b915050610805565b50505050565b6108846109dc565b61088e8282610a36565b5050565b61089a6109dc565b6108a46000610f6a565b565b6108ae6109dc565b61035c838383610d62565b6108c16109dc565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610397565b6108fb6109dc565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b15801561094a57600080fd5b505af1158015610793573d6000803e3d6000fd5b6109666109dc565b6001600160a01b0381166109d05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6109d981610f6a565b50565b6004546001600160a01b031633146108a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c7565b6001600160a01b0382166000908152600360205260408120549003610a8e5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016109c7565b60648165ffffffffffff161115610ae75760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c696572000000000060448201526064016109c7565b6001600160a01b0382166000908152600360205260409020548190600190610b1090829061140c565b81548110610b2057610b20611315565b9060005260206000209060020201600001601a6101000a81548165ffffffffffff021916908365ffffffffffff1602179055507f10f48b1323b56980e78c87849f80a427041c064210f014d0250636d9c364174b60018060036000866001600160a01b03166001600160a01b0316815260200190815260200160002054610ba7919061140c565b81548110610bb757610bb7611315565b9060005260206000209060020201604051610bd29190611423565b60405180910390a15050565b61088e8282604051602401610bf492919061146b565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610fbc565b60008054610c399065ffffffffffff16426113e5565b905060005b600154811015610d2357600060018281548110610c5d57610c5d611315565b600091825260208083206040805160a081018252600290940290910180546001600160a01b038116855265ffffffffffff600160a01b8204811694860194909452600160d01b90048316918401829052600101548083166060850152600160301b90049091166080830152909250606490610cd89086611384565b610ce291906113b2565b90508082602001818151610cf6919061135a565b65ffffffffffff908116909152919091166080909201919091525080610d1b81611341565b915050610c3e565b5060405165ffffffffffff421681527f993a9cd8c3b422dba0d5d3caa674a6ae9f1b7b456922a4011b86fd4dfc41e9809060200160405180910390a150565b6001600160a01b03831660009081526003602052604090205415610dbd5760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016109c7565b6000610dc982426113e5565b6040805160a0810182526001600160a01b0380881680835265ffffffffffff80861660208086018281528b84168789019081528b8516606089019081526080890194855260018054808201825560008281529a5160029182027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681018054975196518b16600160d01b026001600160d01b03978c16600160a01b026001600160d01b031990991693909d1692909217969096179490941699909917909255517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7909201805494518616600160301b026bffffffffffffffffffffffff19909516929095169190911792909217909255925491845260039052929091208290559192507faabfafd58f1558217385d0729246066f1595979ff238e60ed8249805636f51b69190610f1990829061140c565b81548110610f2957610f29611315565b9060005260206000209060020201604051610f449190611423565b60405180910390a1600160026000828254610f5f91906114c8565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561101c5761101c610fdd565b604052919050565b600067ffffffffffffffff82111561103e5761103e610fdd565b5060051b60200190565b80356001600160a01b038116811461105f57600080fd5b919050565b600082601f83011261107557600080fd5b8135602061108a61108583611024565b610ff3565b82815260059290921b840181019181810190868411156110a957600080fd5b8286015b848110156110cb576110be81611048565b83529183019183016110ad565b509695505050505050565b803565ffffffffffff8116811461105f57600080fd5b600082601f8301126110fd57600080fd5b8135602061110d61108583611024565b82815260059290921b8401810191818101908684111561112c57600080fd5b8286015b848110156110cb57611141816110d6565b8352918301918301611130565b6000806040838503121561116157600080fd5b823567ffffffffffffffff8082111561117957600080fd5b61118586838701611064565b9350602085013591508082111561119b57600080fd5b506111a8858286016110ec565b9150509250929050565b6000602082840312156111c457600080fd5b6111cd82611048565b9392505050565b6000602082840312156111e657600080fd5b5035919050565b60008060006060848603121561120257600080fd5b833567ffffffffffffffff8082111561121a57600080fd5b61122687838801611064565b9450602086013591508082111561123c57600080fd5b611248878388016110ec565b9350604086013591508082111561125e57600080fd5b5061126b868287016110ec565b9150509250925092565b6000806040838503121561128857600080fd5b61129183611048565b915061129f602084016110d6565b90509250929050565b6000806000606084860312156112bd57600080fd5b6112c684611048565b92506112d4602085016110d6565b91506112e2604085016110d6565b90509250925092565b600080604083850312156112fe57600080fd5b61130783611048565b915061129f60208401611048565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113535761135361132b565b5060010190565b600065ffffffffffff80831681851680830382111561137b5761137b61132b565b01949350505050565b600065ffffffffffff808316818516818304811182151516156113a9576113a961132b565b02949350505050565b600065ffffffffffff808416806113d957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600065ffffffffffff838116908316818110156114045761140461132b565b039392505050565b60008282101561141e5761141e61132b565b500390565b81546001600160a01b038116825260a081811c65ffffffffffff908116602085015260d09290921c6040840152600190930154808216606084015260301c1660808201520190565b604081526000835180604084015260005b81811015611499576020818701810151606086840101520161147c565b818111156114ab576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b600082198211156114db576114db61132b565b50019056fea26469706673582212205d8cb29ffc975dbdecca8e1620e5ec40b9678095811dfed5bcb55adb6a1d344764736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
