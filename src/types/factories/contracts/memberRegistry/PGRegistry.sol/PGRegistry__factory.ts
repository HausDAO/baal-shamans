/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "calculate",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSecondsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "updateSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001bd538038062001bd58339810160408190526200003991620000e5565b620000443362000076565b600580546001600160a01b039384166001600160a01b031991821617909155600680549290931691161790556200011d565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060408385031215620000f957600080fd5b6200010483620000c8565b91506200011460208401620000c8565b90509250929050565b611aa8806200012d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639eab5253116100b8578063cf2933c11161007c578063cf2933c1146102cb578063d0e4b2f4146102de578063e46867fd146102f1578063e4a7c60314610304578063f2fde38b1461030c578063f76541761461031f57600080fd5b80639eab52531461025f578063b0affdf714610274578063c046371114610295578063c7de6440146102a5578063c818c70f146102b857600080fd5b8063479d0a0d116100ff578063479d0a0d146101bf578063484194e6146101d25780635daf08ca146101fd578063715018a6146102465780638da5cb5b1461024e57600080fd5b806306661abd1461013c5780630726312a146101585780631267c6da1461016d57806334e2fc65146101805780633f26479e146101a0575b600080fd5b61014560025481565b6040519081526020015b60405180910390f35b61016b6101663660046113d5565b610332565b005b61016b61017b366004611418565b61034a565b61014561018e366004611418565b60036020526000908152604090205481565b6101aa620f424081565b60405163ffffffff909116815260200161014f565b61016b6101cd366004611510565b6103b5565b6005546101e5906001600160a01b031681565b6040516001600160a01b03909116815260200161014f565b61021061020b36600461154d565b61043c565b604080516001600160a01b03909516855263ffffffff93841660208601529183169184019190915216606082015260800161014f565b61016b610489565b6004546001600160a01b03166101e5565b61026761049d565b60405161014f9190611566565b610287610282366004611510565b610534565b60405161014f929190611658565b6000546101aa9063ffffffff1681565b61016b6102b3366004611418565b6109a9565b61016b6102c6366004611686565b6109e3565b61016b6102d936600461171b565b6109f9565b61016b6102ec36600461177f565b610a5c565b61016b6102ff3660046117a9565b610acf565b61016b610b51565b61016b61031a366004611418565b610b59565b6006546101e5906001600160a01b031681565b61033a610bd2565b610345838383610c2c565b505050565b610352610bd2565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b5050505050565b6000806103c183610534565b600554600654604051637677856760e11b81529395509193506000926001600160a01b039182169263ecef0ace9261040492911690879087908790600401611831565b600060405180830381600087803b15801561041e57600080fd5b505af1158015610432573d6000803e3d6000fd5b5050505050505050565b6001818154811061044c57600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b610491610bd2565b61049b6000610e66565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561052b57600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016104c1565b50505050905090565b60608060008060006001805490508651146105855760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b86518110156106605760008782815181106105a5576105a561187f565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156105f55750806001600160a01b0316836001600160a01b0316105b61064c5760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b606482015260840161057c565b915080610658816118ab565b915050610588565b5060005b600154811015610714576000600182815481106106835761068361187f565b600091825260209091200154600160c01b900463ffffffff1611156107025760006106d6600183815481106106ba576106ba61187f565b600091825260209091200154600160a01b900463ffffffff1690565b90506106e76106e482610eb8565b90565b6106f190856118c4565b9350846106fd816118ab565b955050505b8061070c816118ab565b915050610664565b5060008367ffffffffffffffff81111561073057610730611433565b604051908082528060200260200182016040528015610759578160200160208202803683370190505b50905060008467ffffffffffffffff81111561077757610777611433565b6040519080825280602002602001820160405280156107a0578160200160208202803683370190505b50905060008060005b8a5181101561094b576000600360008d84815181106107ca576107ca61187f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006001808361080591906118dc565b815481106108155761081561187f565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b900490921660608301529091501561093657806000015187858151811061088d5761088d61187f565b6001600160a01b039092166020928302919091018201528101518990620f4240906108c1906106e49063ffffffff16610eb8565b6108cb91906118f3565b6108d59190611928565b8685815181106108e7576108e761187f565b602002602001019063ffffffff16908163ffffffff16815250508584815181106109135761091361187f565b602002602001015185610926919061193c565b945083610932816118ab565b9450505b50508080610943906118ab565b9150506107a9565b5063ffffffff8216620f42401461099a5761096982620f4240611964565b8360008151811061097c5761097c61187f565b60200260200101818151610990919061193c565b63ffffffff169052505b50919890975095505050505050565b6109b1610bd2565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610380565b6109eb610bd2565b6109f58282610f15565b5050565b610a01610bd2565b60005b60015481101561034557610a4a838281518110610a2357610a2361187f565b6020026020010151838381518110610a3d57610a3d61187f565b6020026020010151610f15565b80610a54816118ab565b915050610a04565b610a64610bd2565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610ab357600080fd5b505af1158015610ac7573d6000803e3d6000fd5b505050505050565b610ad7610bd2565b60005b8351811015610b4b57610b39848281518110610af857610af861187f565b6020026020010151848381518110610b1257610b1261187f565b6020026020010151848481518110610b2c57610b2c61187f565b6020026020010151610c2c565b80610b43816118ab565b915050610ada565b50505050565b61049b6110a9565b610b61610bd2565b6001600160a01b038116610bc65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057c565b610bcf81610e66565b50565b6004546001600160a01b0316331461049b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057c565b6001600160a01b03831660009081526003602052604090205415610c875760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b604482015260640161057c565b4263ffffffff168163ffffffff161115610cef5760405162461bcd60e51b815260206004820152602360248201527f737461727420646174652063616e206e6f7420626520696e207468652066757460448201526275726560e81b606482015260840161057c565b60648263ffffffff161115610d165760405162461bcd60e51b815260040161057c90611989565b604080516080810182526001600160a01b038086168083526000602080850182815263ffffffff8981168789019081528982166060890190815260018054808201825581885299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909a0180549551935192518516600160e01b026001600160e01b03938616600160c01b02939093166001600160c01b0394909516600160a01b026001600160c01b03199096169a90991699909917939093171617179093556002549181526003909252928120839055917fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610e179082906118dc565b81548110610e2757610e2761187f565b9060005260206000200142604051610e409291906119d3565b60405180910390a1600160026000828254610e5b91906118c4565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610ef857604051636155b67d60e01b81526004810184905260240161057c565b610f0e6106e4670de0b6b3a7640000830261122d565b9392505050565b6001600160a01b0382166000908152600360205260408120549003610f6d5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b604482015260640161057c565b60648163ffffffff161115610f945760405162461bcd60e51b815260040161057c90611989565b6001600160a01b0382166000908152600360205260409020548190600190610fbd9082906118dc565b81548110610fcd57610fcd61187f565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb4906001906110449082906118dc565b815481106110545761105461187f565b9060005260206000200160405161109d91546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606082015260800190565b60405180910390a15050565b4260005b6001548110156111de576000600182815481106110cc576110cc61187f565b600091825260208220018054909250600160a01b900463ffffffff16810361110e57815461110790600160e01b900463ffffffff1685611964565b9050611124565b6000546111219063ffffffff1685611964565b90505b815460009060649061114390600160c01b900463ffffffff1684611a23565b61114d9190611a4f565b835490915081908490601490611171908490600160a01b900463ffffffff1661193c565b92506101000a81548163ffffffff021916908363ffffffff1602179055507f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f21283826040516111c09291906119d3565b60405180910390a150505080806111d6906118ab565b9150506110ad565b506000805463ffffffff191663ffffffff83169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b60008160000361123f57506000919050565b50600181600160801b81106112595760409190911b9060801c5b6801000000000000000081106112745760209190911b9060401c5b640100000000811061128b5760109190911b9060201c5b6201000081106112a05760089190911b9060101c5b61010081106112b45760049190911b9060081c5b601081106112c75760029190911b9060041c5b600481106112d757600182901b91505b60018284816112e8576112e8611912565b048301901c9150600182848161130057611300611912565b048301901c9150600182848161131857611318611912565b048301901c9150600182848161133057611330611912565b048301901c9150600182848161134857611348611912565b048301901c9150600182848161136057611360611912565b048301901c9150600182848161137857611378611912565b048301901c9150600082848161139057611390611912565b04905080831061139e578092505b5050919050565b80356001600160a01b03811681146113bc57600080fd5b919050565b803563ffffffff811681146113bc57600080fd5b6000806000606084860312156113ea57600080fd5b6113f3846113a5565b9250611401602085016113c1565b915061140f604085016113c1565b90509250925092565b60006020828403121561142a57600080fd5b610f0e826113a5565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561147257611472611433565b604052919050565b600067ffffffffffffffff82111561149457611494611433565b5060051b60200190565b600082601f8301126114af57600080fd5b813560206114c46114bf8361147a565b611449565b82815260059290921b840181019181810190868411156114e357600080fd5b8286015b84811015611505576114f8816113a5565b83529183019183016114e7565b509695505050505050565b60006020828403121561152257600080fd5b813567ffffffffffffffff81111561153957600080fd5b6115458482850161149e565b949350505050565b60006020828403121561155f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156115d157815180516001600160a01b031685528681015163ffffffff9081168887015286820151811687870152606091820151169085015260809093019290850190600101611583565b5091979650505050505050565b600081518084526020808501945080840160005b838110156116175781516001600160a01b0316875295820195908201906001016115f2565b509495945050505050565b600081518084526020808501945080840160005b8381101561161757815163ffffffff1687529582019590820190600101611636565b60408152600061166b60408301856115de565b828103602084015261167d8185611622565b95945050505050565b6000806040838503121561169957600080fd5b6116a2836113a5565b91506116b0602084016113c1565b90509250929050565b600082601f8301126116ca57600080fd5b813560206116da6114bf8361147a565b82815260059290921b840181019181810190868411156116f957600080fd5b8286015b848110156115055761170e816113c1565b83529183019183016116fd565b6000806040838503121561172e57600080fd5b823567ffffffffffffffff8082111561174657600080fd5b6117528683870161149e565b9350602085013591508082111561176857600080fd5b50611775858286016116b9565b9150509250929050565b6000806040838503121561179257600080fd5b61179b836113a5565b91506116b0602084016113a5565b6000806000606084860312156117be57600080fd5b833567ffffffffffffffff808211156117d657600080fd5b6117e28783880161149e565b945060208601359150808211156117f857600080fd5b611804878388016116b9565b9350604086013591508082111561181a57600080fd5b50611827868287016116b9565b9150509250925092565b6001600160a01b0385168152608060208201819052600090611855908301866115de565b82810360408401526118678186611622565b91505063ffffffff8316606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118bd576118bd611895565b5060010190565b600082198211156118d7576118d7611895565b500190565b6000828210156118ee576118ee611895565b500390565b600081600019048311821515161561190d5761190d611895565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261193757611937611912565b500490565b600063ffffffff80831681851680830382111561195b5761195b611895565b01949350505050565b600063ffffffff8381169083168181101561198157611981611895565b039392505050565b6020808252602a908201527f696e76616c6964205f61637469766974794d756c7469706c6965722c2062657460408201526907765656e20302d3130360b41b606082015260800190565b60a08101611a108285546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b600063ffffffff80831681851681830481118215151615611a4657611a46611895565b02949350505050565b600063ffffffff80841680611a6657611a66611912565b9216919091049291505056fea2646970667358221220ebe2aa758002f6b810c9ae2b5fa62d23df2a2c733154445297db7eb0eaa4596164736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
