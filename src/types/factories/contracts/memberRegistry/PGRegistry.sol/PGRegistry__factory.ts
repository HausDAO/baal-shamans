/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splits",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "periodSecondsActive",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "Trigger",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "periodSecondsActive",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTrigger",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "periodSecondsActive",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splits",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160025534801561001557600080fd5b5060405161159c38038061159c833981016040819052610034916100c9565b61003d33610077565b600580546001600160a01b0319166001600160a01b03929092169190911790556000805463ffffffff19164263ffffffff161790556100f9565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100db57600080fd5b81516001600160a01b03811681146100f257600080fd5b9392505050565b611494806101086000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636ff6030111610097578063c818c70f11610066578063c818c70f1461022e578063cf2933c114610241578063e46867fd14610254578063f2fde38b1461026757600080fd5b80636ff60301146101ed578063715018a6146102055780638da5cb5b1461020d578063c04637111461021e57600080fd5b80633f26479e116100d35780633f26479e1461014b5780634aeb09041461016a5780635daf08ca146101725780636cbdec7d146101c257600080fd5b806306661abd146100fa5780630726312a1461011657806334e2fc651461012b575b600080fd5b61010360025481565b6040519081526020015b60405180910390f35b610129610124366004610f61565b61027a565b005b610103610139366004610fa4565b60036020526000908152604090205481565b610155620f424081565b60405163ffffffff909116815260200161010d565b610129610292565b610185610180366004610fbf565b61061b565b604080516001600160a01b03909616865263ffffffff9485166020870152928416928501929092528216606084015216608082015260a00161010d565b6005546101d5906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b60005461015590640100000000900463ffffffff1681565b610129610677565b6004546001600160a01b03166101d5565b6000546101559063ffffffff1681565b61012961023c366004610fd8565b61068b565b61012961024f36600461114a565b6106a1565b6101296102623660046111ae565b610704565b610129610275366004610fa4565b610786565b610282610804565b61028d83838361085e565b505050565b61029a610a32565b60008060005b600154811015610338576000600182815481106102bf576102bf611236565b600091825260209091206001600290920201015463ffffffff16111561032657600181815481106102f2576102f2611236565b60009182526020909120600160029092020101546103169063ffffffff1683611262565b9150826103228161128a565b9350505b806103308161128a565b9150506102a0565b5060008267ffffffffffffffff8111156103545761035461100b565b60405190808252806020026020018201604052801561037d578160200160208202803683370190505b50905060008367ffffffffffffffff81111561039b5761039b61100b565b6040519080825280602002602001820160405280156103c4578160200160208202803683370190505b50905060008060005b600154811015610570576000600182815481106103ec576103ec611236565b600091825260208083206040805160a081018252600290940290910180546001600160a01b038116855263ffffffff600160a01b8204811694860194909452600160c01b8104841692850192909252600160e01b9091048216606084015260019081015490911660808301528054919350908490811061046e5761046e611236565b600091825260209091206001600290920201015463ffffffff16111561055d5760006104a1826080015163ffffffff1690565b9050600183815481106104b6576104b6611236565b600091825260209091206002909102015487516001600160a01b03909116908890859081106104e7576104e7611236565b60200260200101906001600160a01b031690816001600160a01b03168152505087620f424061051b61051884610b68565b90565b61052591906112a3565b61052f91906112e5565b86848151811061054157610541611236565b602002602001019063ffffffff16908163ffffffff1681525050505b50806105688161128a565b9150506103cd565b50600554604051633b00fbc160e11b81526001600160a01b0390911690637601f782906105a7908790879087908790600401611316565b600060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505060405163ffffffff421681527f1020408d3477db49d8e75ad900fc71f6048f4a38140cbfef8eefdd3354527c7c9250602001905060405180910390a1505050505050565b6001818154811061062b57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b038216925063ffffffff600160a01b8304811692600160c01b8104821692600160e01b9091048216911685565b61067f610804565b6106896000610bc5565b565b610693610804565b61069d8282610c17565b5050565b6106a9610804565b60005b60015481101561028d576106f28382815181106106cb576106cb611236565b60200260200101518383815181106106e5576106e5611236565b6020026020010151610c17565b806106fc8161128a565b9150506106ac565b61070c610804565b60005b83518110156107805761076e84828151811061072d5761072d611236565b602002602001015184838151811061074757610747611236565b602002602001015184848151811061076157610761611236565b602002602001015161085e565b806107788161128a565b91505061070f565b50505050565b61078e610804565b6001600160a01b0381166107f85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61080181610bc5565b50565b6004546001600160a01b031633146106895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ef565b6001600160a01b038316600090815260036020526040902054156108b95760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016107ef565b60016040518060a00160405280856001600160a01b0316815260200183426108e191906113c3565b63ffffffff908116825285811660208084019190915285821660408085019190915260006060948501819052865460018181018955978252838220875160029283029091018054898701518a870151998b01518916600160e01b026001600160e01b039a8a16600160c01b029a909a166001600160c01b03918a16600160a01b026001600160c01b03199093166001600160a01b039586161792909217161797909717875560809097015195880180549690951663ffffffff19909616959095179093559254938816825260039052208190557f117e6cdbeb922f4ea8282ccbec33f3a3dfed48d53175fb22ff732e04356d1e0a91906109e29082906113e8565b815481106109f2576109f2611236565b9060005260206000209060020201604051610a0d91906113ff565b60405180910390a1600160026000828254610a289190611446565b9091555050505050565b60008054610a469063ffffffff16426113c3565b905060005b600154811015610b2b57600060018281548110610a6a57610a6a611236565b600091825260208083206040805160a081018252600290940290910180546001600160a01b038116855263ffffffff600160a01b8204811694860194909452600160c01b81048416928501839052600160e01b900483166060850152600101549091166080830152909250606490610ae290866112a3565b610aec91906112e5565b90508082602001818151610b009190611262565b63ffffffff908116909152919091166080909201919091525080610b238161128a565b915050610a4b565b5060405163ffffffff421681527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610ba857604051636155b67d60e01b8152600481018490526024016107ef565b610bbe610518670de0b6b3a76400008302610db9565b9392505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166000908152600360205260408120549003610c6f5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016107ef565b60648163ffffffff161115610cc65760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c696572000000000060448201526064016107ef565b6001600160a01b0382166000908152600360205260409020548190600190610cef9082906113e8565b81548110610cff57610cff611236565b906000526020600020906002020160000160186101000a81548163ffffffff021916908363ffffffff1602179055507f429f80b99526432feffe5df16ae0028aeaf580084e3d8f55df98ccabb73fb2e560018060036000866001600160a01b03166001600160a01b0316815260200190815260200160002054610d8291906113e8565b81548110610d9257610d92611236565b9060005260206000209060020201604051610dad91906113ff565b60405180910390a15050565b600081600003610dcb57506000919050565b50600181600160801b8110610de55760409190911b9060801c5b680100000000000000008110610e005760209190911b9060401c5b6401000000008110610e175760109190911b9060201c5b620100008110610e2c5760089190911b9060101c5b6101008110610e405760049190911b9060081c5b60108110610e535760029190911b9060041c5b60048110610e6357600182901b91505b6001828481610e7457610e746112cf565b048301901c91506001828481610e8c57610e8c6112cf565b048301901c91506001828481610ea457610ea46112cf565b048301901c91506001828481610ebc57610ebc6112cf565b048301901c91506001828481610ed457610ed46112cf565b048301901c91506001828481610eec57610eec6112cf565b048301901c91506001828481610f0457610f046112cf565b048301901c91506000828481610f1c57610f1c6112cf565b049050808310610f2a578092505b5050919050565b80356001600160a01b0381168114610f4857600080fd5b919050565b803563ffffffff81168114610f4857600080fd5b600080600060608486031215610f7657600080fd5b610f7f84610f31565b9250610f8d60208501610f4d565b9150610f9b60408501610f4d565b90509250925092565b600060208284031215610fb657600080fd5b610bbe82610f31565b600060208284031215610fd157600080fd5b5035919050565b60008060408385031215610feb57600080fd5b610ff483610f31565b915061100260208401610f4d565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561104a5761104a61100b565b604052919050565b600067ffffffffffffffff82111561106c5761106c61100b565b5060051b60200190565b600082601f83011261108757600080fd5b8135602061109c61109783611052565b611021565b82815260059290921b840181019181810190868411156110bb57600080fd5b8286015b848110156110dd576110d081610f31565b83529183019183016110bf565b509695505050505050565b600082601f8301126110f957600080fd5b8135602061110961109783611052565b82815260059290921b8401810191818101908684111561112857600080fd5b8286015b848110156110dd5761113d81610f4d565b835291830191830161112c565b6000806040838503121561115d57600080fd5b823567ffffffffffffffff8082111561117557600080fd5b61118186838701611076565b9350602085013591508082111561119757600080fd5b506111a4858286016110e8565b9150509250929050565b6000806000606084860312156111c357600080fd5b833567ffffffffffffffff808211156111db57600080fd5b6111e787838801611076565b945060208601359150808211156111fd57600080fd5b611209878388016110e8565b9350604086013591508082111561121f57600080fd5b5061122c868287016110e8565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8083168185168083038211156112815761128161124c565b01949350505050565b60006001820161129c5761129c61124c565b5060010190565b600063ffffffff808316818516818304811182151516156112c6576112c661124c565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff8084168061130a57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6080808252855190820181905260009060209060a0840190828901845b828110156113585781516001600160a01b031684529284019290840190600101611333565b5050508381038285015286518082528783019183019060005b8181101561139357835163ffffffff1683529284019291840191600101611371565b505063ffffffff8716604086015292506113ab915050565b6001600160a01b038316606083015295945050505050565b600063ffffffff838116908316818110156113e0576113e061124c565b039392505050565b6000828210156113fa576113fa61124c565b500390565b81546001600160a01b038116825260a081811c63ffffffff908116602085015260c083901c8116604085015260e09290921c60608401526001909301541660808201520190565b600082198211156114595761145961124c565b50019056fea2646970667358221220c5acf7fb68cc963a7dc1cad7a991b37e3ded25272ce1673b6bfb3ecd1ae094ec64736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splits: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(_splits, overrides || {}) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splits: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splits, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
