/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        internalType: "struct MemberRegistry.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSecondsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_sortedList",
        type: "address[]",
      },
    ],
    name: "updateSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001b3938038062001b398339810160408190526200003991620000e5565b620000443362000076565b600580546001600160a01b039384166001600160a01b031991821617909155600680549290931691161790556200011d565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060408385031215620000f957600080fd5b6200010483620000c8565b91506200011460208401620000c8565b90509250929050565b611a0c806200012d6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639eab5253116100ad578063d0e4b2f411610071578063d0e4b2f4146102b2578063e46867fd146102c5578063e4a7c603146102d8578063f2fde38b146102e0578063f7654176146102f357600080fd5b80639eab525314610254578063c046371114610269578063c7de644014610279578063c818c70f1461028c578063cf2933c11461029f57600080fd5b8063479d0a0d116100f4578063479d0a0d146101b4578063484194e6146101c75780635daf08ca146101f2578063715018a61461023b5780638da5cb5b1461024357600080fd5b806306661abd146101315780630726312a1461014d5780631267c6da1461016257806334e2fc65146101755780633f26479e14610195575b600080fd5b61013a60025481565b6040519081526020015b60405180910390f35b61016061015b366004611388565b610306565b005b6101606101703660046113cb565b61031e565b61013a6101833660046113cb565b60036020526000908152604090205481565b61019f620f424081565b60405163ffffffff9091168152602001610144565b6101606101c23660046114c3565b610389565b6005546101da906001600160a01b031681565b6040516001600160a01b039091168152602001610144565b610205610200366004611500565b610864565b604080516001600160a01b03909516855263ffffffff938416602086015291831691840191909152166060820152608001610144565b6101606108b1565b6004546001600160a01b03166101da565b61025c6108c5565b6040516101449190611519565b60005461019f9063ffffffff1681565b6101606102873660046113cb565b61095c565b61016061029a366004611591565b610996565b6101606102ad366004611626565b6109ac565b6101606102c036600461168a565b610a0f565b6101606102d33660046116b4565b610a82565b610160610b04565b6101606102ee3660046113cb565b610b0c565b6006546101da906001600160a01b031681565b61030e610b85565b610319838383610bdf565b505050565b610326610b85565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b5050505050565b60008060006001805490508451146103d75760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b84518110156104b25760008582815181106103f7576103f761173c565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156104475750806001600160a01b0316836001600160a01b0316105b61049e5760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b60648201526084016103ce565b9150806104aa81611768565b9150506103da565b5060005b600154811015610566576000600182815481106104d5576104d561173c565b600091825260209091200154600160c01b900463ffffffff1611156105545760006105286001838154811061050c5761050c61173c565b600091825260209091200154600160a01b900463ffffffff1690565b905061053961053682610e19565b90565b6105439085611781565b93508461054f81611768565b955050505b8061055e81611768565b9150506104b6565b5060008367ffffffffffffffff811115610582576105826113e6565b6040519080825280602002602001820160405280156105ab578160200160208202803683370190505b50905060008467ffffffffffffffff8111156105c9576105c96113e6565b6040519080825280602002602001820160405280156105f2578160200160208202803683370190505b5090506000808060005b895181101561079e576000600360008c848151811061061d5761061d61173c565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490506000600180836106589190611799565b815481106106685761066861173c565b60009182526020918290206040805160808101825291909201546001600160a01b038116825263ffffffff600160a01b8204811694830194909452600160c01b81048416928201839052600160e01b90049092166060830152909150156107895780600001518885815181106106e0576106e061173c565b6001600160a01b039092166020928302919091018201528101518a90620f424090610714906105369063ffffffff16610e19565b61071e91906117b0565b61072891906117e5565b87858151811061073a5761073a61173c565b602002602001019063ffffffff16908163ffffffff16815250508684815181106107665761076661173c565b60200260200101518561077991906117f9565b94508361078581611768565b9450505b5050808061079690611768565b9150506105fc565b5063ffffffff8216620f4240146107ed576107bc82620f4240611821565b846000815181106107cf576107cf61173c565b602002602001018181516107e391906117f9565b63ffffffff169052505b600554600654604051637677856760e11b81526001600160a01b039283169263ecef0ace9261082792911690899089908990600401611846565b600060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b50505050505050505050505050565b6001818154811061087457600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6108b9610b85565b6108c36000610e76565b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561095357600084815260209081902060408051608081018252918501546001600160a01b038116835263ffffffff600160a01b8204811684860152600160c01b8204811692840192909252600160e01b90041660608201528252600190920191016108e9565b50505050905090565b610964610b85565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610354565b61099e610b85565b6109a88282610ec8565b5050565b6109b4610b85565b60005b600154811015610319576109fd8382815181106109d6576109d661173c565b60200260200101518383815181106109f0576109f061173c565b6020026020010151610ec8565b80610a0781611768565b9150506109b7565b610a17610b85565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b505050505050565b610a8a610b85565b60005b8351811015610afe57610aec848281518110610aab57610aab61173c565b6020026020010151848381518110610ac557610ac561173c565b6020026020010151848481518110610adf57610adf61173c565b6020026020010151610bdf565b80610af681611768565b915050610a8d565b50505050565b6108c361105c565b610b14610b85565b6001600160a01b038116610b795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ce565b610b8281610e76565b50565b6004546001600160a01b031633146108c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ce565b6001600160a01b03831660009081526003602052604090205415610c3a5760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016103ce565b4263ffffffff168163ffffffff161115610ca25760405162461bcd60e51b815260206004820152602360248201527f737461727420646174652063616e206e6f7420626520696e207468652066757460448201526275726560e81b60648201526084016103ce565b60648263ffffffff161115610cc95760405162461bcd60e51b81526004016103ce906118ed565b604080516080810182526001600160a01b038086168083526000602080850182815263ffffffff8981168789019081528982166060890190815260018054808201825581885299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909a0180549551935192518516600160e01b026001600160e01b03938616600160c01b02939093166001600160c01b0394909516600160a01b026001600160c01b03199096169a90991699909917939093171617179093556002549181526003909252928120839055917fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610dca908290611799565b81548110610dda57610dda61173c565b9060005260206000200142604051610df3929190611937565b60405180910390a1600160026000828254610e0e9190611781565b909155505050505050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610e5957604051636155b67d60e01b8152600481018490526024016103ce565b610e6f610536670de0b6b3a764000083026111e0565b9392505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166000908152600360205260408120549003610f205760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016103ce565b60648163ffffffff161115610f475760405162461bcd60e51b81526004016103ce906118ed565b6001600160a01b0382166000908152600360205260409020548190600190610f70908290611799565b81548110610f8057610f8061173c565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb490600190610ff7908290611799565b815481106110075761100761173c565b9060005260206000200160405161105091546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606082015260800190565b60405180910390a15050565b4260005b6001548110156111915760006001828154811061107f5761107f61173c565b600091825260208220018054909250600160a01b900463ffffffff1681036110c15781546110ba90600160e01b900463ffffffff1685611821565b90506110d7565b6000546110d49063ffffffff1685611821565b90505b81546000906064906110f690600160c01b900463ffffffff1684611987565b61110091906119b3565b835490915081908490601490611124908490600160a01b900463ffffffff166117f9565b92506101000a81548163ffffffff021916908363ffffffff1602179055507f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f2128382604051611173929190611937565b60405180910390a1505050808061118990611768565b915050611060565b506000805463ffffffff191663ffffffff83169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c09060200160405180910390a150565b6000816000036111f257506000919050565b50600181600160801b811061120c5760409190911b9060801c5b6801000000000000000081106112275760209190911b9060401c5b640100000000811061123e5760109190911b9060201c5b6201000081106112535760089190911b9060101c5b61010081106112675760049190911b9060081c5b6010811061127a5760029190911b9060041c5b6004811061128a57600182901b91505b600182848161129b5761129b6117cf565b048301901c915060018284816112b3576112b36117cf565b048301901c915060018284816112cb576112cb6117cf565b048301901c915060018284816112e3576112e36117cf565b048301901c915060018284816112fb576112fb6117cf565b048301901c91506001828481611313576113136117cf565b048301901c9150600182848161132b5761132b6117cf565b048301901c91506000828481611343576113436117cf565b049050808310611351578092505b5050919050565b80356001600160a01b038116811461136f57600080fd5b919050565b803563ffffffff8116811461136f57600080fd5b60008060006060848603121561139d57600080fd5b6113a684611358565b92506113b460208501611374565b91506113c260408501611374565b90509250925092565b6000602082840312156113dd57600080fd5b610e6f82611358565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611425576114256113e6565b604052919050565b600067ffffffffffffffff821115611447576114476113e6565b5060051b60200190565b600082601f83011261146257600080fd5b813560206114776114728361142d565b6113fc565b82815260059290921b8401810191818101908684111561149657600080fd5b8286015b848110156114b8576114ab81611358565b835291830191830161149a565b509695505050505050565b6000602082840312156114d557600080fd5b813567ffffffffffffffff8111156114ec57600080fd5b6114f884828501611451565b949350505050565b60006020828403121561151257600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561158457815180516001600160a01b031685528681015163ffffffff9081168887015286820151811687870152606091820151169085015260809093019290850190600101611536565b5091979650505050505050565b600080604083850312156115a457600080fd5b6115ad83611358565b91506115bb60208401611374565b90509250929050565b600082601f8301126115d557600080fd5b813560206115e56114728361142d565b82815260059290921b8401810191818101908684111561160457600080fd5b8286015b848110156114b85761161981611374565b8352918301918301611608565b6000806040838503121561163957600080fd5b823567ffffffffffffffff8082111561165157600080fd5b61165d86838701611451565b9350602085013591508082111561167357600080fd5b50611680858286016115c4565b9150509250929050565b6000806040838503121561169d57600080fd5b6116a683611358565b91506115bb60208401611358565b6000806000606084860312156116c957600080fd5b833567ffffffffffffffff808211156116e157600080fd5b6116ed87838801611451565b9450602086013591508082111561170357600080fd5b61170f878388016115c4565b9350604086013591508082111561172557600080fd5b50611732868287016115c4565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161177a5761177a611752565b5060010190565b6000821982111561179457611794611752565b500190565b6000828210156117ab576117ab611752565b500390565b60008160001904831182151516156117ca576117ca611752565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826117f4576117f46117cf565b500490565b600063ffffffff80831681851680830382111561181857611818611752565b01949350505050565b600063ffffffff8381169083168181101561183e5761183e611752565b039392505050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611894578551851683529483019491830191600101611876565b5050858103604087015287518082529082019350915080870160005b838110156118d257815163ffffffff16855293820193908201906001016118b0565b50505063ffffffff8516606085015250905095945050505050565b6020808252602a908201527f696e76616c6964205f61637469766974794d756c7469706c6965722c2062657460408201526907765656e20302d3130360b41b606082015260800190565b60a081016119748285546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b600063ffffffff808316818516818304811182151516156119aa576119aa611752565b02949350505050565b600063ffffffff808416806119ca576119ca6117cf565b9216919091049291505056fea26469706673582212209cdc1c07c0234e06e64533984edb77c20053715623ddfc758abf4172c76fd5a664736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
