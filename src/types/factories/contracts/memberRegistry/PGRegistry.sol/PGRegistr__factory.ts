/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PGRegistr,
  PGRegistrInterface,
} from "../../../../contracts/memberRegistry/PGRegistry.sol/PGRegistr";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_splitsMain",
        type: "address",
      },
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDiv18Overflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "initialSeconds",
        type: "uint32",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "date",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newSeconds",
        type: "uint32",
      },
    ],
    name: "UpdateMemberSeconds",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "acceptControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
    ],
    name: "cancelControlTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "split",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitsMain",
    outputs: [
      {
        internalType: "contract ISPLITS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_split",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "transferControl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "sortedList",
        type: "address[]",
      },
    ],
    name: "triggerCalcAndSplits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016002553480156200001657600080fd5b5060405162001b4e38038062001b4e8339810160408190526200003991620000fb565b62000044336200008c565b600580546001600160a01b03199081166001600160a01b03948516179091556000805463ffffffff19164263ffffffff16179055600680549091169190921617905562000133565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000f657600080fd5b919050565b600080604083850312156200010f57600080fd5b6200011a83620000de565b91506200012a60208401620000de565b90509250929050565b611a0b80620001436000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a1d1682c116100a2578063cf2933c111610071578063cf2933c114610274578063d0e4b2f414610287578063e46867fd1461029a578063f2fde38b146102ad578063f7654176146102c057600080fd5b8063a1d1682c1461022b578063c04637111461023e578063c7de64401461024e578063c818c70f1461026157600080fd5b80633f26479e116100e95780633f26479e1461017f578063484194e61461019e5780635daf08ca146101c9578063715018a6146102125780638da5cb5b1461021a57600080fd5b806306661abd1461011b5780630726312a146101375780631267c6da1461014c57806334e2fc651461015f575b600080fd5b61012460025481565b6040519081526020015b60405180910390f35b61014a61014536600461147c565b6102d3565b005b61014a61015a3660046114bf565b6102eb565b61012461016d3660046114bf565b60036020526000908152604090205481565b610189620f424081565b60405163ffffffff909116815260200161012e565b6005546101b1906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b6101dc6101d73660046114da565b610356565b604080516001600160a01b03909516855263ffffffff93841660208601529183169184019190915216606082015260800161012e565b61014a6103a3565b6004546001600160a01b03166101b1565b61014a6102393660046115d0565b6103b7565b6000546101899063ffffffff1681565b61014a61025c3660046114bf565b6108bd565b61014a61026f36600461160d565b6108f7565b61014a6102823660046116a2565b61090d565b61014a610295366004611706565b610970565b61014a6102a8366004611730565b6109e3565b61014a6102bb3660046114bf565b610a65565b6006546101b1906001600160a01b031681565b6102db610ade565b6102e6838383610b38565b505050565b6102f3610ade565b600554604051630933e36d60e11b81526001600160a01b03838116600483015290911690631267c6da906024015b600060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b5050505050565b6001818154811061036657600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6103ab610ade565b6103b56000610cfa565b565b60008060006001805490508451146104055760405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081b1a5cdd60a21b60448201526064015b60405180910390fd5b60005b84518110156104e1576000858281518110610425576104256117b8565b60200260200101519050600060036000836001600160a01b03166001600160a01b03168152602001908152602001600020541180156104765750806001600160a01b0316836001600160a01b031611155b6104cd5760405162461bcd60e51b815260206004820152602260248201527f6163636f756e74206e6f742061206d656d626572206f72206e6f7420736f7274604482015261195960f21b60648201526084016103fc565b9150806104d9816117e4565b915050610408565b5060005b60015481101561059757600060018281548110610504576105046117b8565b600091825260209091200154600160c01b900463ffffffff1611156105855760006105596001838154811061053b5761053b6117b8565b600091825260209091200154600160a01b900463ffffffff16610d4c565b905061056a61056782610d56565b90565b61057490856117fd565b935084610580816117e4565b955050505b8061058f816117e4565b9150506104e5565b5060008367ffffffffffffffff8111156105b3576105b36114f3565b6040519080825280602002602001820160405280156105dc578160200160208202803683370190505b50905060008467ffffffffffffffff8111156105fa576105fa6114f3565b604051908082528060200260200182016040528015610623578160200160208202803683370190505b509050600080805b8851811015610828576000600360008b848151811061064c5761064c6117b8565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006001828154811061068c5761068c6117b8565b600091825260208083206040805160808101825291909301546001600160a01b038116825263ffffffff600160a01b8204811693830193909352600160c01b8104831693820193909352600160e01b9092041660608201526001805491935090849081106106fc576106fc6117b8565b600091825260209091200154600160c01b900463ffffffff161115610813576001828154811061072e5761072e6117b8565b60009182526020909120015487516001600160a01b039091169088908590811061075a5761075a6117b8565b60200260200101906001600160a01b031690816001600160a01b0316815250506107bf6105676107898b610d4c565b6107b9610798620f4240610d4c565b6107b36107ae876020015163ffffffff16610d4c565b610d56565b90610db3565b90610dc2565b8684815181106107d1576107d16117b8565b602002602001019063ffffffff16908163ffffffff16815250508583815181106107fd576107fd6117b8565b6020026020010151846108109190611815565b93505b50508080610820906117e4565b91505061062b565b5061085d6040518060400160405280600c81526020016b1c9d5b9b9a5b99d51bdd185b60a21b8152508263ffffffff16610dda565b63ffffffff8116620f4240146108ab5761087a81620f424061183d565b8360008151811061088d5761088d6117b8565b602002602001018181516108a19190611815565b63ffffffff169052505b6108b3610e1f565b5050505050505050565b6108c5610ade565b60055460405163031f799160e61b81526001600160a01b0383811660048301529091169063c7de644090602401610321565b6108ff610ade565b6109098282610fa6565b5050565b610915610ade565b60005b6001548110156102e65761095e838281518110610937576109376117b8565b6020026020010151838381518110610951576109516117b8565b6020026020010151610fa6565b80610968816117e4565b915050610918565b610978610ade565b6005546040516334392cbd60e21b81526001600160a01b03848116600483015283811660248301529091169063d0e4b2f490604401600060405180830381600087803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b505050505050565b6109eb610ade565b60005b8351811015610a5f57610a4d848281518110610a0c57610a0c6117b8565b6020026020010151848381518110610a2657610a266117b8565b6020026020010151848481518110610a4057610a406117b8565b6020026020010151610b38565b80610a57816117e4565b9150506109ee565b50505050565b610a6d610ade565b6001600160a01b038116610ad25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b610adb81610cfa565b50565b6004546001600160a01b031633146103b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fc565b6001600160a01b03831660009081526003602052604090205415610b935760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b60448201526064016103fc565b6000610b9f824261183d565b604080516080810182526001600160a01b0380881680835263ffffffff80861660208086019182528a83168688019081528a841660608801908152600180548082018255600082815299517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910180549651945193518816600160e01b026001600160e01b03948916600160c01b02949094166001600160c01b0395909816600160a01b026001600160c01b031990971691909916179490941791909116939093179290921790935560025491845260039052929091208290559192507fbdf3183d692e7f3bb2b00964a73d24b13130b28e917a1874f24767f4799b8e1c9190610cab908290611862565b81548110610cbb57610cbb6117b8565b9060005260206000200182604051610cd4929190611879565b60405180910390a1600160026000828254610cef91906117fd565b909155505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000815b92915050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610d9657604051636155b67d60e01b8152600481018490526024016103fc565b610dac610567670de0b6b3a7640000830261112c565b9392505050565b6000610dac61056784846112a4565b6000610dac61056784670de0b6b3a764000085611358565b6109098282604051602401610df09291906118e0565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261142b565b60008054429190610e369063ffffffff168361183d565b905060005b600154811015610f6757600060018281548110610e5a57610e5a6117b8565b600091825260208083206040805160808101825291909301546001600160a01b038116825263ffffffff600160a01b8204811693830193909352600160c01b81048316938201849052600160e01b900490911660608201529250606490610ec1908661193d565b610ecb9190611969565b90508082602001818151610edf9190611815565b63ffffffff9081169091526040805185516001600160a01b03168152602080870151841690820152858201518316818301526060808701518416908201529184166080830152517f4698571218397bdc8293260b080063abcc46128720b99e6e5818cf830cd4f21292509081900360a00190a150508080610f5f906117e4565b915050610e3b565b5060405163ffffffff831681527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c0906020015b60405180910390a15050565b6001600160a01b0382166000908152600360205260408120549003610ffe5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b60448201526064016103fc565b60648163ffffffff1611156110555760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c696572000000000060448201526064016103fc565b6001600160a01b038216600090815260036020526040902054819060019061107e908290611862565b8154811061108e5761108e6117b8565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb490600190611105908290611862565b81548110611115576111156117b8565b90600052602060002001604051610f9a919061199a565b60008160000361113e57506000919050565b50600181600160801b81106111585760409190911b9060801c5b6801000000000000000081106111735760209190911b9060401c5b640100000000811061118a5760109190911b9060201c5b62010000811061119f5760089190911b9060101c5b61010081106111b35760049190911b9060081c5b601081106111c65760029190911b9060041c5b600481106111d657600182901b91505b60018284816111e7576111e76118ca565b048301901c915060018284816111ff576111ff6118ca565b048301901c91506001828481611217576112176118ca565b048301901c9150600182848161122f5761122f6118ca565b048301901c91506001828481611247576112476118ca565b048301901c9150600182848161125f5761125f6118ca565b048301901c91506001828481611277576112776118ca565b048301901c9150600082848161128f5761128f6118ca565b04905080831061129d578092505b5050919050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106112ef5760405163090638d560e41b815260048101869052602481018590526044016103fc565b6000670de0b6b3a764000085870990508160000361131b575050670de0b6b3a764000090049050610d50565b620400008184030492109003600160ee1b02177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066902905092915050565b600080806000198587098587029250828110838203039150508060000361139257838281611388576113886118ca565b0492505050610dac565b8381106113c3576040516307639aaf60e41b81526004810187905260248101869052604481018590526064016103fc565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461146357600080fd5b919050565b803563ffffffff8116811461146357600080fd5b60008060006060848603121561149157600080fd5b61149a8461144c565b92506114a860208501611468565b91506114b660408501611468565b90509250925092565b6000602082840312156114d157600080fd5b610dac8261144c565b6000602082840312156114ec57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611532576115326114f3565b604052919050565b600067ffffffffffffffff821115611554576115546114f3565b5060051b60200190565b600082601f83011261156f57600080fd5b8135602061158461157f8361153a565b611509565b82815260059290921b840181019181810190868411156115a357600080fd5b8286015b848110156115c5576115b88161144c565b83529183019183016115a7565b509695505050505050565b6000602082840312156115e257600080fd5b813567ffffffffffffffff8111156115f957600080fd5b6116058482850161155e565b949350505050565b6000806040838503121561162057600080fd5b6116298361144c565b915061163760208401611468565b90509250929050565b600082601f83011261165157600080fd5b8135602061166161157f8361153a565b82815260059290921b8401810191818101908684111561168057600080fd5b8286015b848110156115c55761169581611468565b8352918301918301611684565b600080604083850312156116b557600080fd5b823567ffffffffffffffff808211156116cd57600080fd5b6116d98683870161155e565b935060208501359150808211156116ef57600080fd5b506116fc85828601611640565b9150509250929050565b6000806040838503121561171957600080fd5b6117228361144c565b91506116376020840161144c565b60008060006060848603121561174557600080fd5b833567ffffffffffffffff8082111561175d57600080fd5b6117698783880161155e565b9450602086013591508082111561177f57600080fd5b61178b87838801611640565b935060408601359150808211156117a157600080fd5b506117ae86828701611640565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117f6576117f66117ce565b5060010190565b60008219821115611810576118106117ce565b500190565b600063ffffffff808316818516808303821115611834576118346117ce565b01949350505050565b600063ffffffff8381169083168181101561185a5761185a6117ce565b039392505050565b600082821015611874576118746117ce565b500390565b60a081016118b78285546001600160a01b038116825260a081901c63ffffffff908116602084015260c082901c16604083015260e01c606090910152565b63ffffffff831660808301529392505050565b634e487b7160e01b600052601260045260246000fd5b604081526000835180604084015260005b8181101561190e57602081870181015160608684010152016118f1565b81811115611920576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b600063ffffffff80831681851681830481118215151615611960576119606117ce565b02949350505050565b600063ffffffff8084168061198e57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b81546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606082015260808101610d5056fea264697066735822122027db981022a51a037a0888c9c395206e5323967044398136c4a89042faa6744a64736f6c634300080d0033";

type PGRegistrConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistrConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistr__factory extends ContractFactory {
  constructor(...args: PGRegistrConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistr> {
    return super.deploy(
      _splitsMain,
      _split,
      overrides || {}
    ) as Promise<PGRegistr>;
  }
  override getDeployTransaction(
    _splitsMain: PromiseOrValue<string>,
    _split: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_splitsMain, _split, overrides || {});
  }
  override attach(address: string): PGRegistr {
    return super.attach(address) as PGRegistr;
  }
  override connect(signer: Signer): PGRegistr__factory {
    return super.connect(signer) as PGRegistr__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistrInterface {
    return new utils.Interface(_abi) as PGRegistrInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistr {
    return new Contract(address, _abi, signerOrProvider) as PGRegistr;
  }
}
