/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PGRegistry,
  PGRegistryInterface,
} from "../../../contracts/memberRegistry/PGRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "UD60x18",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__SqrtOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "Trigger",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "secondsActive",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "activityMultiplier",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startDate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct MemberRegistry.Member",
        name: "member",
        type: "tuple",
      },
    ],
    name: "UpdateMember",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_startDates",
        type: "uint32[]",
      },
    ],
    name: "batchNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_activityMultipliers",
        type: "uint32[]",
      },
    ],
    name: "batchUpdateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTrigger",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIdxs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsActive",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_startDate",
        type: "uint32",
      },
    ],
    name: "setNewMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trigger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_activityMultiplier",
        type: "uint32",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSecondsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160025534801561001557600080fd5b5061001f33610039565b6000805463ffffffff19164263ffffffff1617905561008b565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61121e8061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063cf2933c111610066578063cf2933c114610204578063e46867fd14610217578063e4a7c6031461022a578063f2fde38b1461023257600080fd5b80638da5cb5b146101c6578063c0463711146101e1578063c818c70f146101f157600080fd5b80635daf08ca116100c85780635daf08ca146101405780636ff6030114610189578063715018a6146101b65780637fec8d38146101be57600080fd5b806306661abd146100ef5780630726312a1461010b57806334e2fc6514610120575b600080fd5b6100f860025481565b6040519081526020015b60405180910390f35b61011e610119366004610da7565b610245565b005b6100f861012e366004610dea565b60036020526000908152604090205481565b61015361014e366004610e05565b61025d565b604080516001600160a01b03909516855263ffffffff938416602086015291831691840191909152166060820152608001610102565b6000546101a190640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610102565b61011e6102aa565b61011e6102be565b6004546040516001600160a01b039091168152602001610102565b6000546101a19063ffffffff1681565b61011e6101ff366004610e1e565b6103e0565b61011e610212366004610f90565b6103f6565b61011e610225366004610ff4565b610459565b61011e6104db565b61011e610240366004610dea565b6105e1565b61024d61065f565b6102588383836106b9565b505050565b6001818154811061026d57600080fd5b6000918252602090912001546001600160a01b038116915063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b6102b261065f565b6102bc6000610861565b565b60015460009067ffffffffffffffff8111156102dc576102dc610e51565b604051908082528060200260200182016040528015610305578160200160208202803683370190505b50905060005b600154811015610374576103456001828154811061032b5761032b61107c565b6000918252602090912001546001600160a01b03166108b3565b8282815181106103575761035761107c565b60209081029190910101528061036c816110a8565b91505061030b565b5061037e816108da565b506000805467ffffffff0000000019166401000000004263ffffffff9081168202929092179283905560405192041681527f1020408d3477db49d8e75ad900fc71f6048f4a38140cbfef8eefdd3354527c7c906020015b60405180910390a150565b6103e861065f565b6103f282826109a8565b5050565b6103fe61065f565b60005b600154811015610258576104478382815181106104205761042061107c565b602002602001015183838151811061043a5761043a61107c565b60200260200101516109a8565b80610451816110a8565b915050610401565b61046161065f565b60005b83518110156104d5576104c38482815181106104825761048261107c565b602002602001015184838151811061049c5761049c61107c565b60200260200101518484815181106104b6576104b661107c565b60200260200101516106b9565b806104cd816110a8565b915050610464565b50505050565b600080546104ef9063ffffffff16426110c1565b905060005b600154811015610598576000600182815481106105135761051361107c565b6000918252602090912001805490915060649061053d90600160c01b900463ffffffff16856110e6565b6105479190611128565b81548290601490610566908490600160a01b900463ffffffff16611159565b92506101000a81548163ffffffff021916908363ffffffff160217905550508080610590906110a8565b9150506104f4565b506000805463ffffffff19164263ffffffff169081179091556040519081527f5624889e22dfb82f30d92d6882aecff897f9f67a4a4d224257d424d2420ee8c0906020016103d5565b6105e961065f565b6001600160a01b0381166106535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61065c81610861565b50565b6004546001600160a01b031633146102bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161064a565b6001600160a01b038316600090815260036020526040902054156107145760405162461bcd60e51b8152602060048201526012602482015271185b1c9958591e481c9959da5cdd195c995960721b604482015260640161064a565b60016040518060800160405280856001600160a01b03168152602001834261073c91906110c1565b63ffffffff9081168252858116602080840191909152858216604093840152845460018181018755600096875282872086519201805487850151888801516060909901518716600160e01b026001600160e01b03998816600160c01b02999099166001600160c01b0391909716600160a01b026001600160c01b03199092166001600160a01b03958616179190911716949094179590951790925560025491881685526003905292208290557f96147d24d04685de4d5a739b930bf396ec59482c3903f8a924d2afe9c5fda95091610815908290611181565b815481106108255761082561107c565b9060005260206000200160405161083c9190611198565b60405180910390a160016002600082825461085791906111d0565b9091555050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806108c56108c284610b3a565b90565b90506108d36108c282610bae565b9392505050565b600080825167ffffffffffffffff8111156108f7576108f7610e51565b604051908082528060200260200182016040528015610920578160200160208202803683370190505b50905060005b835181101561099e576000600182815481106109445761094461107c565b60009182526020909120015483516001600160a01b03909116915081908490849081106109735761097361107c565b6001600160a01b03909216602092830291909101909101525080610996816110a8565b915050610926565b5060019392505050565b6001600160a01b0382166000908152600360205260408120549003610a005760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b604482015260640161064a565b60648163ffffffff161115610a575760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964205f61637469766974794d756c7469706c6965720000000000604482015260640161064a565b6001600160a01b0382166000908152600360205260409020548190600190610a80908290611181565b81548110610a9057610a9061107c565b60009182526020808320909101805463ffffffff94909416600160c01b0263ffffffff60c01b19909416939093179092556001600160a01b0384168152600390915260409020547fea050be4bcbfcde9ad6f27bac00b8c6e51855eadfb116dc7542c267505071fb490600190610b07908290611181565b81548110610b1757610b1761107c565b90600052602060002001604051610b2e9190611198565b60405180910390a15050565b6001600160a01b038116600090815260036020526040812054816001610b608184611181565b81548110610b7057610b7061107c565b60009182526020909120018054909150610ba09063ffffffff600160c01b8204811691600160a01b9004166110e6565b63ffffffff16949350505050565b6000817812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21811115610bee57604051636155b67d60e01b81526004810184905260240161064a565b6108d36108c2670de0b6b3a76400008302600081600003610c1157506000919050565b50600181600160801b8110610c2b5760409190911b9060801c5b680100000000000000008110610c465760209190911b9060401c5b6401000000008110610c5d5760109190911b9060201c5b620100008110610c725760089190911b9060101c5b6101008110610c865760049190911b9060081c5b60108110610c995760029190911b9060041c5b60048110610ca957600182901b91505b6001828481610cba57610cba611112565b048301901c91506001828481610cd257610cd2611112565b048301901c91506001828481610cea57610cea611112565b048301901c91506001828481610d0257610d02611112565b048301901c91506001828481610d1a57610d1a611112565b048301901c91506001828481610d3257610d32611112565b048301901c91506001828481610d4a57610d4a611112565b048301901c91506000828481610d6257610d62611112565b049050808310610d70578092505b5050919050565b80356001600160a01b0381168114610d8e57600080fd5b919050565b803563ffffffff81168114610d8e57600080fd5b600080600060608486031215610dbc57600080fd5b610dc584610d77565b9250610dd360208501610d93565b9150610de160408501610d93565b90509250925092565b600060208284031215610dfc57600080fd5b6108d382610d77565b600060208284031215610e1757600080fd5b5035919050565b60008060408385031215610e3157600080fd5b610e3a83610d77565b9150610e4860208401610d93565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e9057610e90610e51565b604052919050565b600067ffffffffffffffff821115610eb257610eb2610e51565b5060051b60200190565b600082601f830112610ecd57600080fd5b81356020610ee2610edd83610e98565b610e67565b82815260059290921b84018101918181019086841115610f0157600080fd5b8286015b84811015610f2357610f1681610d77565b8352918301918301610f05565b509695505050505050565b600082601f830112610f3f57600080fd5b81356020610f4f610edd83610e98565b82815260059290921b84018101918181019086841115610f6e57600080fd5b8286015b84811015610f2357610f8381610d93565b8352918301918301610f72565b60008060408385031215610fa357600080fd5b823567ffffffffffffffff80821115610fbb57600080fd5b610fc786838701610ebc565b93506020850135915080821115610fdd57600080fd5b50610fea85828601610f2e565b9150509250929050565b60008060006060848603121561100957600080fd5b833567ffffffffffffffff8082111561102157600080fd5b61102d87838801610ebc565b9450602086013591508082111561104357600080fd5b61104f87838801610f2e565b9350604086013591508082111561106557600080fd5b5061107286828701610f2e565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110ba576110ba611092565b5060010190565b600063ffffffff838116908316818110156110de576110de611092565b039392505050565b600063ffffffff8083168185168183048111821515161561110957611109611092565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff8084168061114d57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600063ffffffff80831681851680830382111561117857611178611092565b01949350505050565b60008282101561119357611193611092565b500390565b90546001600160a01b038116825263ffffffff60a082901c8116602084015260c082901c16604083015260e01c606082015260800190565b600082198211156111e3576111e3611092565b50019056fea2646970667358221220c14435a0cb992e31079af638a15a72875b0ded732d1bedb79562cfe5dec1b32364736f6c634300080d0033";

type PGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PGRegistry__factory extends ContractFactory {
  constructor(...args: PGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PGRegistry> {
    return super.deploy(overrides || {}) as Promise<PGRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PGRegistry {
    return super.attach(address) as PGRegistry;
  }
  override connect(signer: Signer): PGRegistry__factory {
    return super.connect(signer) as PGRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PGRegistryInterface {
    return new utils.Interface(_abi) as PGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PGRegistry {
    return new Contract(address, _abi, signerOrProvider) as PGRegistry;
  }
}
