/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExampleManagerShaman,
  ExampleManagerShamanInterface,
} from "../../../../contracts/nftDrip/NFTDrip.sol/ExampleManagerShaman";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_perPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107f53803806107f583398101604081905261002f91610214565b600080546001600160a01b038088166001600160a01b03199283161790925560028054928716929091169190911790556004805484151560ff19909116811790915560ff16156101225760008054906101000a90046001600160a01b03166001600160a01b0316638009ba1f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c557600080fd5b505afa1580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd91906101f2565b600180546001600160a01b0319166001600160a01b03929092169190911790556101c7565b60008054906101000a90046001600160a01b03166001600160a01b031663f460124d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a691906101f2565b600180546001600160a01b0319166001600160a01b03929092169190911790555b60055560065550610271915050565b80516001600160a01b03811681146101ed57600080fd5b919050565b60006020828403121561020457600080fd5b61020d826101d6565b9392505050565b600080600080600060a0868803121561022c57600080fd5b610235866101d6565b9450610243602087016101d6565b93506040860151801515811461025857600080fd5b6060870151608090970151959894975095949392505050565b610575806102806000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806303314efa1461007d578063379607f51461009f57806347ccca02146100b4578063a888c2cd146100df578063e5a2a2a51461010d578063e852b12914610120578063ef78d4fd14610129578063fc0c546a14610132575b600080fd5b60045461008a9060ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad366004610467565b610145565b005b6002546100c7906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b6100ff6100ed366004610467565b60036020526000908152604090205481565b604051908152602001610096565b6000546100c7906001600160a01b031681565b6100ff60065481565b6100ff60055481565b6001546100c7906001600160a01b031681565b6005546000828152600360205260409020546101619042610504565b10158061017a5750600081815260036020526040902054155b6101ca5760405162461bcd60e51b815260206004820181905260248201527f43616e206f6e6c7920636c61696d20312074696d652070657220706572696f64604482015260640160405180910390fd5b6002546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561020e57600080fd5b505afa158015610222573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102469190610437565b6001600160a01b03161461025957600080fd5b600061026460065490565b905061027033826102c6565b600082815260036020908152604091829020429081905582513381529182018590528183015290517f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79181900360600190a15050565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106102fc576102fc610529565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050828160008151811061034d5761034d610529565b602090810291909101015260045460ff16156103cc57600054604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c906103959085908590600401610480565b600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b50505050610431565b6000546040516322936c2360e11b81526001600160a01b0390911690634526d846906103fe9085908590600401610480565b600060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b505050505b50505050565b60006020828403121561044957600080fd5b81516001600160a01b038116811461046057600080fd5b9392505050565b60006020828403121561047957600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156104c25781516001600160a01b03168452928401929084019060010161049d565b5050508381038285015284518082528583019183019060005b818110156104f7578351835292840192918401916001016104db565b5090979650505050505050565b60008282101561052457634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fdfea264697066735822122093b953f153985e12a75b4f2ed77c0645ed2b4610ce70d39d4cae1aaa058c2ce664736f6c63430008070033";

type ExampleManagerShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleManagerShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleManagerShaman__factory extends ContractFactory {
  constructor(...args: ExampleManagerShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _moloch: PromiseOrValue<string>,
    _nftAddress: PromiseOrValue<string>,
    _shares: PromiseOrValue<boolean>,
    _perPeriod: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleManagerShaman> {
    return super.deploy(
      _moloch,
      _nftAddress,
      _shares,
      _perPeriod,
      _period,
      overrides || {}
    ) as Promise<ExampleManagerShaman>;
  }
  override getDeployTransaction(
    _moloch: PromiseOrValue<string>,
    _nftAddress: PromiseOrValue<string>,
    _shares: PromiseOrValue<boolean>,
    _perPeriod: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _moloch,
      _nftAddress,
      _shares,
      _perPeriod,
      _period,
      overrides || {}
    );
  }
  override attach(address: string): ExampleManagerShaman {
    return super.attach(address) as ExampleManagerShaman;
  }
  override connect(signer: Signer): ExampleManagerShaman__factory {
    return super.connect(signer) as ExampleManagerShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleManagerShamanInterface {
    return new utils.Interface(_abi) as ExampleManagerShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleManagerShaman {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleManagerShaman;
  }
}
