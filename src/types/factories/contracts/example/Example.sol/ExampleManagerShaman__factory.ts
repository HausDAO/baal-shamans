/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExampleManagerShaman,
  ExampleManagerShamanInterface,
} from "../../../../contracts/example/Example.sol/ExampleManagerShaman";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_perPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "SetMember",
    type: "event",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106e73803806106e783398101604081905261002f916101bd565b600080546001600160a01b0319166001600160a01b0386161790556003805460ff191684151590811790915560ff16156100fd5760008054906101000a90046001600160a01b03166001600160a01b0316638009ba1f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d89190610207565b600180546001600160a01b0319166001600160a01b0392909216919091179055610193565b60008054906101000a90046001600160a01b03166001600160a01b031663f460124d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561014e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101729190610207565b600180546001600160a01b0319166001600160a01b03929092169190911790555b600455600555506102299050565b80516001600160a01b03811681146101b857600080fd5b919050565b600080600080608085870312156101d357600080fd5b6101dc856101a1565b9350602085015180151581146101f157600080fd5b6040860151606090960151949790965092505050565b60006020828403121561021957600080fd5b610222826101a1565b9392505050565b6104af806102386000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063e5a2a2a51161005b578063e5a2a2a5146100dc578063e852b12914610107578063ef78d4fd14610110578063fc0c546a1461011957600080fd5b806303314efa146100825780634e71d92d146100a4578063c6788bdd146100ae575b600080fd5b60035461008f9060ff1681565b60405190151581526020015b60405180910390f35b6100ac61012c565b005b6100ce6100bc36600461038a565b60026020526000908152604090205481565b60405190815260200161009b565b6000546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b6100ce60055481565b6100ce60045481565b6001546100ef906001600160a01b031681565b6004543360009081526002602052604090205461014990426103ba565b101580610163575033600090815260026020526040902054155b6101b35760405162461bcd60e51b815260206004820181905260248201527f43616e206f6e6c7920636c61696d20312074696d652070657220706572696f64604482015260640160405180910390fd5b60006101be60055490565b90506101ca3382610219565b3360008181526002602090815260409182902042908190558251938452908301527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4910160405180910390a150565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061024f5761024f6103df565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106102a0576102a06103df565b602090810291909101015260035460ff161561031f57600054604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c906102e890859085906004016103f5565b600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b50505050610384565b6000546040516322936c2360e11b81526001600160a01b0390911690634526d8469061035190859085906004016103f5565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505050505b50505050565b60006020828403121561039c57600080fd5b81356001600160a01b03811681146103b357600080fd5b9392505050565b6000828210156103da57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b828110156104375781516001600160a01b031684529284019290840190600101610412565b5050508381038285015284518082528583019183019060005b8181101561046c57835183529284019291840191600101610450565b509097965050505050505056fea26469706673582212203fd3e2bcc5059d614ffa085aa2ab59294a5b9a7c95dac108d97715fb33b9e98264736f6c634300080d0033";

type ExampleManagerShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleManagerShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleManagerShaman__factory extends ContractFactory {
  constructor(...args: ExampleManagerShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _moloch: PromiseOrValue<string>,
    _shares: PromiseOrValue<boolean>,
    _perPeriod: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleManagerShaman> {
    return super.deploy(
      _moloch,
      _shares,
      _perPeriod,
      _period,
      overrides || {}
    ) as Promise<ExampleManagerShaman>;
  }
  override getDeployTransaction(
    _moloch: PromiseOrValue<string>,
    _shares: PromiseOrValue<boolean>,
    _perPeriod: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _moloch,
      _shares,
      _perPeriod,
      _period,
      overrides || {}
    );
  }
  override attach(address: string): ExampleManagerShaman {
    return super.attach(address) as ExampleManagerShaman;
  }
  override connect(signer: Signer): ExampleManagerShaman__factory {
    return super.connect(signer) as ExampleManagerShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleManagerShamanInterface {
    return new utils.Interface(_abi) as ExampleManagerShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleManagerShaman {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleManagerShaman;
  }
}
