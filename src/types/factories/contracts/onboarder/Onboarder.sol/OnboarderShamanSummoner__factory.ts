/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OnboarderShamanSummoner,
  OnboarderShamanSummonerInterface,
} from "../../../../contracts/onboarder/Onboarder.sol/OnboarderShamanSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "onboarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootPerUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiery",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "SummonOnbShamanoarderComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "summonOnboarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106e63803806106e683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610653806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f2ddd931461003b578063a02217021461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461033e565b600080548190610090906001600160a01b0316610161565b60405163f8c4a9f360e01b81529091506001600160a01b0382169063f8c4a9f3906100cd908f908f908f908f908f908d908d908d90600401610493565b600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050508b6001600160a01b03167fe51fa0169484415068ebef127b5352b2e39fe2a98883d9a9c483a53c831647e0828d8d8d8d8d8d8d8d8d60405161014a9a99989796959493929190610500565b60405180910390a29b9a5050505050505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166101fa5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b80356101fa81610605565b600082601f83011261021b57600080fd5b8135602061023061022b836105cb565b61059a565b80838252828201915082860187848660051b890101111561025057600080fd5b60005b8581101561027857813561026681610605565b84529284019290840190600101610253565b5090979650505050505050565b600082601f83011261029657600080fd5b813560206102a661022b836105cb565b80838252828201915082860187848660051b89010111156102c657600080fd5b60005b85811015610278578135845292840192908401906001016102c9565b803580151581146101fa57600080fd5b60008083601f84011261030757600080fd5b50813567ffffffffffffffff81111561031f57600080fd5b60208301915083602082850101111561033757600080fd5b9250929050565b6000806000806000806000806000806101208b8d03121561035e57600080fd5b6103678b6101ff565b995061037560208c016101ff565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff808211156103a757600080fd5b6103b38e838f016102f5565b90975095508591506103c760c08e016102e5565b945060e08d01359150808211156103dd57600080fd5b6103e98e838f0161020a565b93506101008d013591508082111561040057600080fd5b5061040d8d828e01610285565b9150509295989b9194979a5092959850565b600081518084526020808501945080840160005b838110156104585781516001600160a01b031687529582019590820190600101610433565b509495945050505050565b600081518084526020808501945080840160005b8381101561045857815187529582019590820190600101610477565b6001600160a01b0389811682528816602082015260408101879052606081018690526080810185905283151560a082015261010060c082018190526000906104dd8382018661041f565b905082810360e08401526104f18185610463565b9b9a5050505050505050505050565b6001600160a01b038b811682528a16602082015260408101899052606081018890526080810187905261012060a0820181905281018590526000610140868882850137600087840182015285151560c0840152601f19601f8801168301818482030160e08501526105738282018761041f565b9150508281036101008401526105898185610463565b9d9c50505050505050505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156105c3576105c36105ef565b604052919050565b600067ffffffffffffffff8211156105e5576105e56105ef565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461061a57600080fd5b5056fea26469706673582212205809b5f0ad969b57df66afdd144f5cad98666f8fa22977d450e2dd51ce7741d364736f6c63430008070033";

type OnboarderShamanSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnboarderShamanSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnboarderShamanSummoner__factory extends ContractFactory {
  constructor(...args: OnboarderShamanSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnboarderShamanSummoner> {
    return super.deploy(
      _template,
      overrides || {}
    ) as Promise<OnboarderShamanSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  override attach(address: string): OnboarderShamanSummoner {
    return super.attach(address) as OnboarderShamanSummoner;
  }
  override connect(signer: Signer): OnboarderShamanSummoner__factory {
    return super.connect(signer) as OnboarderShamanSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnboarderShamanSummonerInterface {
    return new utils.Interface(_abi) as OnboarderShamanSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShamanSummoner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnboarderShamanSummoner;
  }
}
