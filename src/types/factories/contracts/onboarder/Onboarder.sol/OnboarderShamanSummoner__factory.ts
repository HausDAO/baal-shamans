/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OnboarderShamanSummoner,
  OnboarderShamanSummonerInterface,
} from "../../../../contracts/onboarder/Onboarder.sol/OnboarderShamanSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "onboarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootPerUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiery",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "SummonOnbShamanoarderComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lootPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "summonOnboarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161069f38038061069f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61060c806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f2ddd931461003b578063a02217021461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046102f7565b600080548190610090906001600160a01b0316610161565b60405163f8c4a9f360e01b81529091506001600160a01b0382169063f8c4a9f3906100cd908f908f908f908f908f908d908d908d9060040161044c565b600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050508b6001600160a01b03167fe51fa0169484415068ebef127b5352b2e39fe2a98883d9a9c483a53c831647e0828d8d8d8d8d8d8d8d8d60405161014a9a999897969594939291906104b9565b60405180910390a29b9a5050505050505050505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b80356101be816105be565b919050565b600082601f8301126101d457600080fd5b813560206101e96101e483610584565b610553565b80838252828201915082860187848660051b890101111561020957600080fd5b60005b8581101561023157813561021f816105be565b8452928401929084019060010161020c565b5090979650505050505050565b600082601f83011261024f57600080fd5b8135602061025f6101e483610584565b80838252828201915082860187848660051b890101111561027f57600080fd5b60005b8581101561023157813584529284019290840190600101610282565b803580151581146101be57600080fd5b60008083601f8401126102c057600080fd5b50813567ffffffffffffffff8111156102d857600080fd5b6020830191508360208285010111156102f057600080fd5b9250929050565b6000806000806000806000806000806101208b8d03121561031757600080fd5b6103208b6101b3565b995061032e60208c016101b3565b985060408b0135975060608b0135965060808b0135955060a08b013567ffffffffffffffff8082111561036057600080fd5b61036c8e838f016102ae565b909750955085915061038060c08e0161029e565b945060e08d013591508082111561039657600080fd5b6103a28e838f016101c3565b93506101008d01359150808211156103b957600080fd5b506103c68d828e0161023e565b9150509295989b9194979a5092959850565b600081518084526020808501945080840160005b838110156104115781516001600160a01b0316875295820195908201906001016103ec565b509495945050505050565b600081518084526020808501945080840160005b8381101561041157815187529582019590820190600101610430565b6001600160a01b0389811682528816602082015260408101879052606081018690526080810185905283151560a082015261010060c08201819052600090610496838201866103d8565b905082810360e08401526104aa818561041c565b9b9a5050505050505050505050565b6001600160a01b038b811682528a16602082015260408101899052606081018890526080810187905261012060a0820181905281018590526000610140868882850137600087840182015285151560c0840152601f19601f8801168301818482030160e085015261052c828201876103d8565b915050828103610100840152610542818561041c565b9d9c50505050505050505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561057c5761057c6105a8565b604052919050565b600067ffffffffffffffff82111561059e5761059e6105a8565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146105d357600080fd5b5056fea26469706673582212202e2a8c2b24f95f6a39270b3578281429d8996e211d0c16ea90367ca4b297cc3764736f6c63430008070033";

type OnboarderShamanSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnboarderShamanSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnboarderShamanSummoner__factory extends ContractFactory {
  constructor(...args: OnboarderShamanSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnboarderShamanSummoner> {
    return super.deploy(
      _template,
      overrides || {}
    ) as Promise<OnboarderShamanSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  override attach(address: string): OnboarderShamanSummoner {
    return super.attach(address) as OnboarderShamanSummoner;
  }
  override connect(signer: Signer): OnboarderShamanSummoner__factory {
    return super.connect(signer) as OnboarderShamanSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnboarderShamanSummonerInterface {
    return new utils.Interface(_abi) as OnboarderShamanSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShamanSummoner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnboarderShamanSummoner;
  }
}
