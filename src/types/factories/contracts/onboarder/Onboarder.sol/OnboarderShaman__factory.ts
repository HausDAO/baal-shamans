/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OnboarderShaman,
  OnboarderShamanInterface,
} from "../../../../contracts/onboarder/Onboarder.sol/OnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToGive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToPlatform",
        type: "uint256",
      },
    ],
    name: "YeetReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lootPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onboarder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "onboarder20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506001600081905554610100900460ff16158080156200003557506001805460ff16105b8062000064575062000052306200013c60201b62000ec31760201c565b1580156200006457506001805460ff16145b620000cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff1916811790558015620000ef576001805461ff0019166101001790555b801562000135576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014b565b6001600160a01b03163b151590565b6115ec806200015b6000396000f3fe6080604052600436106100a05760003560e01c8063b73fe9db11610064578063b73fe9db1461015c578063c7271f9a14610172578063e5a2a2a514610192578063e66825c3146101b2578063f8c4a9f3146101c8578063fc0c546a146101e857600080fd5b806303314efa146100b457806345f0a44f146100e35780634c5911b6146101115780637867385f14610127578063b27fb3111461012f57600080fd5b366100af576100ad610208565b005b600080fd5b3480156100c057600080fd5b506005546100ce9060ff1681565b60405190151581526020015b60405180910390f35b3480156100ef57600080fd5b506101036100fe366004611326565b6107c7565b6040519081526020016100da565b34801561011d57600080fd5b5061010360045481565b6100ad610208565b34801561013b57600080fd5b5061014f61014a366004611326565b6107e8565b6040516100da919061133f565b34801561016857600080fd5b5061010360035481565b34801561017e57600080fd5b506100ad61018d366004611326565b610812565b34801561019e57600080fd5b5060085461014f906001600160a01b031681565b3480156101be57600080fd5b5061010360025481565b3480156101d457600080fd5b506100ad6101e33660046111e8565b610d3a565b3480156101f457600080fd5b5060095461014f906001600160a01b031681565b610210610ed2565b6009546001600160a01b0316156102585760405162461bcd60e51b8152602060048201526007602482015266216e617469766560c81b60448201526064015b60405180910390fd5b42600454116102795760405162461bcd60e51b815260040161024f906113f3565b6008546001600160a01b03166102a15760405162461bcd60e51b815260040161024f90611414565b6002543410156102df5760405162461bcd60e51b81526020600482015260096024820152683c206d696e696d756d60b81b604482015260640161024f565b60085460405163f3ae241560e01b81526001600160a01b039091169063f3ae24159061030f90309060040161133f565b602060405180830381600087803b15801561032957600080fd5b505af115801561033d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103619190611309565b6103a65760405162461bcd60e51b815260206004820152601660248201527514da185b585b881b9bdd081dda1a5d195b1a5cdd195960521b604482015260640161024f565b6000600254346103b691906114c2565b90506000600254826103c891906114d6565b90506000600860009054906101000a90046001600160a01b03166001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045491906111c4565b6001600160a01b03168260405160006040518083038185875af1925050503d806000811461049e576040519150601f19603f3d011682016040523d82523d6000602084013e6104a3565b606091505b50509050806104c45760405162461bcd60e51b815260040161024f906113ca565b8134111561053d576000336104d984346114f5565b604051600081818185875af1925050503d8060008114610515576040519150601f19603f3d011682016040523d82523d6000602084013e61051a565b606091505b505090508061053b5760405162461bcd60e51b815260040161024f906113ca565b505b60006003548461054d91906114d6565b90506105593382610f2c565b6006546000906001600160401b038111156105765761057661157d565b60405190808252806020026020018201604052801561059f578160200160208202803683370190505b50905060005b60065481101561061c57600681815481106105c2576105c2611567565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106105f2576105f2611567565b6001600160a01b0390921660209283029190910190910152806106148161150c565b9150506105a5565b5060075460009081906001600160401b0381111561063c5761063c61157d565b604051908082528060200260200182016040528015610665578160200160208202803683370190505b50905060005b60075481101561070257876007828154811061068957610689611567565b906000526020600020015461069e91906114d6565b6106a890846114aa565b925087600782815481106106be576106be611567565b90600052602060002001546106d391906114d6565b8282815181106106e5576106e5611567565b6020908102919091010152806106fa8161150c565b91505061066b565b506008546040516322936c2360e11b81526001600160a01b0390911690634526d846906107359086908590600401611353565b600060405180830381600087803b15801561074f57600080fd5b505af1158015610763573d6000803e3d6000fd5b50506008546040513393507f0487ee333111913d82fd6ce450b3477d3ccd8873334e8a6bfbcedc5789e798bf92506107ac918a916001600160a01b039091169089908890611433565b60405180910390a2505050505050506107c56001600055565b565b600781815481106107d757600080fd5b600091825260209091200154905081565b600681815481106107f857600080fd5b6000918252602090912001546001600160a01b0316905081565b61081a610ed2565b6008546001600160a01b03166108425760405162461bcd60e51b815260040161024f90611414565b42600454116108635760405162461bcd60e51b815260040161024f906113f3565b60085460405163f3ae241560e01b81526001600160a01b039091169063f3ae24159061089390309060040161133f565b602060405180830381600087803b1580156108ad57600080fd5b505af11580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611309565b6109265760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b604482015260640161024f565b6002546109339082611527565b156109705760405162461bcd60e51b815260206004820152600d60248201526c085d985b1a5908185b5bdd5b9d609a1b604482015260640161024f565b60006002548261098091906114c2565b60095460085460408051636a5c1cc960e11b815290519394506001600160a01b03928316936323b872dd933393169163d4b839929160048083019260209291908290030181600087803b1580156109d657600080fd5b505af11580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e91906111c4565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b158015610a5d57600080fd5b505af1158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611309565b610ab15760405162461bcd60e51b815260040161024f906113ca565b600060035482610ac191906114d6565b9050610acd3382610f2c565b6006546000906001600160401b03811115610aea57610aea61157d565b604051908082528060200260200182016040528015610b13578160200160208202803683370190505b50905060005b600654811015610b905760068181548110610b3657610b36611567565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610b6657610b66611567565b6001600160a01b039092166020928302919091019091015280610b888161150c565b915050610b19565b5060075460009081906001600160401b03811115610bb057610bb061157d565b604051908082528060200260200182016040528015610bd9578160200160208202803683370190505b50905060005b600754811015610c76578560078281548110610bfd57610bfd611567565b9060005260206000200154610c1291906114d6565b610c1c90846114aa565b92508560078281548110610c3257610c32611567565b9060005260206000200154610c4791906114d6565b828281518110610c5957610c59611567565b602090810291909101015280610c6e8161150c565b915050610bdf565b506008546040516322936c2360e11b81526001600160a01b0390911690634526d84690610ca99086908590600401611353565b600060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b50506008546040513393507f0487ee333111913d82fd6ce450b3477d3ccd8873334e8a6bfbcedc5789e798bf9250610d20918a916001600160a01b039091169089908890611433565b60405180910390a25050505050610d376001600055565b50565b600154610100900460ff1615808015610d5757506001805460ff16105b80610d775750610d6630610ec3565b158015610d7757506001805460ff16145b610dda5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161024f565b6001805460ff1916811790558015610dfc576001805461ff0019166101001790555b600880546001600160a01b03808c166001600160a01b03199283161790925560098054928b16929091169190911790556002879055600386905560048590556005805485151560ff199091161790558251610e5e90600690602086019061109d565b508151610e72906007906020850190611102565b508015610eb8576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03163b151590565b60026000541415610f255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161024f565b6002600055565b604080516001808252818301909252600091602080830190803683370190505090508281600081518110610f6257610f62611567565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508281600081518110610fb357610fb3611567565b602090810291909101015260055460ff161561103257600854604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c90610ffb9085908590600401611353565b600060405180830381600087803b15801561101557600080fd5b505af1158015611029573d6000803e3d6000fd5b50505050611097565b6008546040516322936c2360e11b81526001600160a01b0390911690634526d846906110649085908590600401611353565b600060405180830381600087803b15801561107e57600080fd5b505af1158015611092573d6000803e3d6000fd5b505050505b50505050565b8280548282559060005260206000209081019282156110f2579160200282015b828111156110f257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906110bd565b506110fe92915061113d565b5090565b8280548282559060005260206000209081019282156110f2579160200282015b828111156110f2578251825591602001919060010190611122565b5b808211156110fe576000815560010161113e565b600082601f83011261116357600080fd5b8135602061117861117383611487565b611457565b80838252828201915082860187848660051b890101111561119857600080fd5b60005b858110156111b75781358452928401929084019060010161119b565b5090979650505050505050565b6000602082840312156111d657600080fd5b81516111e181611593565b9392505050565b600080600080600080600080610100898b03121561120557600080fd5b883561121081611593565b9750602089013561122081611593565b965060408901359550606089013594506080890135935060a0890135611245816115a8565b925060c08901356001600160401b038082111561126157600080fd5b818b0191508b601f83011261127557600080fd5b813561128361117382611487565b80828252602082019150602085018f60208560051b88010111156112a657600080fd5b600095505b838610156112d35780356112be81611593565b835260019590950194602092830192016112ab565b509550505060e08b01359150808211156112ec57600080fd5b506112f98b828c01611152565b9150509295985092959890939650565b60006020828403121561131b57600080fd5b81516111e1816115a8565b60006020828403121561133857600080fd5b5035919050565b6001600160a01b0391909116815260200190565b604080825283519082018190526000906020906060840190828701845b828110156113955781516001600160a01b031684529284019290840190600101611370565b5050508381038285015284518082528583019183019060005b818110156111b7578351835292840192918401916001016113ae565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252600790820152666578706965727960c81b604082015260600190565b602080825260059082015264085a5b9a5d60da1b604082015260600190565b9384526001600160a01b039290921660208401526040830152606082015260800190565b604051601f8201601f191681016001600160401b038111828210171561147f5761147f61157d565b604052919050565b60006001600160401b038211156114a0576114a061157d565b5060051b60200190565b600082198211156114bd576114bd61153b565b500190565b6000826114d1576114d1611551565b500490565b60008160001904831182151516156114f0576114f061153b565b500290565b6000828210156115075761150761153b565b500390565b60006000198214156115205761152061153b565b5060010190565b60008261153657611536611551565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d3757600080fd5b8015158114610d3757600080fdfea2646970667358221220068f5bf19b1a4e676397d8c2746cfc4414031366e3f4efbab692eade0e170bba64736f6c63430008070033";

type OnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnboarderShaman__factory extends ContractFactory {
  constructor(...args: OnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<OnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OnboarderShaman {
    return super.attach(address) as OnboarderShaman;
  }
  override connect(signer: Signer): OnboarderShaman__factory {
    return super.connect(signer) as OnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnboarderShamanInterface {
    return new utils.Interface(_abi) as OnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShaman {
    return new Contract(address, _abi, signerOrProvider) as OnboarderShaman;
  }
}
