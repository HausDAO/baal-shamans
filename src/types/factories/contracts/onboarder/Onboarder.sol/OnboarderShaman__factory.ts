/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OnboarderShaman,
  OnboarderShamanInterface,
} from "../../../../contracts/onboarder/Onboarder.sol/OnboarderShaman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToGive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lootToPlatform",
        type: "uint256",
      },
    ],
    name: "YeetReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "amounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBAAL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cuts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moloch",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiery",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shares",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_cuts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lootPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onboarder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "onboarder20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506001600081905554610100900460ff16158080156200003557506001805460ff16105b8062000064575062000052306200013c60201b62000f7e1760201c565b1580156200006457506001805460ff16145b620000cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6001805460ff1916811790558015620000ef576001805461ff0019166101001790555b801562000135576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014b565b6001600160a01b03163b151590565b6115d6806200015b6000396000f3fe6080604052600436106100a05760003560e01c8063b73fe9db11610064578063b73fe9db14610167578063c7271f9a1461017d578063e5a2a2a51461019d578063e66825c3146101bd578063f8c4a9f3146101d3578063fc0c546a146101f357600080fd5b806303314efa146100b457806345f0a44f146100e35780634c5911b6146101115780637867385f14610127578063b27fb3111461012f57600080fd5b366100af576100ad610213565b005b600080fd5b3480156100c057600080fd5b506005546100ce9060ff1681565b60405190151581526020015b60405180910390f35b3480156100ef57600080fd5b506101036100fe3660046111b3565b610835565b6040519081526020016100da565b34801561011d57600080fd5b5061010360045481565b6100ad610213565b34801561013b57600080fd5b5061014f61014a3660046111b3565b610856565b6040516001600160a01b0390911681526020016100da565b34801561017357600080fd5b5061010360035481565b34801561018957600080fd5b506100ad6101983660046111b3565b610880565b3480156101a957600080fd5b5060085461014f906001600160a01b031681565b3480156101c957600080fd5b5061010360025481565b3480156101df57600080fd5b506100ad6101ee3660046112c8565b610dfc565b3480156101ff57600080fd5b5060095461014f906001600160a01b031681565b60026000540361026a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556009546001600160a01b0316156102b25760405162461bcd60e51b8152602060048201526007602482015266216e617469766560c81b6044820152606401610261565b42600454116102ed5760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610261565b6008546001600160a01b031661032d5760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610261565b60025434101561036b5760405162461bcd60e51b81526020600482015260096024820152683c206d696e696d756d60b81b6044820152606401610261565b60085460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae2415906024016020604051808303816000875af11580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906113e1565b61041e5760405162461bcd60e51b815260206004820152601660248201527514da185b585b881b9bdd081dda1a5d195b1a5cdd195960521b6044820152606401610261565b60006002543461042e9190611431565b90506000600254826104409190611445565b90506000600860009054906101000a90046001600160a01b03166001600160a01b031663d4b839926040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190611464565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b505090508061052d5760405162461bcd60e51b815260040161026190611481565b813411156105a65760003361054284346114aa565b604051600081818185875af1925050503d806000811461057e576040519150601f19603f3d011682016040523d82523d6000602084013e610583565b606091505b50509050806105a45760405162461bcd60e51b815260040161026190611481565b505b6000600354846105b69190611445565b90506105c23382610f8d565b60065460009067ffffffffffffffff8111156105e0576105e06111f2565b604051908082528060200260200182016040528015610609578160200160208202803683370190505b50905060005b600654811015610686576006818154811061062c5761062c6114c1565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061065c5761065c6114c1565b6001600160a01b03909216602092830291909101909101528061067e816114d7565b91505061060f565b50600754600090819067ffffffffffffffff8111156106a7576106a76111f2565b6040519080825280602002602001820160405280156106d0578160200160208202803683370190505b50905060005b60075481101561076d5787600782815481106106f4576106f46114c1565b90600052602060002001546107099190611445565b61071390846114f0565b92508760078281548110610729576107296114c1565b906000526020600020015461073e9190611445565b828281518110610750576107506114c1565b602090810291909101015280610765816114d7565b9150506106d6565b506008546040516322936c2360e11b81526001600160a01b0390911690634526d846906107a09086908590600401611508565b600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b5050600854604080518a81526001600160a01b0390921660208301528101879052606081018590523392507f0487ee333111913d82fd6ce450b3477d3ccd8873334e8a6bfbcedc5789e798bf915060800160405180910390a2505060016000555050505050565b6007818154811061084557600080fd5b600091825260209091200154905081565b6006818154811061086657600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600054036108d25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610261565b60026000556008546001600160a01b03166109175760405162461bcd60e51b8152602060048201526005602482015264085a5b9a5d60da1b6044820152606401610261565b42600454116109525760405162461bcd60e51b81526020600482015260076024820152666578706965727960c81b6044820152606401610261565b60085460405163f3ae241560e01b81523060048201526001600160a01b039091169063f3ae2415906024016020604051808303816000875af115801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c091906113e1565b610a015760405162461bcd60e51b815260206004820152601260248201527129b430b6b0b7103737ba1036b0b730b3b2b960711b6044820152606401610261565b600254610a0e908261158c565b15610a4b5760405162461bcd60e51b815260206004820152600d60248201526c085d985b1a5908185b5bdd5b9d609a1b6044820152606401610261565b600060025482610a5b9190611431565b60095460085460408051636a5c1cc960e11b815290519394506001600160a01b03928316936323b872dd933393169163d4b8399291600480830192602092919082900301816000875af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190611464565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303816000875af1158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5291906113e1565b610b6e5760405162461bcd60e51b815260040161026190611481565b600060035482610b7e9190611445565b9050610b8a3382610f8d565b60065460009067ffffffffffffffff811115610ba857610ba86111f2565b604051908082528060200260200182016040528015610bd1578160200160208202803683370190505b50905060005b600654811015610c4e5760068181548110610bf457610bf46114c1565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610c2457610c246114c1565b6001600160a01b039092166020928302919091019091015280610c46816114d7565b915050610bd7565b50600754600090819067ffffffffffffffff811115610c6f57610c6f6111f2565b604051908082528060200260200182016040528015610c98578160200160208202803683370190505b50905060005b600754811015610d35578560078281548110610cbc57610cbc6114c1565b9060005260206000200154610cd19190611445565b610cdb90846114f0565b92508560078281548110610cf157610cf16114c1565b9060005260206000200154610d069190611445565b828281518110610d1857610d186114c1565b602090810291909101015280610d2d816114d7565b915050610c9e565b506008546040516322936c2360e11b81526001600160a01b0390911690634526d84690610d689086908590600401611508565b600060405180830381600087803b158015610d8257600080fd5b505af1158015610d96573d6000803e3d6000fd5b5050600854604080518a81526001600160a01b0390921660208301528101879052606081018590523392507f0487ee333111913d82fd6ce450b3477d3ccd8873334e8a6bfbcedc5789e798bf915060800160405180910390a25050600160005550505050565b600154610100900460ff1615808015610e1957506001805460ff16105b80610e325750303b158015610e3257506001805460ff16145b610e955760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610261565b6001805460ff1916811790558015610eb7576001805461ff0019166101001790555b600880546001600160a01b03808c166001600160a01b03199283161790925560098054928b16929091169190911790556002879055600386905560048590556005805485151560ff199091161790558251610f199060069060208601906110fe565b508151610f2d906007906020850190611163565b508015610f73576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03163b151590565b604080516001808252818301909252600091602080830190803683370190505090508281600081518110610fc357610fc36114c1565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508281600081518110611014576110146114c1565b602090810291909101015260055460ff161561109357600854604051632c78fd0360e21b81526001600160a01b039091169063b1e3f40c9061105c9085908590600401611508565b600060405180830381600087803b15801561107657600080fd5b505af115801561108a573d6000803e3d6000fd5b505050506110f8565b6008546040516322936c2360e11b81526001600160a01b0390911690634526d846906110c59085908590600401611508565b600060405180830381600087803b1580156110df57600080fd5b505af11580156110f3573d6000803e3d6000fd5b505050505b50505050565b828054828255906000526020600020908101928215611153579160200282015b8281111561115357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061111e565b5061115f92915061119e565b5090565b828054828255906000526020600020908101928215611153579160200282015b82811115611153578251825591602001919060010190611183565b5b8082111561115f576000815560010161119f565b6000602082840312156111c557600080fd5b5035919050565b6001600160a01b03811681146111e157600080fd5b50565b80151581146111e157600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611231576112316111f2565b604052919050565b600067ffffffffffffffff821115611253576112536111f2565b5060051b60200190565b600082601f83011261126e57600080fd5b8135602061128361127e83611239565b611208565b82815260059290921b840181019181810190868411156112a257600080fd5b8286015b848110156112bd57803583529183019183016112a6565b509695505050505050565b600080600080600080600080610100898b0312156112e557600080fd5b88356112f0816111cc565b9750602089810135611301816111cc565b975060408a0135965060608a0135955060808a0135945060a08a0135611326816111e4565b935060c08a013567ffffffffffffffff8082111561134357600080fd5b818c0191508c601f83011261135757600080fd5b813561136561127e82611239565b81815260059190911b8301840190848101908f83111561138457600080fd5b938501935b828510156113ab57843561139c816111cc565b82529385019390850190611389565b9650505060e08c01359250808311156113c357600080fd5b50506113d18b828c0161125d565b9150509295985092959890939650565b6000602082840312156113f357600080fd5b81516113fe816111e4565b9392505050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261144057611440611405565b500490565b600081600019048311821515161561145f5761145f61141b565b500290565b60006020828403121561147657600080fd5b81516113fe816111cc565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6000828210156114bc576114bc61141b565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600182016114e9576114e961141b565b5060010190565b600082198211156115035761150361141b565b500190565b604080825283519082018190526000906020906060840190828701845b8281101561154a5781516001600160a01b031684529284019290840190600101611525565b5050508381038285015284518082528583019183019060005b8181101561157f57835183529284019291840191600101611563565b5090979650505050505050565b60008261159b5761159b611405565b50069056fea2646970667358221220d827b4fd348899f2c7f7df7b5e47a9e1da1e14b5306945b09710eae09754f83b64736f6c634300080d0033";

type OnboarderShamanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnboarderShamanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnboarderShaman__factory extends ContractFactory {
  constructor(...args: OnboarderShamanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnboarderShaman> {
    return super.deploy(overrides || {}) as Promise<OnboarderShaman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OnboarderShaman {
    return super.attach(address) as OnboarderShaman;
  }
  override connect(signer: Signer): OnboarderShaman__factory {
    return super.connect(signer) as OnboarderShaman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnboarderShamanInterface {
    return new utils.Interface(_abi) as OnboarderShamanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShaman {
    return new Contract(address, _abi, signerOrProvider) as OnboarderShaman;
  }
}
