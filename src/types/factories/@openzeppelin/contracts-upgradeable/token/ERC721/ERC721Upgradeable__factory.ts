/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Upgradeable,
  ERC721UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061119b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461016757806370a082311461017a57806395d89b411461019b578063a22cb465146101a3578063b88d4fde146101b6578063c87b56dd146101c9578063e985e9c5146101dc57600080fd5b806301ffc9a7146100c457806306fdde03146100ec578063081812fc14610101578063095ea7b31461012c57806323b872dd1461014157806342842e0e14610154575b600080fd5b6100d76100d2366004610e79565b6101ef565b60405190151581526020015b60405180910390f35b6100f4610241565b6040516100e39190610f64565b61011461010f366004610eb3565b6102d3565b6040516001600160a01b0390911681526020016100e3565b61013f61013a366004610e4f565b6102fa565b005b61013f61014f366004610cfb565b610415565b61013f610162366004610cfb565b610446565b610114610175366004610eb3565b610461565b61018d610188366004610cad565b610496565b6040519081526020016100e3565b6100f461051c565b61013f6101b1366004610e13565b61052b565b61013f6101c4366004610d37565b61053a565b6100f46101d7366004610eb3565b610572565b6100d76101ea366004610cc8565b6105e6565b60006001600160e01b031982166380ac58cd60e01b148061022057506001600160e01b03198216635b5e139f60e01b145b8061023b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060658054610250906110e8565b80601f016020809104026020016040519081016040528092919081815260200182805461027c906110e8565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905090565b60006102de82610614565b506000908152606960205260409020546001600160a01b031690565b600061030582610461565b9050806001600160a01b0316836001600160a01b031614156103785760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610394575061039481336105e6565b6104065760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161036f565b610410838361064b565b505050565b61041f33826106b9565b61043b5760405162461bcd60e51b815260040161036f90610f77565b610410838383610718565b6104108383836040518060200160405280600081525061053a565b6000818152606760205260408120546001600160a01b03168061023b5760405162461bcd60e51b815260040161036f9061105b565b60006001600160a01b0382166105005760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161036f565b506001600160a01b031660009081526068602052604090205490565b606060668054610250906110e8565b610536338383610889565b5050565b61054433836106b9565b6105605760405162461bcd60e51b815260040161036f90610f77565b61056c84848484610954565b50505050565b606061057d82610614565b600061059460408051602081019091526000815290565b905060008151116105b457604051806020016040528060008152506105df565b806105be84610987565b6040516020016105cf929190610ef8565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6000818152606760205260409020546001600160a01b03166106485760405162461bcd60e51b815260040161036f9061105b565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061068082610461565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806106c583610461565b9050806001600160a01b0316846001600160a01b031614806106ec57506106ec81856105e6565b806107105750836001600160a01b0316610705846102d3565b6001600160a01b0316145b949350505050565b826001600160a01b031661072b82610461565b6001600160a01b0316146107515760405162461bcd60e51b815260040161036f90611016565b6001600160a01b0382166107b35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161036f565b6107c08383836001610a24565b826001600160a01b03166107d382610461565b6001600160a01b0316146107f95760405162461bcd60e51b815260040161036f90611016565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156108e75760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161036f565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61095f848484610718565b61096b84848484610aac565b61056c5760405162461bcd60e51b815260040161036f90610fc4565b6060600061099483610bb9565b600101905060008167ffffffffffffffff8111156109b4576109b4611139565b6040519080825280601f01601f1916602001820160405280156109de576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a1757610a1c565b6109e8565b509392505050565b600181111561056c576001600160a01b03841615610a6a576001600160a01b03841660009081526068602052604081208054839290610a649084906110a5565b90915550505b6001600160a01b0383161561056c576001600160a01b03831660009081526068602052604081208054839290610aa190849061108d565b909155505050505050565b60006001600160a01b0384163b15610bae57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610af0903390899088908890600401610f27565b602060405180830381600087803b158015610b0a57600080fd5b505af1925050508015610b3a575060408051601f3d908101601f19168201909252610b3791810190610e96565b60015b610b94573d808015610b68576040519150601f19603f3d011682016040523d82523d6000602084013e610b6d565b606091505b508051610b8c5760405162461bcd60e51b815260040161036f90610fc4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610710565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bf85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c24576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c4257662386f26fc10000830492506010015b6305f5e1008310610c5a576305f5e100830492506008015b6127108310610c6e57612710830492506004015b60648310610c80576064830492506002015b600a831061023b5760010192915050565b80356001600160a01b0381168114610ca857600080fd5b919050565b600060208284031215610cbf57600080fd5b6105df82610c91565b60008060408385031215610cdb57600080fd5b610ce483610c91565b9150610cf260208401610c91565b90509250929050565b600080600060608486031215610d1057600080fd5b610d1984610c91565b9250610d2760208501610c91565b9150604084013590509250925092565b60008060008060808587031215610d4d57600080fd5b610d5685610c91565b9350610d6460208601610c91565b925060408501359150606085013567ffffffffffffffff80821115610d8857600080fd5b818701915087601f830112610d9c57600080fd5b813581811115610dae57610dae611139565b604051601f8201601f19908116603f01168101908382118183101715610dd657610dd6611139565b816040528281528a6020848701011115610def57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e2657600080fd5b610e2f83610c91565b915060208301358015158114610e4457600080fd5b809150509250929050565b60008060408385031215610e6257600080fd5b610e6b83610c91565b946020939093013593505050565b600060208284031215610e8b57600080fd5b81356105df8161114f565b600060208284031215610ea857600080fd5b81516105df8161114f565b600060208284031215610ec557600080fd5b5035919050565b60008151808452610ee48160208601602086016110bc565b601f01601f19169290920160200192915050565b60008351610f0a8184602088016110bc565b835190830190610f1e8183602088016110bc565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f5a90830184610ecc565b9695505050505050565b6020815260006105df6020830184610ecc565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b600082198211156110a0576110a0611123565b500190565b6000828210156110b7576110b7611123565b500390565b60005b838110156110d75781810151838201526020016110bf565b8381111561056c5750506000910152565b600181811c908216806110fc57607f821691505b6020821081141561111d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461064857600080fdfea2646970667358221220ad95286781bda7b46338881492121a11c3e816fa0330f2811b631608d6ff409464736f6c63430008070033";

type ERC721UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC721UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Upgradeable {
    return super.attach(address) as ERC721Upgradeable;
  }
  override connect(signer: Signer): ERC721Upgradeable__factory {
    return super.connect(signer) as ERC721Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;
  }
}
